<Item class="Model" referent="RBX4D42E3D2C22949A0AC410677C1653A5F">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">184757948</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBX157D4A2821BB4C59BFD1475F964FB6D7">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>0</X>
						<Y>0</Y>
						<Z>2</Z>
						<R00>-1</R00>
						<R01>0</R01>
						<R02>8.10038e-06</R02>
						<R10>-8.10038e-06</R10>
						<R11>0</R11>
						<R12>-1</R12>
						<R20>0</R20>
						<R21>-1</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">BlackKnightSword</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=183842637</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>39.7079964</X>
							<Y>5.4529438</Y>
							<Z>-65.6562576</Z>
							<R00>-0.279289693</R00>
							<R01>0.691702724</R01>
							<R02>0.665991187</R02>
							<R10>5.30882744e-07</R10>
							<R11>0.693591535</R11>
							<R12>-0.720368385</R12>
							<R20>-0.960206747</R20>
							<R21>-0.201191112</R21>
							<R22>-0.193713337</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX9F96EB2F65D94E819697B6286A879E21">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>39.7079964</X>
							<Y>5.4529438</Y>
							<Z>-65.6562576</Z>
							<R00>-0.279289693</R00>
							<R01>0.691702724</R01>
							<R02>0.665991187</R02>
							<R10>5.30882744e-07</R10>
							<R11>0.693591535</R11>
							<R12>-0.720368385</R12>
							<R20>-0.960206747</R20>
							<R21>-0.201191112</R21>
							<R22>-0.193713337</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>0.25</X>
							<Y>1</Y>
							<Z>6.5</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX0E96F942DB9D4E2E89BBF2D5208C6BF3">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset?id=183842572</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset?id=183842620</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX870EBC4515F948BB8C3F85A760000F18">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Lunge</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>rbxasset://sounds/swordlunge.wav</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.600000024</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX30346DBCB50B4BC0AC18C665B9A5B7DB">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Slash</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>rbxasset://sounds/swordslash.wav</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.699999988</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX2E4D990A92004FAAB5F45C096CEB0D07">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Unsheath</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>rbxasset://sounds/unsheath.wav</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX50736A3490A844E79770AA762F30CE04">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">ShockWave</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset?id=96478505</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Script" referent="RBXE0A36B8F82AD4CC59DC0A20E6446E1CF">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{D63F57D0-AFCF-40BF-ADB7-6266953D92DC}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

BasePart = Instance.new("Part")
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

Animations = {
	LeftSlash = {Animation = Tool:WaitForChild("LeftSlash"), FadeTime = nil, Weight = nil, Speed = nil, Duration = 0.75, Damage = 15},
	RightSlash = {Animation = Tool:WaitForChild("RightSlash"), FadeTime = nil, Weight = nil, Speed = nil, Duration = 0.75, Damage = 15},
}

Sounds = {
	Unsheath = Handle:WaitForChild("Unsheath"),
	Slash = Handle:WaitForChild("Slash"),
	Lunge = Handle:WaitForChild("Lunge"),
	ShockWave = Handle:WaitForChild("ShockWave")
}

Gravity = 196.20

Damage = 5

Equipped = false

SecondaryAttack = {
	Enabled = true,
	Active = false,
	ReloadTime = 5
}

CurrentAnimation = nil

SpecialAttacks = {
	Enabled = true,
	Active = false,
	ReloadTime = 5,
	Strike = {
		Enabled = true,
		Active = false,
		Duration = 20,
		ReloadTime = 20,
		Damage = 5,
	},
	Throw = {
		Enabled = true,
		Active = false,
		ReloadTime = 20,
		Damage = 5,
		TouchDamage = 15,
		Damage = 5,
		Radius = 50
	}
}

ServerControl = (Tool:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Tool

Tool.Enabled = true

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if player == Player and Equipped and CheckIfAlive() then
		if Mode == "KeyPress" and SpecialAttacks.Enabled and not SpecialAttacks.Active and Tool.Enabled then
			local Key = Value.Key
			local Down = Value.Down
			local SpecialAttack = nil
			if Key == "q" and Down then

				SpecialAttack = SpecialAttacks.Strike

				if SpecialAttack.Enabled and not SpecialAttack.Active then

					SpecialAttacks.Enabled = false
					SpecialAttacks.Active = true

					SpecialAttack.Enabled = false
					SpecialAttack.Active = true

					local CurrentlyEquipped = true
					if ActivatedToolUnequipped then
						ActivatedToolUnequipped:disconnect()
					end
					ActivatedToolUnequipped = Tool.Unequipped:connect(function()
						CurrentlyEquipped = false
						if ActivatedToolUnequipped then
							ActivatedToolUnequipped:disconnect()
						end
					end)
					local MousePosition = InvokeClient("MousePosition")
					local Swords = {}
					local SwordClone = Handle:Clone()
					SwordClone.Name = "Sword"
					SwordClone.Size = (SwordClone.Size * 2)
					SwordClone.Mesh.Scale = (SwordClone.Mesh.Scale * 2)
					SwordClone.CanCollide = true
					table.insert(Swords, SwordClone)
					for i = 1, math.random(75, 100) do
						local SecondarySword = SwordClone:Clone()
						SecondarySword.Size = (SecondarySword.Size / 4)
						SecondarySword.Mesh.Scale = (SecondarySword.Mesh.Scale / 4)
						table.insert(Swords, SecondarySword)
					end
					local OriginalStartPosition = Head.Position + Vector3.new(0, 1, 0) * 25
					for i, v in pairs(Swords) do
						if v then
							local Mass = (v:GetMass() * Gravity * 2)
							local BodyPosition = Instance.new("BodyPosition")
							BodyPosition.maxForce = Vector3.new(Mass, Mass, Mass)
							BodyPosition.position = OriginalStartPosition
							BodyPosition.Parent = v
							local BodyGyro = Instance.new("BodyGyro")
							BodyGyro.maxTorque = Vector3.new(math.huge, math.huge, math.huge)
							BodyGyro.Parent = v
							local BodyVelocity = Instance.new("BodyVelocity")
							BodyVelocity.maxForce = Vector3.new(0, 0, 0)
							BodyVelocity.Parent = v
							local Radius = 10
							local Offset = ((v ~= SwordClone and Vector3.new((math.random(-(Radius * 100), (Radius * 100)) * 0.01), (math.random(-(Radius * 100), (Radius * 100)) * 0.01), (math.random(-(Radius * 100), (Radius * 100)) * 0.01))) or Vector3.new(0, 0, 0))
							Swords[i] = {Sword = v, Mass = Mass, BodyPosition = BodyPosition, BodyGyro = BodyGyro, BodyVelocity = BodyVelocity, Offset = Offset}
							v.CFrame = CFrame.new(OriginalStartPosition + Offset)
							Debris:AddItem(v, 30)
							v.Parent = game:GetService("Workspace")
						end
					end
					local WaitTick = tick()
					while (tick() - WaitTick) &lt; 3 and CurrentlyEquipped do
						MousePosition = InvokeClient("MousePosition")
						for i, v in pairs(Swords) do
							if v.Sword and v.Sword.Parent then
								local StartPosition = (Vector3.new(Head.Position.X, OriginalStartPosition.Y, Head.Position.Z) + v.Offset)
								local Direction = CFrame.new(StartPosition, MousePosition)
								v.BodyPosition.position = StartPosition
								v.BodyVelocity.velocity = Direction.lookVector * 250
								v.BodyGyro.cframe = Direction
							end
						end
						wait()
					end
					if CurrentlyEquipped then
						for i, v in pairs(Swords) do
							if v.Sword and v.Sword.Parent then
								local Untouched = true
								v.Sword.Touched:connect(function(Hit)
									if not Hit or not Hit.Parent or Hit.Name == "Sword" then
										return
									end
									local character = Hit.Parent
									if character:IsA("Hat") or character:IsA("Tool") then
										character = character.Parent
									end
									if character == Character then
										return
									end
									local humanoid = character:FindFirstChild("Humanoid")
									if humanoid and humanoid.Health &gt; 0 then
										UntagHumanoid(humanoid)
										TagHumanoid(humanoid, Player)
										humanoid:TakeDamage(((v.Sword == SwordClone and humanoid.MaxHealth) or SpecialAttack.Damage))
									end
									if Untouched then
										local BodyPosition = Instance.new("BodyPosition")
										BodyPosition.maxForce = Vector3.new(math.huge, math.huge, math.huge)
										BodyPosition.position = v.Sword.Position
										BodyPosition.Parent = v.Sword
										v.Sword.Velocity = Vector3.new(0, 0, 0)
										v.Sword.RotVelocity = Vector3.new(0, 0, 0)
										Untouched = false
									end
								end)
							end
						end
						for i = 1, #Swords do
							for ii = 1, math.random(2, 10) do
								local v = Swords[ii]
								if v and v.Sword and v.Sword.Parent then
									v.Sword.CFrame = CFrame.new(v.Sword.Position, MousePosition)
									v.BodyVelocity.maxForce = Vector3.new(v.Mass, v.Mass, v.Mass)
									v.Sword.Velocity = (v.BodyVelocity.velocity / 2)
									if v.BodyPosition and v.BodyPosition.Parent then
										v.BodyPosition:Destroy()
									end
								end
								table.remove(Swords, ii)
							end
							wait(0.1)
						end
						Delay(3, function()
							for i, v in pairs(Swords) do
								if v.Sword and v.Sword.Parent then
									v.Sword:Destroy()
								end
							end
						end)
					else
						for i, v in pairs(Swords) do
							if v.Sword and v.Sword.Parent then
								v.Sword:Destroy()
							end
						end
					end
					SpecialAttack.Active = false
					SpecialAttacks.Active = false
					Delay(SpecialAttack.ReloadTime, function()
						SpecialAttack.Enabled = true
					end)
				end
			elseif Key == "e" and Down then

				SpecialAttack = SpecialAttacks.Throw

				if SpecialAttack.Enabled and not SpecialAttack.Active then

					SpecialAttacks.Enabled = false
					SpecialAttacks.Active = true

					SpecialAttack.Enabled = false
					SpecialAttack.Active = true

					local CurrentlyEquipped = true
					if ActivatedToolUnequipped then
						ActivatedToolUnequipped:disconnect()
					end
					ActivatedToolUnequipped = Tool.Unequipped:connect(function()
						CurrentlyEquipped = false
						if ActivatedToolUnequipped then
							ActivatedToolUnequipped:disconnect()
						end
					end)

					local MousePosition = InvokeClient("MousePosition")
					local Distance = (Handle.Position - MousePosition).magnitude
					SwordClone = Handle:Clone()
					SwordClone.Name = "Sword"
					SwordClone.CanCollide = true
					SwordClone.Size = (SwordClone.Size * 3)
					SwordClone.Mesh.Scale = (SwordClone.Mesh.Scale * 3)
					local Mass = (SwordClone:GetMass() * Gravity * 2)
					local BodyPosition = Instance.new("BodyPosition")
					BodyPosition.maxForce = Vector3.new(math.huge, math.huge, math.huge)
					BodyPosition.position = Head.Position + Vector3.new(0, 1, 0) * (Distance / 2)
					BodyPosition.position = BodyPosition.position + CFrame.new(BodyPosition.position, Vector3.new(MousePosition.X, BodyPosition.position.Y, MousePosition.Z)).lookVector * (Distance / 2)
					BodyPosition.Parent = SwordClone
					local BodyGyro = Instance.new("BodyGyro")
					BodyGyro.maxTorque = Vector3.new(math.huge, math.huge, math.huge)
					BodyGyro.cframe = CFrame.new(SwordClone.Position) * CFrame.Angles(-(math.pi / 2), 0, 0)
					BodyGyro.Parent = SwordClone
					SwordClone.CFrame = Handle.CFrame
					Debris:AddItem(SwordClone, 20)
					SwordClone.Parent = game:GetService("Workspace")
					wait(5)
					if CurrentlyEquipped then
						local Direction = CFrame.new(SwordClone.Position, MousePosition)
						BodyGyro.cframe = Direction
						local BodyVelocity = Instance.new("BodyVelocity")
						BodyVelocity.maxForce = Vector3.new(Mass, Mass, Mass)
						BodyVelocity.velocity = Direction.lookVector * 500
						SwordClone.Velocity = BodyVelocity.velocity
						if BodyPosition and BodyPosition.Parent then
							BodyPosition:Destroy()
						end
						local Untouched = true
						SwordClone.Touched:connect(function(Hit)
							if not Hit or not Hit.Parent or Hit.Name == "Sword" then
								return
							end
							local character = Hit.Parent
							if character:IsA("Hat") or character:IsA("Tool") then
								character = character.Parent
							end
							if character == Character then
								return
							end
							local humanoid = character:FindFirstChild("Humanoid")
							if humanoid and humanoid.Health &gt; 0 then
								UntagHumanoid(humanoid)
								TagHumanoid(humanoid, Player)
								humanoid:TakeDamage(SpecialAttack.TouchDamage)
							end
							if Untouched then
								Untouched = false
								local BodyPosition = Instance.new("BodyPosition")
								BodyPosition.maxForce = Vector3.new(math.huge, math.huge, math.huge)
								BodyPosition.position = SwordClone.Position
								BodyPosition.Parent = SwordClone
								SwordClone.Velocity = Vector3.new(0, 0, 0)
								SwordClone.RotVelocity = Vector3.new(0, 0, 0)
								local ShockWave = BasePart:Clone()
								ShockWave.Name = "ShockWave"
								ShockWave.Transparency = 1
								ShockWave.Size = Vector3.new(0.2, 4, 0.2)
								ShockWave.Anchored = true
								ShockWave.CanCollide = false
								local Mesh = Instance.new("SpecialMesh")
								Mesh.MeshType = Enum.MeshType.Brick
								Mesh.Scale = Vector3.new(1, 0, 1)
								Mesh.Parent = ShockWave
								local ShockWaveTransparency = 0.125
								for i = 1, 2 do
									local Decal = Instance.new("Decal")
									Decal.Texture = "http://www.roblox.com/asset?id=183210124"
									Decal.Transparency = ShockWaveTransparency
									Decal.Face = ((i == 1 and Enum.NormalId.Top) or Enum.NormalId.Bottom)
									Decal.Parent = ShockWave
								end

								local ShockWaveCFrame = (CFrame.new(SwordClone.Position) - Vector3.new(0, (SwordClone.Size.Z / 4), 0)) * CFrame.Angles(math.pi, 0, 0)

								Debris:AddItem(ShockWave, 5)

								local Sound = Sounds.ShockWave:Clone()
								Sound.Parent = SwordClone
								Sound:Play()

								ShockWave.Parent = game:GetService("Workspace")
								ShockWave.CFrame = CFrame.new(Handle.Position)

								ShockWave.Touched:connect(function(Hit)
									if not Hit or not Hit.Parent then
										return
									end
									local character = Hit.Parent
									if character:IsA("Hat") or character:IsA("Tool") then
										character = character.Parent
									end
									if character == Character then
										return
									end
									local humanoid = character:FindFirstChild("Humanoid")
									local torso = character:FindFirstChild("Torso")
									if not humanoid or humanoid.Health == 0 or not Torso then
										return
									end
									UntagHumanoid(humanoid)
									TagHumanoid(humanoid, Player)
									humanoid:TakeDamage(SpecialAttack.Damage)
									humanoid.Sit = true
									local PushBack = CFrame.new(torso.Position, ShockWave.Position).lookVector * -50
									PushBack = Vector3.new(PushBack.X, -math.random(10, 50), PushBack.Z)
									torso.Velocity = PushBack
								end)

								local Radius = 50
								local Transparency = (1 - ShockWaveTransparency)
								for i = 1, 25 do
									if ShockWave and ShockWave.Parent then
										local RadiusSize = ((SpecialAttack.Radius / 25) * i)
										for ii, vv in pairs(ShockWave:GetChildren()) do
											if vv:IsA("Decal") then
												vv.Transparency = ((Transparency / 25) * i)
											end
										end
										ShockWave.Size = Vector3.new(RadiusSize, ShockWave.Size.Y, RadiusSize)
										ShockWave.CFrame = ShockWaveCFrame
									end
									wait(0.025)
								end
								if ShockWave and ShockWave.Parent then
									ShockWave:Destroy()
								end
							end
						end)
						BodyPosition.position = MousePosition
					end
					SpecialAttack.Active = false
					SpecialAttacks.Active = false
					Delay(SpecialAttack.ReloadTime, function()
						SpecialAttack.Enabled = true
					end)
				end
			end
			if SpecialAttack then
				wait(SpecialAttacks.ReloadTime)
				SpecialAttacks.Enabled = true
			end
		end
	end
end)

function InvokeClient(Mode, Value)
	local ReturnValue = nil
	pcall(function()
		ReturnValue = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ReturnValue
end

function RayCast(Position, Direction, MaxDistance, IgnoreList)
	return game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList)
end

function TagHumanoid(humanoid, player)
	local Creator_Tag = Instance.new("ObjectValue")
	Creator_Tag.Name = "creator"
	Creator_Tag.Value = player
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function Blow(Part)
	Part.Touched:connect(function(Hit)
		if not Hit or not Hit.Parent or not Equipped or not CheckIfAlive() or SpecialAttacks.Active then
			return
		end
		local RightArm = Character:FindFirstChild("Right Arm")
		if not RightArm then
			return
		end
		local RightGrip = RightArm:FindFirstChild("RightGrip")
		if not RightGrip or (RightGrip.Part0 ~= Handle and RightGrip.Part1 ~= Handle) then
			return
		end
		local character = Hit.Parent
		local humanoid = character:FindFirstChild("Humanoid")
		if character ~= Character and humanoid and humanoid.Health &gt; 0 then
			local DamageValue = ((CurrentAnimation and CurrentAnimation.Damage) or Damage)
			UntagHumanoid(humanoid)
			TagHumanoid(humanoid, Player)
			humanoid:TakeDamage(DamageValue)
		end
	end)
end

function Activated()
	if not Tool.Enabled or not Equipped or SecondaryAttack.Active or SpecialAttacks.Active then
		return
	end
	local CurrentlyEquipped = true
	ToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
	end)
	Tool.Enabled = false
	local SlashAnims = {Animations.LeftSlash, Animations.RightSlash}
	local SlashAnim = SlashAnims[math.random(1, #SlashAnims)]
	CurrentAnimation = SlashAnim
	InvokeClient("PlayAnimation", CurrentAnimation)
	InvokeClient("PlaySound", Sounds.Slash)
	wait(CurrentAnimation.Duration)
	if not CurrentlyEquipped then
		return
	end
	InvokeClient("StopAnimation", CurrentAnimation)
	CurrentAnimation = nil
	InvokeClient("DisableJump", false)
	InvokeClient("StopAnimation", CurrentAnimation)
	CurrentAnimation = nil
	Tool.Enabled = true
end
function CheckIfAlive()
	return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Head and Head.Parent and Torso and Torso.Parent)
end

function Equipped(Mouse)
	Equipped = true
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Head = Character:WaitForChild("Head")
	Torso = Character:FindFirstChild("Torso")
	if not CheckIfAlive() then
		return
	end
	Sounds.Unsheath:Play()
end

function Unequipped()
	Equipped = false
	CurrentAnimation = nil
	for i, v in pairs({ToolUnequipped, ActivatedToolUnequipped}) do
		if v then
			v:disconnect()
		end
	end
	if SwordClone and SwordClone.Parent then
		SwordClone:Destroy()
	end
	for i, v in pairs(Animations) do
		if v and v.Parent then
			InvokeClient("StopAnimation", v)
		end
	end
	for i, v in pairs(Sounds) do
		if v and v.Parent then
			v:Stop()
			InvokeClient("StopSound", v)
		end
	end
end

Blow(Handle)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXA4177C56357846D396C828CEC8F125C8">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{3EA000E9-9FBC-445D-A75D-6A003190E230}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
ContentProvider = game:GetService("ContentProvider")

Camera = game:GetService("Workspace").CurrentCamera

Animations = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ClientControl.OnClientInvoke = (function(Mode, Value)
	if Mode == "PlayAnimation" and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
		table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
	elseif Mode == "StopAnimation" and Value then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	elseif Mode == "Preload" and Value then
		ContentProvider:Preload(Value)
	elseif Mode == "PlaySound" and Value then
		Value:Play()
	elseif Mode == "StopSound" and Value then
		Value:Stop()
	elseif Mode == "CoordinateFrame" then
		return Camera.CoordinateFrame
	elseif Mode == "SetCamera" and (Value.CameraType or Value.CoordinateFrame) then
		if Value.CameraType then
			Camera.CameraType = Value.CameraType
		end
		if Value.CoordinateFrame then
			Camera.CoordinateFrame = Value.CoordinateFrame
		end
	elseif Mode == "MousePosition" then
		return PlayerMouse.Hit.p
	elseif Mode == "DisableJump" then
		DisableJump(Value)
	end
end)

function InvokeServer(Mode, Value)
	pcall(function()
		local ServerReturn = ServerControl:InvokeServer(Mode, Value)
		return ServerReturn
	end)
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.Button1Down:connect(function()
		InvokeServer("MouseClick", {Down = true})
	end)
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	if PreventJump then
		PreventJump:disconnect()
	end
	Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX37CC038AD34A4FF89AEC54ED9F42C489">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MouseIcon</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{9F70E342-6F8F-4721-98CF-65D2E31197D2}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX7490F124FAE544F7A1B0FEE30B3775F5">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=74894663</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">LeftSlash</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX6F7D60F558C44D8299ECDFB605BECC98">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=74813494</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">RightSlash</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Camera" referent="RBX8691434923E74B64888005D0462FF41B">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>39.4217415</X>
							<Y>6.03741741</Y>
							<Z>-69.0843582</Z>
							<R00>-0.994952142</R00>
							<R01>0.0174008403</R01>
							<R02>-0.0988305509</R02>
							<R10>1.86264515e-09</R10>
							<R11>0.98485142</R11>
							<R12>0.173400238</R12>
							<R20>0.100350723</R20>
							<R21>0.172524944</R21>
							<R22>-0.979879975</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>39.6490517</X>
							<Y>5.63859701</Y>
							<Z>-66.8306351</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		