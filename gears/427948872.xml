<Item class="Model" referent="RBX1FE5AF0EE11848CDB4564F4B19DF6B27">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">427948872</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBXAF1B13AE9B114019B2D35FF9ED440107">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>0</X>
						<Y>0</Y>
						<Z>0.25</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">VoltronForceFieldGenerator</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=427748252</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>-0.0569752418</X>
							<Y>20.935297</Y>
							<Z>0.427016735</Z>
							<R00>-0.974000931</R00>
							<R01>0.14691247</R01>
							<R02>0.172449976</R02>
							<R10>1.16930345e-07</R10>
							<R11>0.761220455</R11>
							<R12>-0.64849329</R12>
							<R20>-0.226544186</R20>
							<R21>-0.631633043</R21>
							<R22>-0.741429389</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX9817B03929244D9080A780A7BB4A4165">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-0.0569752418</X>
							<Y>20.935297</Y>
							<Z>0.427016735</Z>
							<R00>-0.974000931</R00>
							<R01>0.14691247</R01>
							<R02>0.172449976</R02>
							<R10>1.16930345e-07</R10>
							<R11>0.761220455</R11>
							<R12>-0.64849329</R12>
							<R20>-0.226544186</R20>
							<R21>-0.631633043</R21>
							<R22>-0.741429389</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>0.36500001</X>
							<Y>2</Y>
							<Z>2</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX9F9FF2BBE97F48808320D04C7642C589">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=427748113</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=427748182</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX982D0B22A9A7427FB6FB27113124788F">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Deflect</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">0</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=90811734</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX70BD6B95CCEF446BAEBCCC2C2A18E603">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">PoweringUp</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">2.5</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">0</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=87767777</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX576971F8C43C4A9694A3D3A8396FB11C">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Pulse</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">0</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=90819631</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX78448AA2497D40B4B0DE3FD3D375680A">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">ShutDown</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">0</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=90811702</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBX840A76F58F3F47C7BA8C2B0824BC02B0">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MouseIcon</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{5D36900B-E6EB-4757-BC42-663A0A7951B4}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Script" referent="RBXA9471E0E8DA94147B534A413AB0FC333">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{8DF848B3-26CE-43AF-BD99-1687F6F8AC92}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")
Mesh = Handle:WaitForChild("Mesh")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

local function Create_PrivImpl(objectType)
	if type(objectType) ~= 'string' then
		error("Argument of Create must be a string", 2)
	end
	--return the proxy function that gives us the nice Create'string'{data} syntax
	--The first function call is a function call using Lua's single-string-argument syntax
	--The second function call is using Lua's single-table-argument syntax
	--Both can be chained together for the nice effect.
	return function(dat)
		--default to nothing, to handle the no argument given case
		dat = dat or {}

		--make the object to mutate
		local obj = Instance.new(objectType)
		local parent = nil

		--stored constructor function to be called after other initialization
		local ctor = nil

		for k, v in pairs(dat) do
			--add property
			if type(k) == 'string' then
				if k == 'Parent' then
					-- Parent should always be set last, setting the Parent of a new object
					-- immediately makes performance worse for all subsequent property updates.
					parent = v
				else
					obj[k] = v
				end


			--add child
			elseif type(k) == 'number' then
				if type(v) ~= 'userdata' then
					error("Bad entry in Create body: Numeric keys must be paired with children, got a: "..type(v), 2)
				end
				v.Parent = obj


			--event connect
			elseif type(k) == 'table' and k.__eventname then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create.E\'"..k.__eventname.."\']` must have a function value\
							got: "..tostring(v), 2)
				end
				obj[k.__eventname]:connect(v)


			--define constructor function
			elseif k == t.Create then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create]` should be paired with a constructor function, \
							got: "..tostring(v), 2)
				elseif ctor then
					--ctor already exists, only one allowed
					error("Bad entry in Create body: Only one constructor function is allowed", 2)
				end
				ctor = v


			else
				error("Bad entry ("..tostring(k).." =&gt; "..tostring(v)..") in Create body", 2)
			end
		end

		--apply constructor function if it exists
		if ctor then
			ctor(obj)
		end

		if parent then
			obj.Parent = parent
		end

		--return the completed object
		return obj
	end
end

--now, create the functor:
Create = setmetatable({}, {__call = function(tb, ...) return Create_PrivImpl(...) end})

--and create the "Event.E" syntax stub. Really it's just a stub to construct a table which our Create
--function can recognize as special.
Create.E = function(eventName)
	return {__eventname = eventName}
end


BaseUrl = "http://www.roblox.com/asset/?id="

Functions = require(script:WaitForChild("Functions"))

Sounds = {
	ShutDown = Handle:WaitForChild("ShutDown"),
	PoweringUp = Handle:WaitForChild("PoweringUp"),
	Deflect = Handle:WaitForChild("Deflect"),
	Pulse = Handle:WaitForChild("Pulse"),
}

Duration = 5
ReloadTime = 3

ToolEquipped = false

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	Shape = Enum.PartType.Block,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
}

SpherePart = BasePart:Clone()
SpherePart.Name = "ProtectionSphere"
SpherePart.Transparency = 0.55
SpherePart.Shape = Enum.PartType.Ball
SpherePart.Size = Vector3.new(2.375, 4.25, 4.25)
SpherePart.CanCollide = false
SpherePart.Anchored = true
SphereMesh = Create("SpecialMesh"){
	Name = "Mesh",
	MeshType = Enum.MeshType.FileMesh,
	MeshId = (BaseUrl .. "427837152"),
	TextureId = (BaseUrl .. "90782359"),
	Scale = Vector3.new(1, 1, 1),
	VertexColor = Vector3.new(1, 1, 0.375),
	Offset = Vector3.new(0, 0, 0),
	Parent = SpherePart,
}

MaxSphereScale = Vector3.new(5, 5, 5)

Handle.Transparency = 0
Tool.Enabled = true

function CreateReflector(OrientationCFrame)
	local Sphere = SpherePart:Clone()
	Sphere.Transparency = 0.75
	Sphere.Size = Vector3.new(3, 3, 3)
	Sphere.CFrame = OrientationCFrame
	local SphereMesh = Sphere:FindFirstChild("Mesh")
	SphereMesh.Scale = Vector3.new(0.2, 0.2, 0.2)
	Debris:AddItem(Sphere, 3)
	Sphere.Parent = game:GetService("Workspace")
	Spawn(function()
		for i = 1, 3, 0.5 do
			if SphereMesh then
				SphereMesh.Scale = Vector3.new((0.2 * i), (0.2 * i), (0.2 * i))
			end
			wait(0.05)
		end
		local MaxScale = SphereMesh.Scale
		for j = 1, 0, -0.1 do
			if SphereMesh then
				SphereMesh.Scale = (MaxScale * j)
				wait(0.05)
			end
		end
	end)
end

function HandleDeflect(Sphere, Part)
	if not Part or not Part.Parent or Part.Anchored or Part.Parent ~= game:GetService("Workspace") or Part.Velocity.Magnitude &lt; 5 or Functions.CalculateRecursiveMass(Part) &gt; 125 then
		return
	end
	if math.acos((Part.CFrame.p - Sphere.CFrame.p).Unit:Dot(Part.Velocity.Unit)) &lt; (math.pi / 2) or (Part.CFrame.p - Sphere.CFrame.p).Magnitude &lt;= 4 then
		return
	end
	local ConnectedParts = Functions.GetAllConnectedParts(Part)
	for i, v in pairs(ConnectedParts) do
		if v and v.Parent then
			local character, humanoid = Functions.FindCharacterAncestor(v)
			if character and character == CurrentCharacter then
				return
			end
		end
	end
	local PartPos = Part.CFrame
	if Part and Part.Parent then
		Part.Anchored = true
		Part.CanCollide = false
		Part.Transparency = 1
		Part:ClearAllChildren()
		Part.Name = "Effect"
		Part:Destroy()
	end
	CreateReflector(CFrame.new(PartPos.p, PartPos.p + ((Sphere.Position - Vector3.new(0, (Sphere.Size.Y / 3), 0)) - PartPos.p).Unit) * CFrame.Angles(0, (math.pi / 2), 0))
	Sounds.Deflect:Play()
	wait(1)
	if not Part or not Part.Parent then
		return
	end
end

function AddFeatures(Sphere, Range)
	local Rate = (1 / 60)
	while Sphere and Sphere.Parent do
		Spawn(function()
			local IgnoreObjects = {CurrentCharacter, Sphere}
			local NegativePartRadius = Vector3.new((Range.X / 2), (Range.Y / 2), (Range.Z / 2))
			local PositivePartRadius = Vector3.new((Range.X / 2), (Range.Y / 2), (Range.Z / 2))
			local Parts = game:GetService("Workspace"):FindPartsInRegion3WithIgnoreList(Region3.new(Sphere.Position - NegativePartRadius, Sphere.Position + PositivePartRadius), IgnoreObjects, 100)
			for i, v in pairs(Parts) do
				if v and v.Parent then
					HandleDeflect(Sphere, v)
				end
			end
		end)
		wait(Rate)
	end
end

function TweenScale(SphereMesh, StartSize, EndSize, TweenDuration, Steps)
	local StepSize = (TweenDuration / Steps)
	for i = 0, Steps do
		local Ratio = (i / Steps)
		SphereMesh.Scale = ((1 - Ratio) * StartSize + (EndSize * Ratio))
		wait(StepSize)
	end
	SphereMesh.Scale = EndSize
end

function TweenCFrame(Sphere, StartCFrame, EndCFrame, TweenDuration, Steps)
	local StepSize = (TweenDuration / Steps)
	for i = 0, Steps do
		local Ratio = (i / Steps)
		Sphere.CFrame = (CFrame.new((1 - Ratio) * StartCFrame.p + (EndCFrame.p * Ratio)) * CFrame.Angles(Sphere.CFrame:toEulerAnglesXYZ()))
		wait(StepSize)
	end
	Sphere.CFrame = EndCFrame
end

function Activated()
	if not ToolEquipped or not Tool.Enabled or not CheckIfAlive() then
		return
	end

	Tool.Enabled = false

	CurrentCharacter = Character
	CurrentTorso = Torso

	local Sphere = SpherePart:Clone()
	local SphereMesh = Sphere:FindFirstChild("Mesh")
	Debris:AddItem(Sphere, Duration)
	Sphere.Parent = game:GetService("Workspace")
	local TorsoCFrame = (CFrame.new(CurrentTorso.Position) * CFrame.Angles(0, 0, -(math.pi / 2)))
	Sphere.CFrame = TorsoCFrame
	Spawn(function()
		TweenScale(SphereMesh, Vector3.new(0.1, 0.1, 0.1), MaxSphereScale, 0.5, 10)
	end)
	Spawn(function()
		TweenCFrame(Sphere, TorsoCFrame, (TorsoCFrame + Vector3.new(0, 2.75, 0)), 0.5, 10)
	end)
	Sounds.PoweringUp:Play()
	Spawn(function()
		AddFeatures(Sphere, (Sphere.Size * MaxSphereScale.X))
	end)
	wait((Duration - 1.5))
	Sounds.ShutDown:Play()
	wait(1.5)
	wait(ReloadTime)
	Tool.Enabled = true
end

function CheckIfAlive()
	return (((Player.Parent and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("HumanoidRootPart")
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
end

function Unequipped()
	ToolEquipped = false
end

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
					<Item class="ModuleScript" referent="RBX6E7E23446F8B4CDABC30F18B9C99C8F3">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">Functions</string>
							<string name="ScriptGuid">{CB798570-3731-4317-87D7-B8061A6A6845}</string>
							<ProtectedString name="Source">--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Functions = {}

function Functions.CheckTable(Table, Object)
	for i, v in pairs(Table) do
		if v == Object then
			return true
		end
	end
	return false
end

function Functions.FindCharacterAncestor(Parent)
	if Parent and Parent ~= game:GetService("Workspace") then
		local humanoid = Parent:FindFirstChild("Humanoid")
		if humanoid then
			return Parent, humanoid
		else
			return Functions.FindCharacterAncestor(Parent.Parent)
		end
	end
	return nil
end

function Functions.GetAllConnectedParts(Object)
	local Parts = {}
	local function GetConnectedParts(Object)
		for i, v in pairs(Object:GetConnectedParts()) do
			local Ignore = false
			for ii, vv in pairs(Parts) do
				if v == vv then
					Ignore = true
				end
			end
			if not Ignore then
				table.insert(Parts, v)
				GetConnectedParts(v)
			end
		end
	end
	GetConnectedParts(Object)
	return Parts
end

function Functions.CalculateRecursiveMass(RootPart)
	local Mass = 0
	local ConnectedParts = Functions.GetAllConnectedParts(RootPart)
	for i, v in pairs(ConnectedParts) do
		Mass = (Mass + v:GetMass())
	end
	return Mass
end

function Functions.ReflectVector3(Incoming, Normal)
	return (2 * ((-1 * Incoming):Dot(Normal)) * Normal + Incoming)
end

return Functions</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
				</Item>
				<Item class="Camera" referent="RBX8ABA87D179D346EDA72251A22400A9F5">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>-2.32123017</X>
							<Y>21.2472916</Y>
							<Z>0.310018837</Z>
							<R00>-0.0380476452</R00>
							<R01>0.161869287</R01>
							<R02>-0.986078441</R02>
							<R10>-4.65661287e-10</R10>
							<R11>0.986792922</R11>
							<R12>0.161986575</R12>
							<R20>0.999275923</R20>
							<R21>0.00616320828</R21>
							<R22>-0.037545152</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">50.0000038</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>0.143965483</X>
							<Y>20.8423252</Y>
							<Z>0.403881699</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		