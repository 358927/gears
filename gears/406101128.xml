<Item class="Model" referent="RBX12DCA4A830944AB7BF3B9C8DAC29D157">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">406101128</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBX7EE00F31CF164922A8EF522DA0ECE5E8">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">PostPebblesGuitar</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=406096910</url></Content>
					<string name="ToolTip">FREEBIRD!</string>
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>-0.00237899995</X>
							<Y>0.301108986</Y>
							<Z>-0.00726999994</Z>
							<R00>-0.66877383</R00>
							<R01>-0.69286859</R01>
							<R02>-0.26958257</R02>
							<R10>-0.728819191</R10>
							<R11>0.682601452</R11>
							<R12>0.0536460578</R12>
							<R20>0.146847799</R20>
							<R21>0.232354015</R21>
							<R22>-0.961481869</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX7A1C7CE9AE414DC4B3DBCEBCBF0E0AF2">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">4</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-0.00237899995</X>
							<Y>0.301108986</Y>
							<Z>-0.00726999994</Z>
							<R00>-0.66877383</R00>
							<R01>-0.69286859</R01>
							<R02>-0.26958257</R02>
							<R10>-0.728819191</R10>
							<R11>0.682601452</R11>
							<R12>0.0536460578</R12>
							<R20>0.146847799</R20>
							<R21>0.232354015</R21>
							<R22>-0.961481869</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">3</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>3.60000014</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBXB75DD48ED12F41718BC504D44976B08B">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=99166955</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1.29999995</X>
								<Y>1.29999995</Y>
								<Z>1.29999995</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=406096726</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX6175EC30BA284DCFB64E81C7797DC732">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">ChordSound</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">5</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=99170403</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBXC5D6A0DA6B9F4BE7AE1D0AD547A06E66">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Applause</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">0</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=60059129</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Animation" referent="RBXC8722EB620844294B08102F28A653059">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=99198989</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Pluck</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX449A9F941B9C46F3949A79751D098BFD">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=99200153</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Hold</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX78273314582342889CA4D67726A0490B">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{884D9A57-100B-488B-812D-72E465063A9D}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
ContentProvider = game:GetService("ContentProvider")

Camera = game:GetService("Workspace").CurrentCamera

Animations = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ClientControl.OnClientInvoke = (function(Mode, Value)
	if Mode == "PlayAnimation" and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
		table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
	elseif Mode == "StopAnimation" and Value then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	elseif Mode == "Preload" and Value then
		ContentProvider:Preload(Value)
	elseif Mode == "PlaySound" and Value then
		Value:Play()
	elseif Mode == "StopSound" and Value then
		Value:Stop()
	elseif Mode == "MousePosition" then
		return PlayerMouse.Hit.p
	elseif Mode == "DisableJump" then
		DisableJump(Value)
	elseif Mode == "SetCamera" and Value then
		if Value.Subject and Value.Type then
			Camera.CameraSubject = Value.Subject
			Camera.CameraType = Value.Type
		end
	end
end)

function InvokeServer(Mode, Value)
	local ServerReturn = nil
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(Mode, Value)
	end)
	return ServerReturn
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.Button1Down:connect(function()
		InvokeServer("MouseClick", {Down = true})
	end)
	Mouse.Button1Up:connect(function()
		InvokeServer("MouseClick", {Down = false})
	end)
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	if PreventJump then
		PreventJump:disconnect()
	end
	Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Script" referent="RBX24C0E359C5954C33A824B5ECBD58E047">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{F99BB00C-DCE4-4BE9-A6A6-B23965520EF4}</string>
						<ProtectedString name="Source">--Made by Luckymaxer
	-- Fix by Stickmasterluke 7/10/2018

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Logo = script:WaitForChild("Logo")

Module = require(script.Parent:WaitForChild('GuitarModule'))

NoteData = {
	Chords = {
		{Key = "z", Sound = {Normal = 99170172, Sharp = 99189531}},
		{Key = "x", Sound = {Normal = 99170311, Sharp = 99189711}},
		{Key = "c", Sound = {Normal = 99170354, Sharp = 99189785}},
		{Key = "v", Sound = {Normal = 99170403, Sharp = 99190216}},
		{Key = "b", Sound = {Normal = 99170481, Sharp = 99189905}},
		{Key = "n", Sound = {Normal = 99170537, Sharp = 99190021}},
		{Key = "m", Sound = {Normal = 99170583, Sharp = 99190550}}
	},
	Pitches = {
		{Key = "g", Pitch = 0.5},
		{Key = "h", Pitch = 0.75},
		{Key = "j", Pitch = 1},
		{Key = "k", Pitch = 1.25},
		{Key = "l", Pitch = 1.5},
	}
}

local pi = math.pi
local tau = math.pi*2
Grips = {
	Hold = CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),
	Play = CFrame.new(0.01923877, 1.19116962, 0.313162446, 0.49999997, 0.707106769, 0.49999997, 0.0564237535, 0.549525201, -0.833569586, -0.864185274, 0.444996685, 0.23486498),
	PlayR15 = CFrame.new(.5,-1,0) * CFrame.Angles(0,0,-tau*.15),
}

Animations = {
	Hold = {Animation = Tool:WaitForChild("Hold"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
	Pluck = {Animation = Tool:WaitForChild("Pluck"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil}
}

Sounds = {
	ChordSound = Handle:WaitForChild("ChordSound"),
	Applause = Handle:WaitForChild("Applause")
}

ChordDuration = 0.25

ShiftDown = false
IsPlayingMusic = false
CurrentNote = 1
CurrentPitch = NoteData.Pitches[3] --((NoteData.Pitches[1] and NoteData.Pitches[1]) or nil)

MashMeter = 0
MeltDistance = 30

ClientControl = (Tool:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Tool

ServerControl = (Tool:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Tool

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if Mode == "KeyPress" and Value then
		local Key = string.lower(Value.Key)
		local ByteKey = string.byte(Key)
		local Down = Value.Down
		if Key == "0" or ByteKey == 48 then
			ShiftDown = Down
		else
			if Value.Down then
				if IsPlayingMusic then
					for i, v in pairs(NoteData.Chords) do
						if v.Key == Key then
							local Duration = 1
							local Chord = v
							local SoundId = ((not ShiftDown and v.Sound.Normal) or v.Sound.Sharp)
							local Pitch = CurrentPitch.Pitch
							Module.PlaySound(Handle, {Sound = Sounds.ChordSound, SoundId = SoundId}, ((Chord.Pitch and Chord.Pitch) or (CurrentPitch and CurrentPitch.Pitch) or nil), ChordDuration)
							InvokeClient("PlayAnimation", Animations.Pluck)
							MashMeter = (MashMeter + 1)
							return
						end
					end
				end
				for i, v in pairs(NoteData.Pitches) do
					if v.Key == Key then
						CurrentPitch = v
						return
					end
				end
			end
		end
	end
end)

Tool.Grip = Grips.Hold
Tool.Enabled = true

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

function Activated()
	if not Tool.Enabled or not CheckIfAlive() then
		return
	end
	Tool.Enabled = false
	IsPlayingMusic = not IsPlayingMusic
	if IsPlayingMusic then
		local desiredGrip = Grips.Play
		if Character then
			local humanoid = Character:FindFirstChild("Humanoid")
			if humanoid and humanoid.RigType ~= Enum.HumanoidRigType.R6 then
				desiredGrip = Grips.PlayR15
			end
		end
		Tool.Grip = desiredGrip
		InvokeClient("PlayAnimation", Animations.Hold)
	else
		Tool.Grip = Grips.Hold
		for i, v in pairs(Animations) do
			InvokeClient("StopAnimation", v)
		end
	end
	Tool.Enabled = true
end

function CheckIfAlive()
	return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Head and Head.Parent)
end

function Equipped(Mouse)
	Equipped = true
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Head = Character:FindFirstChild("Head")
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		for i, v in pairs(Tool:GetChildren()) do
			if v:IsA("BillboardGui") and v.Name == "Logo" then
				v:Destroy()
			end
		end
		LogoCopy = Logo:Clone()
		LogoCopy.Adornee = Head
		LogoCopy.Enabled = true
		Debris:AddItem(LogoCopy, 5)
		LogoCopy.Parent = Tool
		ControlGui = Module.DisplayControls(Player, "Keys H, J, K, and L change pitch Keys Z, X, C, V, B, N, M play notes Click to equip")
	end)
end

function Unequipped()
	Equipped = false
	ShiftDown = false
	IsPlayingMusic = false
	if ControlGui and ControlGui.Parent then
		ControlGui:Destroy()
	end
	for i, v in pairs(Animations) do
		InvokeClient("StopAnimation", v)
	end
	if LogoCopy and LogoCopy.Parent then
		LogoCopy:Destroy()
	end
	Tool.Grip = Grips.Hold
end

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)

function MeltFace(player)
	if not player then
		return
	end
	local character = player.Character
	if not character then
		return
	end
	local humanoid = character:FindFirstChild("Humanoid")
	local head = character:FindFirstChild("Head")
	if not humanoid or humanoid.Health == 0 or not head then
		return
	end
	humanoid.WalkSpeed = 0
	head.Anchored = true
	local FakeHead = head:Clone()
	FakeHead.Name = "FakeHead"
	FakeHead.Transparency = 1
	FakeHead.Anchored = false
	FakeHead.CanCollide = false

	for i, v in pairs(FakeHead:GetChildren()) do
		if not (v:IsA("Decal") or v:IsA("DataModelMesh")) then
			v:Destroy()
		end
	end

	for i, v in pairs(head:GetChildren()) do
		if v:IsA("Decal") then
			v:Destroy()
		end
	end

	local BV = Instance.new('BodyVelocity')
	FakeHead.CFrame = head.CFrame + head.CFrame.lookVector * 0.25
	BV.velocity = Vector3.new(0, -1, 0)
	BV.maxForce = Vector3.new(50000, 50000, 50000)
	BV.Parent = FakeHead
	Debris:AddItem(FakeHead, 5)
	FakeHead.Parent = game:GetService("Workspace")

	local ApplauseSound = Sounds.Applause:Clone()
	ApplauseSound.Parent = head
	ApplauseSound:Play()
	Debris:AddItem(ApplauseSound, 5)

	wait(3)

	if humanoid and humanoid.Parent and head and head.Parent then
		humanoid.WalkSpeed = 16
		head.Anchored = false
	end

end

function MeltNearFaces()
	for i, v in pairs(Players:GetChildren()) do
		if v:IsA("Player") and v ~= Player then
			local character = v.Character
			if not character then
				return
			end
			local humanoid = character:FindFirstChild("Humanoid")
			local head = character:FindFirstChild("Head")
			if not humanoid or humanoid.Health == 0 or not head or (Handle.Position - head.Position).magnitude &gt; MeltDistance then
				return
			end
			Spawn(function()
				MeltFace(v)
			end)
		end
	end
end

while true do
	if MashMeter &gt; 0 then
		MashMeter = (MashMeter - 0.1)
	end
	if MashMeter &gt; 9 then
		MeltNearFaces()
		wait(5)
		MashMeter = 0
	end
	wait(1 / 30)
end</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
					<Item class="BillboardGui" referent="RBXCE0FE588B28B48E1B50A2B1487EE7364">
						<Properties>
							<bool name="Active">false</bool>
							<Ref name="Adornee">null</Ref>
							<bool name="AlwaysOnTop">false</bool>
							<BinaryString name="AttributesSerialize" />
							<bool name="AutoLocalize">true</bool>
							<float name="Brightness">1</float>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<float name="DistanceLowerLimit">0</float>
							<float name="DistanceStep">0</float>
							<float name="DistanceUpperLimit">-1</float>
							<bool name="Enabled">false</bool>
							<Vector3 name="ExtentsOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="ExtentsOffsetWorldSpace">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<float name="LightInfluence">0</float>
							<float name="MaxDistance">INF</float>
							<string name="Name">Logo</string>
							<Ref name="PlayerToHideFrom">null</Ref>
							<bool name="ResetOnSpawn">true</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<UDim2 name="Size">
								<XS>3.92499995</XS>
								<XO>0</XO>
								<YS>3.5</YS>
								<YO>0</YO>
							</UDim2>
							<Vector2 name="SizeOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<int64 name="SourceAssetId">-1</int64>
							<Vector3 name="StudsOffset">
								<X>-0.375</X>
								<Y>2.125</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="StudsOffsetWorldSpace">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<BinaryString name="Tags" />
							<token name="ZIndexBehavior">0</token>
						</Properties>
						<Item class="Frame" referent="RBX1C8E8881822D4C198BA7C93CDC8B8EEF">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize" />
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">1</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">Image</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags" />
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="ImageLabel" referent="RBXF202A28E44A341B180E7FCD29924D9B6">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize" />
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">1</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=406096986</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">ImageLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">0</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags" />
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBXDEF6880260EF45BE8437D650C175A50F">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">GuitarModule</string>
						<string name="ScriptGuid">{43B9CC09-4CBB-4C1E-B6A4-98940B327ADE}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

BaseUrl = "http://www.roblox.com/asset/?id="

BasePart = Instance.new("Part")
BasePart.Name = "Part"
BasePart.Material = Enum.Material.Plastic
BasePart.Shape = Enum.PartType.Block
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.Locked = true
BasePart.CanCollide = false

GuitarModule = {
	BaseDuration = 5,
	MakeNote = (function(Color)
		if not Color then
			return
		end
		local Note = BasePart:Clone()
		Note.Name = "Note"
		Note.BrickColor = BrickColor.new(Color)
		Note.Size = Vector3.new(1, 1.2, 1)
		Note.CanCollide = false
		local NoteMesh = Instance.new("SpecialMesh")
		NoteMesh.MeshType = Enum.MeshType.FileMesh
		NoteMesh.MeshId = (BaseUrl .. "1088207")
		NoteMesh.TextureId = ""
		NoteMesh.Scale = Vector3.new(0.1, 0.1, 0.1)
		NoteMesh.Parent = Note
		return Note
	end),
	PlayNote = (function(Note, SpawnPosition, Duration)
		if not Note or not SpawnPosition then
			return
		end
		Duration = ((not Duration and GuitarModule.BaseDuration) or Duration)
		local Direction = Vector3.new((math.random() - 0.5), 1, (math.random() - 0.5)).unit
		local BodyVelocity = Instance.new("BodyVelocity")
		BodyVelocity.velocity = Direction * 30
		BodyVelocity.Parent = Note
		Debris:AddItem(Note, Duration)
		Note.Parent = game:GetService("Workspace")
		local Position = SpawnPosition + Vector3.new(0, 5, 0)
		Note.CFrame = CFrame.new(Position, (Position + Direction))
	end),
	PlaySound = (function(Note, Sound, Pitch, Duration)
		if not Note or not Sound then
			return
		end
		local SoundType = type(Sound)
		local SoundObject = nil
		local SoundParent = nil
		if SoundType == "table" then
			local SoundTable = Sound
			local SoundId = SoundTable.SoundId
			SoundId = ((type(SoundId) == "number" and (BaseUrl .. SoundId)) or SoundId)
			SoundObject = Sound.Sound
			if Sound.MakeNew then
				SoundObject = Sound.Sound:Clone()
				SoundParent = Note
			else
				SoundParent = SoundObject.Parent
			end
			SoundObject.SoundId = SoundId
		else
			SoundObject = Sound:Clone()
			Debris:AddItem(SoundObject, Duration)
			SoundParent = Note
		end
		Duration = ((not Duration and (Sound.Sound.TimeLength + 1)) or Duration)
		SoundObject.Pitch = ((Pitch and Pitch) or SoundObject.Pitch)
		if Duration and SoundObject.Looped then
			Delay(Duration, function()
				SoundObject:Stop()
			end)
		end
		if SoundParent then
			if not SoundObject.Parent then
				SoundObject.Parent = SoundParent
			end
			SoundObject:Play()
		end
	end),
	DisplayTune = (function(Player, Text)
		if not Player or not Text then
			return
		end
		local PlayerGui = Player:FindFirstChild("PlayerGui")
		if not PlayerGui then
			return
		end
		for i, v in pairs(PlayerGui:GetChildren()) do
			if v.Name == "ChordDisplayGui" then
				v:Destroy()
			end
		end
		local ScreenGui = Instance.new("ScreenGui")
		ScreenGui.Name = "ChordDisplayGui"
		local Frame = Instance.new("Frame")
		Frame.BackgroundColor3 = Color3.new((0 / 255), (0 / 255), (0 / 255))
		Frame.BackgroundTransparency = 0.5
		Frame.BorderSizePixel = 0
		Frame.Position = UDim2.new(0, 25, 0, 25)
		Frame.Size = UDim2.new(0, 200, 0, 150)
		Frame.ZIndex = 1
		local TextLabel = Instance.new("TextLabel")
		TextLabel.BackgroundTransparency = 1
		TextLabel.FontSize = Enum.FontSize.Size24
		TextLabel.TextColor3 = Color3.new((255 / 255), (255 / 255), (255 / 255))
		TextLabel.Position = UDim2.new(0, 0, 0, 0)
		TextLabel.Size = UDim2.new(1, 0, 1, 0)
		TextLabel.TextWrapped = true
		TextLabel.Text = Text
		TextLabel.Parent = Frame
		Frame.Parent = ScreenGui
		Debris:AddItem(ScreenGui, 2)
		ScreenGui.Parent = PlayerGui
		return ScreenGui
	end),
	DisplayControls = (function(Player, Text, TextColor, FrameProperties)
		if not Player or not Text then
			return
		end
		local PlayerGui = Player:FindFirstChild("PlayerGui")
		if not PlayerGui then
			return
		end
		for i, v in pairs(PlayerGui:GetChildren()) do
			if v.Name == "ControlDisplayGui" then
				v:Destroy()
			end
		end
		local ScreenGui = Instance.new("ScreenGui")
		ScreenGui.Name = "ControlDisplayGui"
		local Frame = Instance.new("Frame")
		Frame.BackgroundColor3 = Color3.new((0 / 255), (0 / 255), (0 / 255))
		Frame.BorderSizePixel = 0
		Frame.Position = UDim2.new(0, 0, 1, -150)
		Frame.Size = UDim2.new(0, 260, 0, 55)
		Frame.ZIndex = 1
		local TextLabel = Instance.new("TextLabel")
		TextLabel.BackgroundTransparency = 1
		TextLabel.Font = Enum.Font.ArialBold
		TextLabel.FontSize = Enum.FontSize.Size18
		TextLabel.TextColor3 = ((TextColor and Color3.new((TextColor.r / 255), (TextColor.g / 255), (TextColor.b / 255))) or Color3.new((190 / 255), (1 / 255), (4 / 255)))
		TextLabel.Position = UDim2.new(0, 5, 0, 0)
		TextLabel.Size = UDim2.new(1, -5, 1, 0)
		TextLabel.TextXAlignment = Enum.TextXAlignment.Left
		TextLabel.TextYAlignment = Enum.TextYAlignment.Top
		TextLabel.TextWrapped = true
		TextLabel.Text = Text
		TextLabel.Parent = Frame
		pcall(function()
			for i, v in pairs(FrameProperties) do
				TextLabel[i] = v
			end
		end)
		Frame.Parent = ScreenGui
		ScreenGui.Parent = PlayerGui
		return ScreenGui
	end)
}

return GuitarModule</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Camera" referent="RBX5F7C5408CCE9419D92977733A7CBB239">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>0.129835904</X>
							<Y>0.0348208696</Y>
							<Z>5.19469357</Z>
							<R00>0.999673843</R00>
							<R01>0.00132456399</R01>
							<R02>0.025506705</R02>
							<R10>-0</R10>
							<R11>0.998654425</R11>
							<R12>-0.0518601462</R12>
							<R20>-0.0255410764</R20>
							<R21>0.0518432334</R21>
							<R22>0.998328567</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>0.0788224936</X>
							<Y>0.138541162</Y>
							<Z>3.19803643</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		