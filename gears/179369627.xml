<Item class="Model" referent="RBX11939163A79F4B23BE46459C18CE1A12">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">179369627</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBX6C967252313C4B93A46DDFEB1F2A5E38">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>1.5</X>
						<Y>3.125</Y>
						<Z>-1</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>-8.91000582e-07</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>8.91000582e-07</R20>
						<R21>-0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">GhostMagicCarpet</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=179123396</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>8.25014496</X>
							<Y>4.38657188</Y>
							<Z>14.5514183</Z>
							<R00>-0.700571835</R00>
							<R01>-0.118078604</R01>
							<R02>0.703744411</R02>
							<R10>-0.706978381</R10>
							<R11>-0.0190032721</R11>
							<R12>-0.706979632</R12>
							<R20>0.0968526453</R20>
							<R21>-0.99282217</R21>
							<R22>-0.0701659024</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX29847E5F5711416093D6D53DF171BDB4">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>8.25014496</X>
							<Y>4.38657188</Y>
							<Z>14.5514183</Z>
							<R00>-0.700571835</R00>
							<R01>-0.118078604</R01>
							<R02>0.703744411</R02>
							<R10>-0.706978381</R10>
							<R11>-0.0190032721</R11>
							<R12>-0.706979632</R12>
							<R20>0.0968526453</R20>
							<R21>-0.99282217</R21>
							<R22>-0.0701659024</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>3.5</X>
							<Y>1</Y>
							<Z>5.5</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX3FA978A474AC4E40B5CDAF4775CA447C">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset?id=179123355</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.5</X>
								<Y>0.5</Y>
								<Z>0.5</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset?id=179123375</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX2287F1B30EB64AF79F399FD53E09AD3C">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Fade</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">0.125</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset?id=130113415</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Script" referent="RBXD373394CA5A34D25B547CAE4350CC50C">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{51A884DE-8FAA-4615-8582-D49140B7B2E0}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")

Animations = {
	Sit = Tool:WaitForChild("Sit")
}

Sounds = {
	Fade = Handle:WaitForChild("Fade")
}

ServerControl = (Tool:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Tool

Gravity = 196.20
ReloadTime = 1

Speed = 100

Equipped = false

Tool.Enabled = true

CameraSpeed = {
	X = 40,
	Z = 60
}

Directions = {
	Forward = false,
	Backward = false,
	Left = false,
	Right = false,
}

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if player == Player then
		if Mode == "KeyPress" then
			local Key = Value.Key
			local Down = Value.Down
			if Key == "w" or Key == "w" then
				Directions.Forward = Down
			elseif Key == "s" or Key == "s" then
				Directions.Backward = Down
			elseif Key == "a" or Key == "a" then
				Directions.Left = Down
			elseif Key == "d" or Key == "d" then
				Directions.Right = Down
			end
		end
	end
end)

function InvokeClient(Mode, Value)
	local ReturnValue = nil
	pcall(function()
		ReturnValue = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ReturnValue
end

function GetTotalMass(Parent)
	local Mass = 0
	local function GetMass(Parent)
		for i, v in pairs(Parent:GetChildren()) do
			if v:IsA("BasePart") then
				Mass = (Mass + v:GetMass())
			end
			GetMass(v)
		end
	end
	GetMass(Parent)
	return Mass
end

function Fade(Part, Invisible)
	local Pause = Instance.new("BoolValue")
	Pause.Value = false
	Spawn(function()
		local Transparency = Part.Transparency
		for i = 0, (math.abs(((Invisible and (1 - Transparency)) or (Transparency - 0))) / 0.1) do
			if Pause.Value then
				break
			end
			Part.Transparency = Part.Transparency + ((Invisible and 0.1) or -0.1)
			wait(0.1)
		end
		if not Pause.Value then
			Part.Transparency = ((Invisible and 1) or 0)
		end
	end)
	return Pause
end
function Activated()
	if not Tool.Enabled or not CheckIfAlive() then
		return
	end
	Tool.Enabled = false
	if Carpet and Carpet.Parent then
		Carpet:Destroy()
		Handle.Transparency = 0
		InvokeClient("StopAnimation", Animations.Sit)
		if Humanoid and Humanoid.Parent then
			Humanoid.PlatformStand = false
		end
	else
		if Humanoid and Humanoid.Parent then
			Humanoid.PlatformStand = true
		end
		Handle.Transparency = 1
		Carpet = Handle:Clone()
		Carpet.Name = "GhostCarpet"
		Carpet.CanCollide = true
		Carpet.Transparency = 0
		local Weld = Instance.new("Weld")
		Weld.Part0 = Torso
		Weld.Part1 = Carpet
		Weld.C0 = CFrame.new(0, -1.5, -1)
		Weld.Parent = Carpet
		BodyVelocity = Instance.new("BodyVelocity")
		BodyVelocity.maxForce = Vector3.new(0, 0, 0)
		BodyVelocity.velocity = Vector3.new(0, 0, 0)
		BodyVelocity.Parent = Carpet
		BodyPosition = Instance.new("BodyPosition")
		BodyPosition.maxForce = Vector3.new(0, 0, 0)
		BodyPosition.position = Torso.Position
		BodyPosition.Parent = Carpet
		BodyGyro = Instance.new("BodyGyro")
		BodyGyro.maxTorque = Vector3.new(math.huge, math.huge, math.huge)
		BodyGyro.Parent = Carpet
		Spawn(function()
			local MovingTick = tick()
			local Visible = true
			local Stopped = (((not Directions.Forward and not Directions.Backward and not Directions.Left and not Directions.Right) and true) or false)
			local Pause = nil
			while Equipped and CheckIfAlive() and BodyGyro and BodyGyro.Parent do
				local CoordinateFrame = InvokeClient("CoordinateFrame", nil)
				local ForwardVector = CoordinateFrame:vectorToWorldSpace(Vector3.new(0, 0, -1))
				BodyGyro.cframe = CFrame.new(Vector3.new(0,0,0), ForwardVector)
				if Directions.Forward or Directions.Backward or Directions.Left or Directions.Right then
					if Visible then
						Sounds.Fade:Play()
						if Pause then
							Pause.Value = true
						end
						Pause = Fade(Carpet, true)
						Visible = false
					end
					Stopped = false
					MovingTick = tick()
					local NewPush = Vector3.new(0, 0, 0)
					if Directions.Forward and not Directions.Backward then
						NewPush = ForwardVector * CameraSpeed.Z
					end
					if not Directions.Forward and Directions.Backward then
						NewPush = ForwardVector * -CameraSpeed.Z
					end
					if Directions.Left and not Directions.Right then
						NewPush = NewPush + CoordinateFrame:vectorToWorldSpace(Vector3.new(-1, 0, 0)) * CameraSpeed.X
					end
					if not Directions.Left and Directions.Right then
						NewPush = NewPush + CoordinateFrame:vectorToWorldSpace(Vector3.new(1, 0, 0)) * CameraSpeed.X
					end

					local Mass = (GetTotalMass(Character) * Gravity ^ 2)
					BodyVelocity.maxForce = Vector3.new(Mass, Mass, Mass)

					BodyVelocity.velocity = NewPush

					BodyPosition.maxForce = Vector3.new(0, 0, 0)
				else
					BodyPosition.maxForce = Vector3.new(math.huge, math.huge, math.huge)
					if not Stopped then
						Stopped = true
						BodyPosition.position = Carpet.Position
					end
					BodyVelocity.maxForce = Vector3.new(0, 0, 0)
					if (tick() - MovingTick) &gt;= 3 and not Visible then
						Visible = true
						if Pause then
							Pause.Value = true
						end
						Pause = Fade(Carpet, false)
					end
				end
				wait()
			end
		end)
		Carpet.CFrame = Torso.CFrame
		Carpet.Parent = Character
		InvokeClient("PlayAnimation", {Animation = Animations.Sit, FadeTime = nil, Weight = nil, Speed = nil})
	end
	wait(ReloadTime)
	Tool.Enabled = true
end

function CheckIfAlive()
	return (Character.Parent and Player.Parent and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso.Parent)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	if not CheckIfAlive() then
		return
	end
	Equipped = true
end

function Unequipped()
	Equipped = false
	Handle.Transparency = 0
	if Humanoid and Humanoid.Parent then
		Humanoid.PlatformStand = false
	end
	if Carpet and Carpet.Parent then
		Carpet:Destroy()
	end
	for i, v in pairs(Directions) do
		Directions[i] = false
	end
end

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXC1EA59A1C4ED440FB0A649F5AC4745E2">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset?id=179224234</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Sit</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXEADB43F7E73342F387B03EDAE64CDC53">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{2C959F8E-F241-48DC-9041-32BE8140C952}</string>
						<ProtectedString name="Source">--Rescripted by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")

Camera = game:GetService("Workspace").CurrentCamera

Animations = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ClientControl.OnClientInvoke = (function(Mode, Value)
	if Mode == "PlayAnimation" and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
		table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
	elseif Mode == "StopAnimation" and Value then
		for i, v in pairs(Animations) do
			if v.Animation == Value then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	elseif Mode == "CoordinateFrame" then
		return Camera.CoordinateFrame
	end
end)

function InvokeServer(Mode, Value)
	pcall(function()
		local ServerReturn = ServerControl:InvokeServer(Mode, Value)
		return ServerReturn
	end)
end

function CheckIfAlive()
	return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Camera" referent="RBXB9EEE896A7E64049B56C1BA251A4668C">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>5.28948402</X>
							<Y>7.00181961</Y>
							<Z>12.7400274</Z>
							<R00>-0.77050519</R00>
							<R01>0.247017235</R01>
							<R02>-0.58762598</R02>
							<R10>1.49011612e-08</R10>
							<R11>0.921862066</R11>
							<R12>0.387518257</R12>
							<R20>0.637433767</R20>
							<R21>0.298584819</R21>
							<R22>-0.710299492</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>5.58329821</X>
							<Y>6.80805969</Y>
							<Z>13.0951786</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		