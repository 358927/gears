<Item class="Model" referent="RBX2EAF6C48E6F549F58DA3262BEC5A5C8A">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">97161241</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBX4A81853BADC94FB4A1C5F6AED27A3695">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>1.5</X>
						<Y>3.5</Y>
						<Z>-1.29999995</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">SuperStompBoots</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=97180656</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>-0.0499999821</X>
							<Y>0.599999666</Y>
							<Z>-0.135000765</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX44AAEA48D2D140CD954A170BBEC2EAB2">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-0.0499999821</X>
							<Y>0.599999666</Y>
							<Z>-0.0400007591</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">1</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>2</X>
							<Y>1</Y>
							<Z>1.60000002</Z>
						</Vector3>
					</Properties>
					<Item class="Sound" referent="RBX05A63E339CB94D8BA77568CFFF01AF97">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Jump</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">2</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/Asset?ID=92628581</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="SpecialMesh" referent="RBXBA6C7E90994F42AC9D20F257CE7D4622">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=97180581</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=97180639</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX102314F7F6C54E249FBECBCBE8CE15BB">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Hit</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/Asset?ID=92597264</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Animation" referent="RBXC727BA986AD24779BAEB7D26E8E722AE">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?ID=208636716</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Idle</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX3C35FB9F1A454563BDA06A0DDCBFA448">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{39450F63-0622-47ED-BA3C-861834535700}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ToolEquipped = false

function SetAnimation(Mode, Value)
	if Mode == "PlayAnimation" and Value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
		table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
	elseif Mode == "StopAnimation" and Value then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	end
end

function CheckIfAlive()
	return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.Button1Down:connect(function()
		local Target = Mouse.Target
		local Position = Mouse.Hit.p
		InvokeServer("MouseClick", {Down = true, Target = Target, Position = Position})
	end)
	Mouse.Button1Up:connect(function()
		local Target = Mouse.Target
		local Position = Mouse.Hit.p
		InvokeServer("MouseClick", {Down = false, Target = Target, Position = Position})
	end)
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
end

function Unequipped()
	ToolEquipped = false
	LocalObjects = {}
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}
end

function InvokeServer(Mode, Value)
	local ServerReturn = nil
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(Mode, Value)
	end)
	return ServerReturn
end

function OnClientInvoke(Mode, Value)
	if Mode == "PlayAnimation" and Value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", Value)
	elseif Mode == "StopAnimation" and Value then
		SetAnimation("StopAnimation", Value)
	elseif Mode == "PlaySound" and Value then
		Value:Play()
	elseif Mode == "StopSound" and Value then
		Value:Stop()
	elseif Mode == "MousePosition" then
		return PlayerMouse.Hit.p
	end
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)
ClientControl.OnClientInvoke = OnClientInvoke</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Script" referent="RBX780057D6ACE947DB810272DA9C6902A1">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{1CA6E24F-FA6A-464C-874A-5B5C5B1EBC08}</string>
						<ProtectedString name="Source">--Rescripted by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
InsertService = game:GetService("InsertService")

Functions = require(script:WaitForChild("Functions"))

local function Create_PrivImpl(objectType)
	if type(objectType) ~= 'string' then
		error("Argument of Create must be a string", 2)
	end
	--return the proxy function that gives us the nice Create'string'{data} syntax
	--The first function call is a function call using Lua's single-string-argument syntax
	--The second function call is using Lua's single-table-argument syntax
	--Both can be chained together for the nice effect.
	return function(dat)
		--default to nothing, to handle the no argument given case
		dat = dat or {}

		--make the object to mutate
		local obj = Instance.new(objectType)
		local parent = nil

		--stored constructor function to be called after other initialization
		local ctor = nil

		for k, v in pairs(dat) do
			--add property
			if type(k) == 'string' then
				if k == 'Parent' then
					-- Parent should always be set last, setting the Parent of a new object
					-- immediately makes performance worse for all subsequent property updates.
					parent = v
				else
					obj[k] = v
				end


			--add child
			elseif type(k) == 'number' then
				if type(v) ~= 'userdata' then
					error("Bad entry in Create body: Numeric keys must be paired with children, got a: "..type(v), 2)
				end
				v.Parent = obj


			--event connect
			elseif type(k) == 'table' and k.__eventname then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create.E\'"..k.__eventname.."\']` must have a function value\
							got: "..tostring(v), 2)
				end
				obj[k.__eventname]:connect(v)


			--define constructor function
			elseif k == t.Create then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create]` should be paired with a constructor function, \
							got: "..tostring(v), 2)
				elseif ctor then
					--ctor already exists, only one allowed
					error("Bad entry in Create body: Only one constructor function is allowed", 2)
				end
				ctor = v


			else
				error("Bad entry ("..tostring(k).." =&gt; "..tostring(v)..") in Create body", 2)
			end
		end

		--apply constructor function if it exists
		if ctor then
			ctor(obj)
		end

		if parent then
			obj.Parent = parent
		end

		--return the completed object
		return obj
	end
end

--now, create the functor:
Create = setmetatable({}, {__call = function(tb, ...) return Create_PrivImpl(...) end})

--and create the "Event.E" syntax stub. Really it's just a stub to construct a table which our Create
--function can recognize as special.
Create.E = function(eventName)
	return {__eventname = eventName}
end


FreezePlayer = script:WaitForChild("FreezePlayer")
RechargeGui = script:WaitForChild("RechargeGui")

BaseUrl = "http://www.roblox.com/asset/?id="

Gravity = 196.20

Damage = 60
CoolDownTime = 9
MaxJumpDistance = 60
LastUse = 0
PointsAlongJump = 18

Rate = (1 / 60)

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	Shape = Enum.PartType.Block,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Anchored = false,
	CanCollide = true,
	Locked = true,
}

BaseBoot = Functions.SetProperties({Object = BasePart:Clone(), Properties = {
	Name = "Boot",
	Size = Vector3.new(1, 1, 1.6),
	CanCollide = false,
}})

BootMesh = Create("SpecialMesh"){
	Name = "Mesh",
	MeshType = Enum.MeshType.FileMesh,
	MeshId = (BaseUrl .. "97180581"),
	TextureId = (BaseUrl .. "97180639"),
	Scale = Vector3.new(1, 1, 1),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = BaseBoot,
}

Grips = {
	Equipped = CFrame.new(0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1),
	Unequipped = CFrame.new(1.5, 3.5, -1.3, 1, 0, 0, 0, 1, 0, 0, 0, 1)
}

Animations = {
	Idle = {Animation = Tool:WaitForChild("Idle"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil}
}

Sounds = {
	Hit = Handle:WaitForChild("Hit"),
	Jump = Handle:WaitForChild("Jump")
}

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

ToolEquipped = false

Handle.Transparency = 1
Tool.Enabled = true

function EquipBoots()
	UnequipBoots()
	local LeftLeg = Character:FindFirstChild("Left Leg")
	local RightLeg = Character:FindFirstChild("Right Leg")
	for i, v in pairs({LeftLeg, RightLeg}) do
		if v and v.Parent then
			local Boot = Functions.SetProperties({Object = BaseBoot:Clone(), Properties = {
				Name = (((v == LeftLeg and "Left") or "Right") .. "Boot"),
			}})
			local Weld = Create("Weld"){
				Part0 = Boot,
				Part1 = v,
				C0 = CFrame.new(0, 0.57, 0.19),
				Parent = Boot,
			}
			if i == LeftLeg then
				LeftBoot = Boot
				LeftWeld = Weld
			else
				RightBoot = Boot
				RightWeld = Weld
			end
			Boot.Parent = Tool
		end
	end
end

function CreateDisplayBoots()
	for i = 1, 2 do
		local Boot = Functions.SetProperties({Object = BaseBoot:Clone(), Properties = {
			Name = (((i == 1 and "Left") or "Right") .. "Boot")
		}})
		local Weld = Create("Weld"){
			Part0 = Boot,
			Part1 = Handle,
			C0 = CFrame.new(((((Boot.Size.X / 2) + (Handle.Size.X / 2)) / 2.5) * ((i == 1 and -1) or 1)), 0, 0.19),
			Parent = Boot,
		}
		Boot.Parent = Tool
	end
end

function UnequipBoots()
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("BasePart") and (v.Name == "LeftBoot" or v.Name == "RightBoot") then
			v:Destroy()
		end
	end
end

function PointOnCircle(OriginX, OriginZ, Radius, Theta)
	local x = OriginX + Radius * math.cos(Theta)
	local z = OriginZ + Radius * math.sin(Theta)
	return x, z
end

function SquishCharacter(character)
	local humanoid = character:FindFirstChild("Humanoid")
	if humanoid and humanoid.Health &gt; 0 then
		Functions.UntagHumanoid(humanoid)
		Functions.TagHumanoid(humanoid, Player)
	end
	local LowestY = math.huge
	for i, v in pairs(character:GetChildren()) do
		if v:IsA("BasePart") then
			local SquishedPoint = (v.CFrame.p - (v.Size * 0.4))
			if SquishedPoint.Y &lt; LowestY then
				LowestY = SquishedPoint.Y
			end
		end
	end
	if not LowestY then
		return
	end
	for i, v in pairs(character:GetChildren()) do
		if v:IsA("BasePart") then
			local OriginalCFrame = v.CFrame
			local OffsetY = (OriginalCFrame.p.Y - LowestY)
			Functions.SetProperties({Object = v, Properties = {
				Anchored = true,
				FormFactor = Enum.FormFactor.Custom,
			}})
			local OrigCFrame = v.CFrame
			local OffsetY = (OrigCFrame.p.Y - LowestY)
			if v.Name ~= "Head" then
				v.Size = v.Size * Vector3.new(1.6, 0.2, 1.6)
			else
				local Mesh = v:FindFirstChild("Mesh")
				if Mesh then
					Mesh.Scale = Vector3.new(Mesh.Scale.X, ((Mesh.Scale.Y / 4) * 3), Mesh.Scale.Z)
				end
			end
			v.CFrame = (OrigCFrame - Vector3.new(0, OffsetY, 0))
			if v.Name == "Torso" then
				v.CFrame = v.CFrame + Vector3.new(0, 0.1, 0)
			end
		elseif v:IsA("CharacterMesh") then
			local BodyParts = character:GetChildren()
			local BodyPart
			for ii, vv in pairs(character:GetChildren()) do
				if vv:IsA("BasePart") and string.lower(string.gsub(v.BodyPart.Name, " ", "")) == string.lower(vv.Name) then
					local MeshPresent = false
					for iii, vvv in pairs(vv:GetChildren()) do
						if vvv:IsA("DataModelMesh") then
							MeshPresent = true
						end
					end
					if not MeshPresent then
						local NewMesh = Create("SpecialMesh"){
							MeshId = (BaseUrl .. tostring(v.MeshId)),
							TextureId = ((v.OverlayTextureId ~= 0 and (BaseUrl .. v.OverlayTextureId)) or (v.BaseTextureId ~= 0 and (BaseUrl .. v.BaseTextureId)) or ""),
							Scale = Vector3.new(1, 0.2, 1),
							Parent = vv,
						}
					end
				end
			end
		end
	end
end

function Jump(Destination, TargetObject)

	if not ToolEquipped or not CheckIfAlive() then
		return
	end

	local DifferenceVector = (Torso.CFrame.p - Destination)
	local Distance = DifferenceVector.Magnitude
	local DirVector = DifferenceVector.Unit
	local HalfPoint = ((DifferenceVector / 2) + Torso.Position)
	local ArcedHalfPoint = (DirVector:Cross(Vector3.new(0, 1, 0)):Cross(DirVector) * (Distance / 2) + HalfPoint)

	if Distance &gt; MaxJumpDistance then
		if RechargeGuiClone and RechargeGuiClone.Parent then
			local RechargeText = RechargeGuiClone:FindFirstChild("RechargeText")
			if RechargeText then
				RechargeText.Text = (RechargeText.Text .. " ")
				RechargeText.Text = "Too Far Away!"
				local TextChanged = false
				local TextChangedConnection = RechargeText.Changed:connect(function(Property)
					if Property == "Text" then
						TextChanged = true
					end
				end)
				Delay(2, (function()
					if TextChangedConnection then
						TextChangedConnection:disconnect()
					end
					if not TextChanged then
						RechargeText.Text = "Ready"
					end
				end))
			end
		end
		LastUse = 0
		return
	end
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	local CurrentlyEquipped = true
	ToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
		if ToolUnequipped then
			ToolUnequipped:disconnect()
		end
	end)

	StartGuiRecharge()
	if TargetObject and TargetObject.Parent then
		local character = TargetObject.Parent
		if character and character:IsA("Hat") then
			character = character.Parent
		end
		local humanoid = character:FindFirstChild("Humanoid")
		if humanoid then
			local freezePlayerCopy = FreezePlayer:Clone()
			freezePlayerCopy.Disabled = false
			freezePlayerCopy.Parent = character
		end
	end

	local WayPoints = {}
	for i = 1, PointsAlongJump do
		if not ToolEquipped or not CurrentlyEquipped or not CheckIfAlive() then
			break
		end
		local ObjectZ, ObjectY = PointOnCircle((Distance / 2), 0, (Distance / 2), (math.pi - (math.pi / PointsAlongJump) * i))
		local NextPoint = CFrame.new(Torso.CFrame.p, Destination):pointToWorldSpace(Vector3.new(0, ObjectY, -ObjectZ))
		local NextTargetPart = Functions.SetProperties({Object = BasePart:Clone(), Properties = {
			Name = tostring(i),
			BrickColor = BrickColor.new("Really red"),
			Shape = Enum.PartType.Ball,
			Size = Vector3.new(1, 1, 1),
			CanCollide = false,
			Anchored = true,
			CFrame = CFrame.new(NextPoint),
		}})
		Debris:AddItem(NextTargetPart, 10)
		NextTargetPart.Parent = game:GetService("Workspace")
		table.insert(WayPoints, NextTargetPart)
	end
	Humanoid.PlatformStand = true
	Sounds.Jump:Play()
	local BodyPosition = Create("BodyPosition"){
		Parent = Torso,
	}
	local BodyGyro = Create("BodyGyro"){
		maxTorque = Vector3.new(math.huge, math.huge, math.huge),
		Parent = Torso,
	}
	local CurrentWayPoint = 1
	Spawn(function()
		BodyGyro.cframe = CFrame.new(Torso.CFrame.p, Destination)
		while BodyPosition and BodyPosition.Parent and ToolEquipped and CurrentlyEquipped and CheckIfAlive() do
			local WayPoint = WayPoints[CurrentWayPoint]
			local ConnectedParts = Functions.GetAllConnectedParts(Torso)
			local Mass = 0
			for i, v in pairs(ConnectedParts) do
				Mass = (Mass + v:GetMass())
			end
			local Mass = (Mass * Gravity * math.huge)
			BodyPosition.maxForce = Vector3.new(Mass, Mass, Mass)
			BodyPosition.position = WayPoint.Position
			if (Torso.Position - WayPoint.Position).magnitude &lt;= 10 then
				CurrentWayPoint = (CurrentWayPoint + 1)
				if CurrentWayPoint &gt; #WayPoints then
					CurrentWayPoint = #WayPoints
				end
				if CurrentWayPoint == #WayPoints then
					break
				end
			end
			wait(Rate)
		end
		for i, v in pairs({BodyPosition, BodyGyro}) do
			if v and v.Parent then
				v:Destroy()
			end
		end
		Humanoid.PlatformStand = false
		wait(0.5)
		for i, v in pairs({LeftBootConnection, RightBootConnection}) do
			if v then
				v:disconnect()
			end
		end
		for i, v in pairs(WayPoints) do
			if v and v.Parent then
				v:Destroy()
			end
		end
	end)

	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end

	local BootsTouched = false
	for i, v in pairs({LeftBoot, RightBoot}) do
		local Weld = ((v == LeftBoot and LeftWeld) or RightWeld)
		local connection = v.Touched:connect(function(Hit)
			if not Hit or not Hit.Parent or CurrentWayPoint &lt; (#WayPoints - 1) or BootsTouched or not ToolEquipped or not CurrentlyEquipped or not CheckIfAlive() then
				return
			end
			if not Weld or not Weld.Parent or not Weld.Part0 or not Weld.Part1 or Weld.Part0 ~= v then
				return
			end
			local character = Hit.Parent
			if character:IsA("Hat") then
				character = character.Parent
			end
			if character == Character then
				return
			end
			local player = Players:GetPlayerFromCharacter(character)
			if player and Functions.IsTeamMate(Player, player) then
				return
			end
			local humanoid = character:FindFirstChild("Humanoid")
			if not humanoid or humanoid.Health == 0 then
				return
			end
			BootsTouched = true
			if humanoid and humanoid.Health &lt;= Damage then
				SquishCharacter(character)
			end
			Functions.UntagHumanoid(humanoid)
			Functions.TagHumanoid(humanoid, Player)
			humanoid:TakeDamage(Damage)
			Sounds.Hit:Play()
			for i, v in pairs({LeftBootConnection, RightBootConnection}) do
				if v then
					v:disconnect()
				end
			end
		end)
		if v == LeftBoot then
			LeftBootConnection = connection
		else
			RightBootConnection = connection
		end
	end
	Debris:AddItem(BodyPosition, CoolDownTime)
	Debris:AddItem(BodyGyro, CoolDownTime)
	wait(CoolDownTime)
	if CheckIfAlive() then
		Humanoid.PlatformStand = false
	end
	for i, v in pairs({LeftBootConnection, RightBootConnection}) do
		if v then
			v:disconnect()
		end
	end
end

function StartGuiRecharge()
	if not RechargeGuiClone or not RechargeGuiClone.Parent then
		return
	end
	local Bar = RechargeGuiClone:FindFirstChild("Bar")
	local RechargeText = RechargeGuiClone:FindFirstChild("RechargeText")
	if not Bar or not RechargeText then
		return
	end
	local Backing = Bar:FindFirstChild("Backing")
	local Fill = Bar:FindFirstChild("Fill")
	if not Backing or not Fill then
		return
	end
	RechargeText.Text = "Recharging..."
	local TimeRemaining = math.min(CoolDownTime, tick() - LastUse)
	Fill.Size = UDim2.new((TimeRemaining / CoolDownTime), 0, 1, 0)
	Fill:TweenSize(UDim2.new(1, 0, 1, 0), "Out", "Linear", (CoolDownTime - TimeRemaining), false, (function()
		RechargeText.Text = "Ready"
	end))
end

function FindClosestTorso()
	local NearestTorso = nil
	local NearestDistance = MaxJumpDistance
	for i, v in pairs(Players:GetPlayers()) do
		if v:IsA("Player") and v ~= Player and v.Character then
			local character = v.Character
			local humanoid = character:FindFirstChild("Humanoid")
			local torso = character:FindFirstChild("Torso")
			if humanoid and humanoid.Health &gt; 0 and torso then
				local DistanceApart = (torso.Position - Torso.Position).magnitude
				if DistanceApart &lt; NearestDistance then
					NearestTorso = torso
					NearestDistance = DistanceApart
				end
			end
		end
	end
	return NearestTorso
end

function Activated(MouseData)
	if not Tool.Enabled or not CheckIfAlive() then
		return
	end
	local MouseTarget = MouseData.Target
	if not MouseTarget or not MouseTarget.Parent then
		return
	end
	local character = MouseTarget.Parent
	if character:IsA("Hat") or character:IsA("Tool") then
		character = character.Parent
	end
	local humanoid = character:FindFirstChild("Humanoid")
	if (tick() - LastUse) &gt; CoolDownTime then
		LastUse = tick()
		if humanoid then
			Jump(MouseData.Position, MouseTarget)
		else
			Jump(MouseData.Position)
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent and Player and Player.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	Player = Players:GetPlayerFromCharacter(Character)
	PlayerGui = Player:FindFirstChild("PlayerGui")
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		if PlayerGui then
			RechargeGuiClone = RechargeGui:Clone()
			RechargeGuiClone.Parent = PlayerGui
		end
		Spawn(EquipBoots)
		Spawn(StartGuiRecharge)
		Spawn(function()
			InvokeClient("PlayAnimation", Animations.Idle)
		end)
	end)
	Tool.Grip = Grips.Equipped
	ToolEquipped = true
end

function Unequipped()
	Tool.Grip = Grips.Unequipped
	Spawn(function()
		if RechargeGuiClone and RechargeGuiClone.Parent then
			RechargeGuiClone:Destroy()
		end
		for i, v in pairs({LeftBootConnection, RightBootConnection}) do
			if v then
				v:disconnect()
			end
		end
		Spawn(function()
			InvokeClient("StopAnimation", Animations.Idle)
		end)
		Spawn(UnequipBoots)
		Spawn(CreateDisplayBoots)
	end)
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "MouseClick" then
		local Down = value.Down
		if Down then
			Activated({Target = value.Target, Position = value.Position})
		end
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

UnequipBoots()
CreateDisplayBoots()

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
					<Item class="Script" referent="RBXFF008D84BD6F41C2988AB55C0D93A9B0">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">FreezePlayer</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{3118484D-4CE9-4EB8-823D-B7AC7D95C615}</string>
							<ProtectedString name="Source">--Fixed by Luckymaxer

local MyCharacter = script.Parent
local MyHumanoid = MyCharacter:FindFirstChild("Humanoid")
local MyTorso = MyCharacter:FindFirstChild("Torso")

if MyTorso and MyHumanoid then
	MyTorso.Anchored = true
	MyHumanoid.WalkSpeed = 0
	wait(2.5)
	if MyHumanoid.Health &gt; 0 then
		MyTorso.Anchored = false
		MyHumanoid.WalkSpeed = 16
	end
end

script:Destroy()
</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
					<Item class="ScreenGui" referent="RBX2D564318A2C04E76BA3BDC3B4936183D">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<bool name="AutoLocalize">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipToDeviceSafeArea">true</bool>
							<bool name="DefinesCapabilities">false</bool>
							<int name="DisplayOrder">0</int>
							<bool name="Enabled">true</bool>
							<string name="Name">RechargeGui</string>
							<bool name="ResetOnSpawn">true</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<token name="SafeAreaCompatibility">1</token>
							<token name="ScreenInsets">2</token>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<token name="ZIndexBehavior">0</token>
						</Properties>
						<Item class="Frame" referent="RBXE1FC6306C6184A1DBA86BFD7E00B8B44">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize" />
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.639215708</R>
									<G>0.635294139</G>
									<B>0.647058845</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">1</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">Bar</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>-100</XO>
									<YS>1</YS>
									<YO>-160</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>200</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">3</token>
								<BinaryString name="Tags" />
								<bool name="Visible">true</bool>
								<int name="ZIndex">4</int>
							</Properties>
							<Item class="Frame" referent="RBX49560EA6B2C44C61B853B4C0AC0B1C3C">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize" />
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0</R>
										<G>1</G>
										<B>0</B>
									</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">Fill</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags" />
									<bool name="Visible">true</bool>
									<int name="ZIndex">5</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX0D5EF873E9A643B292C9CBFA6F3D7E4A">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize" />
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">Backing</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags" />
									<bool name="Visible">true</bool>
									<int name="ZIndex">4</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextLabel" referent="RBXC4F4E550F91C473FAA2B4D0F64C0FA2A">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize" />
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.639215708</R>
									<G>0.635294139</G>
									<B>0.647058845</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">true</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/Arial.json</url></Family>
									<Weight>700</Weight>
									<Style>Normal</Style>
									<CachedFaceId><url>rbxasset://fonts/Arimo-Bold.ttf</url></CachedFaceId>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier" />
								<string name="LocalizationMatchedSourceText" />
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">RechargeText</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures" />
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>-200</XO>
									<YS>1</YS>
									<YO>-185</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>400</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
								<string name="Text">Lead Boots</string>
								<Color3 name="TextColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0.200000003</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">4</int>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBX9221F24F7A1C41A887D11745DD1D72B2">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">Functions</string>
							<string name="ScriptGuid">{E2B28A9B-9689-4FA3-BE37-90D9E67E6642}</string>
							<ProtectedString name="Source">--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Ray", "Bullet", "ParticlePart"}

Functions = {

	CheckTableForString = (function(Table, String)
		for i, v in pairs(Table) do
			if string.lower(v) == string.lower(String) then
				return true
			end
		end
		return false
	end),

	CheckIntangible = (function(Hit)
		if Hit and Hit.Parent then
			if (Hit.Transparency &gt;= 1 and not Hit.CanCollide) or Functions.CheckTableForString(ProjectileNames, Hit.Name) then
				return true
			end
			local ObjectParent = Hit.Parent
			local Character = ObjectParent.Parent
			local Humanoid = Character:FindFirstChild("Humanoid")
			if Humanoid and Humanoid.Health &gt; 0 and ObjectParent:IsA("Hat") then
				return true
			end
		end
		return false
	end),

	CastRay = (function(StartPos, Vec, Length, Ignore, DelayIfHit)
		local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
		if RayHit and Functions.CheckIntangible(RayHit) then
			if DelayIfHit then
				wait()
			end
			RayHit, RayPos, RayNormal = Functions.CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
		end
		return RayHit, RayPos, RayNormal
	end),

	IsTeamMate = (function(Player1, Player2)
		return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
	end),

	TagHumanoid = (function(humanoid, player)
		local Creator_Tag = Instance.new("ObjectValue")
		Creator_Tag.Name = "creator"
		Creator_Tag.Value = player
		Debris:AddItem(Creator_Tag, 2)
		Creator_Tag.Parent = humanoid
	end),

	UntagHumanoid = (function(humanoid)
		for i, v in pairs(humanoid:GetChildren()) do
			if v:IsA("ObjectValue") and v.Name == "creator" then
				v:Destroy()
			end
		end
	end),

	GetAllConnectedParts = (function(Object)
		local Parts = {}
		local function GetConnectedParts(Object)
			for i, v in pairs(Object:GetConnectedParts()) do
				local Ignore = false
				for ii, vv in pairs(Parts) do
					if v == vv then
						Ignore = true
					end
				end
				if not Ignore then
					table.insert(Parts, v)
					GetConnectedParts(v)
				end
			end
		end
		GetConnectedParts(Object)
		return Parts
	end),

	GetTotalParts = (function(MaxParts, PossibleParts, Parts)
		if MaxParts &lt; PossibleParts then
			return MaxParts
		elseif Parts &gt;= MaxParts then
			return 0
		elseif MaxParts &gt;= PossibleParts then
			local PartCount = (MaxParts - PossibleParts)
			if Parts &lt;= MaxParts then
				PartCount = (MaxParts - Parts)
				if PartCount &gt; PossibleParts then
					return PossibleParts
				else
					return PartCount
				end
			elseif PartCount &gt;= PossibleParts then
				return PossibleParts
			else
				return PartCount
			end
		end
	end),

	GetParts = (function(Region, MaxParts, Ignore)
		local Parts = {}
		local RerunFailed = false
		while #Parts &lt; MaxParts and not RerunFailed do
			local Region = Region
			local PossibleParts = Functions.GetTotalParts(MaxParts, 100, #Parts)
			local PartsNearby = game:GetService("Workspace"):FindPartsInRegion3WithIgnoreList(Region, Ignore, PossibleParts)
			if #PartsNearby == 0 then
				RerunFailed = true
			else
				for i, v in pairs(PartsNearby) do
					table.insert(Parts, v)
					table.insert(Ignore, v)
				end
			end
		end
		return Parts
	end),

	SetProperties = (function(Table)
		local Object = Table.Object
		local Properties = Table.Properties
		if not Object or not Properties then
			return
		end
		for i, v in pairs(Properties) do
			pcall(function()
				Object[i] = v
			end)
		end
		return Object
	end),

}

return Functions</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX5A869B64E74B429FB352FA83BAEA35EC">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>0.550000072</X>
							<Y>0.599999666</Y>
							<Z>-0.230000764</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">LeftBoot</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.189999998</X>
							<Y>0.790000021</Y>
							<Z>-0.600000024</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1.60000002</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX084677856A73495B94C308589BD61484">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=97180581</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=97180639</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBXB345F942FA254B98BB8A1FA8E545EAA3">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<CoordinateFrame name="C0">
								<X>-0.600000024</X>
								<Y>0</Y>
								<Z>0.189999998</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">true</bool>
							<string name="Name">Weld</string>
							<Ref name="Part0">RBX5A869B64E74B429FB352FA83BAEA35EC</Ref>
							<Ref name="Part1">RBX44AAEA48D2D140CD954A170BBEC2EAB2</Ref>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBXFDD5A61B0A40426898A4C8B37A25C1B3">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-0.649999976</X>
							<Y>0.599999666</Y>
							<Z>-0.230000764</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">RightBoot</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.189999998</X>
							<Y>-0.410000026</Y>
							<Z>0.600000024</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1.60000002</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBXC91661CB398C40C08EC24B7115B939D3">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=97180581</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=97180639</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBXC6DFE86EDEF148D887A32867D9ED1B1A">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<CoordinateFrame name="C0">
								<X>0.600000024</X>
								<Y>0</Y>
								<Z>0.189999998</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">true</bool>
							<string name="Name">Weld</string>
							<Ref name="Part0">RBXFDD5A61B0A40426898A4C8B37A25C1B3</Ref>
							<Ref name="Part1">RBX44AAEA48D2D140CD954A170BBEC2EAB2</Ref>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
				</Item>
				<Item class="Camera" referent="RBX11E34905B997483FB497701780B5DB34">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>1.52219069</X>
							<Y>1.13238978</Y>
							<Z>-2.25789022</Z>
							<R00>-0.813684404</R00>
							<R01>-0.177569434</R01>
							<R02>0.553522229</R02>
							<R10>1.4901163e-08</R10>
							<R11>0.952203035</R11>
							<R12>0.305465877</R12>
							<R20>-0.581306994</R20>
							<R21>0.248552829</R21>
							<R22>-0.774792671</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">5</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">65</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>0.326605201</X>
							<Y>0.47259593</Y>
							<Z>-0.58436954</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		