<Item class="Model" referent="RBX08D54937C4A14BB2910CC367E6525C91">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">152233094</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBX5C05471E43294C9DA5BE094621C8ACE1">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">false</bool>
					<CoordinateFrame name="Grip">
						<X>-0.25</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>-1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>-1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">BassDrop</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=151980533</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>53.2000008</X>
							<Y>3.50000024</Y>
							<Z>-10.4000006</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBXCD64B1ADB254462B94C40E644BB7CC99">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>53.2000008</X>
							<Y>3.50000024</Y>
							<Z>-10.4000006</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1.5</X>
							<Y>2</Y>
							<Z>0.75</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBXE701543C27354D42B6680B96CA60FD36">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=151980473</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=151980512</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX275AB4C9DD7C40399920600F9509530E">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">true</bool>
							<string name="Name">Music</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=152092736</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Script" referent="RBX149B8F8D2A294561A89D6879E5E3FA79">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">BassScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{5ECEAC33-7B84-47B3-AAEE-255E4DF1221E}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Debris = Game:GetService("Debris")
Players = Game:GetService("Players")

Tool = script.Parent
Handle = Tool:FindFirstChild("Handle")

Tool.Enabled = true
Handle.Transparency = 0

Music = Handle:WaitForChild("Music")
MeteorBassDropScript = script:WaitForChild("MeteorBassDropScript")
BassDrop = Tool:WaitForChild("BassDrop")

COOLDOWN_TIME = 35
LAUNCH_DISTANCE = 200

LastActivation = 0

PossibleIncomingVectors = {}

-- Create table of possible incoming vectors
for x = -1, 1 do
	for z = -1, 1 do
		table.insert(PossibleIncomingVectors, Vector3.new(x, 1, z).unit)
	end
end

function GetRandomFloat(minimum, maximum)
	local unitRandom = math.random()
	local interval = maximum - minimum
	-- there is potential overflow here if the interval is larger than max float
	if interval &lt;= 0 then
		print("GetRandomFloat: The range beween minimum and maximum is less than zero.")
		return nil
	end
	local randomNum = (unitRandom * interval) + minimum
	return randomNum
end

function RandomPointInCircle(minRadius, maxRadius)
	local outwardVector = Vector3.new(0,0,GetRandomFloat(minRadius, maxRadius))
	local rotation = math.random() * math.pi * 2
	return CFrame.Angles(0, rotation, 0) * outwardVector
end

function RayIgnoreCheck(hit)
	if hit then
		if hit.Transparency &gt;= 1 or string.lower(hit.Name) == "water" or
				hit.Name == "Effect" or hit.Name == "Rocket" or hit.Name == "Bullet" or
				hit.Name == "Handle" then
			return true
		end
	end
	return false
end

-- @preconditions: vec should be a unit vector, and 0 &lt; rayLength &lt;= 1000
function RayCast(startPos, vec, rayLength)
	local hitObject, hitPos = game.Workspace:FindPartOnRay(Ray.new(startPos + (vec * .01), vec * rayLength), Handle)
	if hitObject and hitPos then
		local distance = rayLength - (hitPos - startPos).magnitude
		if RayIgnoreCheck(hitObject) and distance &gt; 0 then
			-- there is a chance here for potential infinite recursion
			return RayCast(hitPos, vec, distance)
		end
	end
	return hitObject, hitPos
end

local function FindTargetSpot()
	return Workspace:FindFirstChild("TargetSpot")
end

local function FindOptimalLaunchVector(destination)
	local bestDist = 0
	local bestVec = Vector3.new(0, 1, 0)
	local bestPos = destination + bestVec
	for k, v in pairs(PossibleIncomingVectors) do
		local hitObject, hitPos = RayCast(destination, v, LAUNCH_DISTANCE)
		if (hitPos - destination).magnitude &gt; bestDist then
			bestVec = v
			bestDist = (hitPos - destination).magnitude
			bestPos = hitPos
		end
	end
	return bestVec, bestPos, bestDist
end



function onActivated()
	if tick() - LastActivation &gt; COOLDOWN_TIME then
		Tool.Enabled = false
		LastActivation = tick()
		if MyTorso then
			BassDropAnim = MyHumanoid:LoadAnimation(BassDrop)
			BassDropAnim.KeyframeReached:connect(function()
				local newBassDrop = Handle:Clone()
				newBassDrop.CanCollide = true
				local fire = Instance.new("Fire")
				fire.Enabled = true
				fire.Heat = 14
				fire.Parent = newBassDrop
				local offset = MyTorso.CFrame.lookVector * 1.5
				newBassDrop.CFrame = CFrame.new(MyTorso.CFrame.p + offset, MyTorso.CFrame.p)
				newBassDrop.Parent = game:GetService("Workspace")
				Debris:AddItem(newBassDrop, COOLDOWN_TIME - 1)
				Handle.Transparency = 1
				delay(COOLDOWN_TIME - 1, function() Handle.Transparency = 0 Tool.Enabled = true end)
				wait(2)
				if newBassDrop:FindFirstChild("Music") then
					newBassDrop.Music:Play()
				end
				for i = 1, 14 do
					fire.Enabled = true
					fire.Size = 3 + i
					local BassDropOffset = RandomPointInCircle(20, 100)
					if i == 14 then -- hard-code last one to hit you
						BassDropOffset = Vector3.new()
					end
					local meteorBassDrop = Handle:Clone()
					meteorBassDrop.Transparency = 0
					meteorBassDrop.Size = Vector3.new(3, 4, 1.5)
					meteorBassDrop.Mesh.Scale = Vector3.new(2, 2, 2)
					local creator = Instance.new("ObjectValue")
					creator.Name = "creator"
					creator.Value = MyPlayer
					creator.Parent = meteorBassDrop
					local meteorFire = Instance.new("Fire")
					local newScript = MeteorBassDropScript:Clone()
					meteorFire.Heat = 20
					meteorFire.Size = 18
					meteorFire.Parent = meteorBassDrop
					meteorBassDrop.Parent = Workspace
					local targetPoint = Instance.new("Part")
					targetPoint.Transparency = 1
					targetPoint.CanCollide = false
					targetPoint.Anchored = true
					targetPoint.CFrame = CFrame.new(BassDropOffset) + MyTorso.CFrame.p
					Debris:AddItem(targetPoint, 30)
					Debris:AddItem(meteorBassDrop, 30)
					local BassDropPropulsion = Instance.new("RocketPropulsion")
					BassDropPropulsion.Target = targetPoint
					BassDropPropulsion.MaxThrust = 100000
					BassDropPropulsion.MaxSpeed = 40
					BassDropPropulsion.Parent = meteorBassDrop
					targetPoint.Parent = Workspace
					local bestVec, bestPos, bestDist = FindOptimalLaunchVector(targetPoint.CFrame.p)
					meteorBassDrop.CFrame = CFrame.new(bestPos)
					BassDropPropulsion:Fire()
					newScript.Parent = meteorBassDrop
					newScript.Disabled = false
					wait(2)
				end
				wait(3)
				newBassDrop:Destroy()
			end)
			BassDropAnim:Play(0.5)
		end
	end
end

function onEquipped()
	MyCharacter = Tool.Parent
	MyPlayer = MyCharacter and Players:GetPlayerFromCharacter(MyCharacter)
	MyTorso = MyCharacter and MyCharacter:FindFirstChild("Torso")
	MyHumanoid = MyCharacter and MyCharacter:FindFirstChild("Humanoid")
end

function onUnequipped()
	if BassDropAnim then
		BassDropAnim:Stop()
	end
end

Tool.Equipped:connect(onEquipped)
Tool.Activated:connect(onActivated)
Tool.Unequipped:connect(onUnequipped)

</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
					<Item class="Script" referent="RBXC41501DE151443B0BFCA111F607ABA01">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">MeteorBassDropScript</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{2E1899CC-AD4D-42AA-8D3F-425FBD3F31A9}</string>
							<ProtectedString name="Source">--Made by Luckymaxer
--[[
	Fixed by ArceusInator
	1/23/2015 - It actually does damage now
--]]

BassDrop = script.Parent
Creator = BassDrop:WaitForChild("creator")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

BassDrop.Touched:connect(function(hitPart)
	local explosion = Instance.new('Explosion')
	explosion.BlastPressure = 0
	explosion.BlastRadius = 10
	explosion.Parent = BassDrop
	explosion.Position = BassDrop.CFrame.p
	BassDrop.Transparency = 1
	if BassDrop:FindFirstChild('Fire') then
		BassDrop.Fire.Enabled = false
	end
	local hitHumanoids = {}
	explosion.Hit:connect(function(hitPart)
		local hitParent = hitPart.Parent
		if hitParent and hitParent.Parent then
			local humanoid = hitParent:FindFirstChild("Humanoid")
			local player = Players:GetPlayerFromCharacter(hitParent)
			if humanoid and humanoid.Health &gt; 0 and not hitHumanoids[humanoid] and (player and player ~= Creator.Value and (player.TeamColor~=Creator.Value.TeamColor or player.Neutral or Creator.Value.Neutral) or not player) then
				hitHumanoids[humanoid]=true
				for i, v in pairs(humanoid:GetChildren()) do
					if v.Name == "creator" then
						v:Destroy()
					end
				end
				local creator = Creator:Clone()
				creator.Value = Creator.Value
				Debris:AddItem(creator, 2)
				creator.Parent = humanoid
				humanoid:TakeDamage(35)
			end
		end
	end)
	wait(1)
	BassDrop:Destroy()
end)</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBX7E68EC06C149464593CD69A743BE8E64">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MouseIcon</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{8867FAFC-0F94-4BA1-94EE-72F83AC2ACAD}</string>
						<ProtectedString name="Source">Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX22853DEDD9BB407581E5EE68DE0D8770">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset?id=152208184</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">BassDrop</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Camera" referent="RBX9CD88EBBABC64E27904328AC4708765C">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>53.8267593</X>
							<Y>3.73887968</Y>
							<Z>-12.2841625</Z>
							<R00>-0.948878765</R00>
							<R01>-0.0377002656</R01>
							<R02>0.313381016</R02>
							<R10>-0</R10>
							<R11>0.992841303</R11>
							<R12>0.119440496</R12>
							<R20>-0.315640569</R20>
							<R21>0.113334551</R21>
							<R22>-0.94208616</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>53.2000008</X>
							<Y>3.5</Y>
							<Z>-10.4000006</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		