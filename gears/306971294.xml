<Item class="Model" referent="RBX19883B0284CF459DBAD581BEC4FADC63">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">306971294</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBXBCB8607AADA7484D85C22753E7015092">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>0</X>
						<Y>-0.25</Y>
						<Z>0.600000024</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">BatWingScythe</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=305826251</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>0.0140389996</X>
							<Y>20.6066933</Y>
							<Z>0.0402580015</Z>
							<R00>0.932843387</R00>
							<R01>0.336360157</R01>
							<R02>0.129092008</R02>
							<R10>-0.343711644</R10>
							<R11>0.723437011</R11>
							<R12>0.598749459</R12>
							<R20>0.108005449</R20>
							<R21>-0.602909923</R21>
							<R22>0.79046458</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="LocalScript" referent="RBX2CEFB96F87114563B6EB50B83BDF5E0E">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MouseIcon</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{338FA922-A9AC-44C7-B853-1E6F080AC89D}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Part" referent="RBX6D59B751CBC44F85999B46C0C1D35C0A">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>0.0140389996</X>
							<Y>20.6066933</Y>
							<Z>0.0402580015</Z>
							<R00>0.932843387</R00>
							<R01>0.336360157</R01>
							<R02>0.129092008</R02>
							<R10>-0.343711644</R10>
							<R11>0.723437011</R11>
							<R12>0.598749459</R12>
							<R20>0.108005449</R20>
							<R21>-0.602909923</R21>
							<R22>0.79046458</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>0.25</X>
							<Y>5.5</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX34F32C656C5743D3A2C8BAF6D55AB7B7">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=305826272</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1.75</X>
								<Y>1.75</Y>
								<Z>1.75</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=305826226</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBXFE518D834D004B3B8E9E98A22D0EBF7D">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Unsheath</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1.29999995</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222225</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX77242BCF59584225A5994888E683A1F1">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Swipe1</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=28144268</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX33A3703434244053B17B74C945A9B473">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Swipe2</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=28144277</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX59F4AA9913CF42CB86E37A9A73C8B077">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Swipe3</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=28144291</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX409A89766716460CB8978B2EDED44523">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Swipe4</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=28144295</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX752F26CBA3C94535BF6D686439B952B9">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Hit</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">0.75</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=109362738</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Camera" referent="RBX2FC9D8D3A3C24623873222DAED41C95D">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>3.55968285</X>
							<Y>20.2770729</Y>
							<Z>0.324135512</Z>
							<R00>0.131495684</R00>
							<R01>0.165258691</R01>
							<R02>0.977444828</R02>
							<R10>-0</R10>
							<R11>0.986006558</R11>
							<R12>-0.166706249</R12>
							<R20>-0.991316736</R20>
							<R21>0.0219211522</R21>
							<R22>0.129655614</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>1.7025373</X>
							<Y>20.5938148</Y>
							<Z>0.0777897835</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX649540B5ABDC4650AE86C530FF94524A">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{01FA15C7-8515-4089-87ED-DC7FAAD8711C}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")
ContentProvider = game:GetService("ContentProvider")

local function Create_PrivImpl(objectType)
	if type(objectType) ~= 'string' then
		error("Argument of Create must be a string", 2)
	end
	--return the proxy function that gives us the nice Create'string'{data} syntax
	--The first function call is a function call using Lua's single-string-argument syntax
	--The second function call is using Lua's single-table-argument syntax
	--Both can be chained together for the nice effect.
	return function(dat)
		--default to nothing, to handle the no argument given case
		dat = dat or {}

		--make the object to mutate
		local obj = Instance.new(objectType)
		local parent = nil

		--stored constructor function to be called after other initialization
		local ctor = nil

		for k, v in pairs(dat) do
			--add property
			if type(k) == 'string' then
				if k == 'Parent' then
					-- Parent should always be set last, setting the Parent of a new object
					-- immediately makes performance worse for all subsequent property updates.
					parent = v
				else
					obj[k] = v
				end


			--add child
			elseif type(k) == 'number' then
				if type(v) ~= 'userdata' then
					error("Bad entry in Create body: Numeric keys must be paired with children, got a: "..type(v), 2)
				end
				v.Parent = obj


			--event connect
			elseif type(k) == 'table' and k.__eventname then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create.E\'"..k.__eventname.."\']` must have a function value\
							got: "..tostring(v), 2)
				end
				obj[k.__eventname]:connect(v)


			--define constructor function
			elseif k == t.Create then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create]` should be paired with a constructor function, \
							got: "..tostring(v), 2)
				elseif ctor then
					--ctor already exists, only one allowed
					error("Bad entry in Create body: Only one constructor function is allowed", 2)
				end
				ctor = v


			else
				error("Bad entry ("..tostring(k).." =&gt; "..tostring(v)..") in Create body", 2)
			end
		end

		--apply constructor function if it exists
		if ctor then
			ctor(obj)
		end

		if parent then
			obj.Parent = parent
		end

		--return the completed object
		return obj
	end
end

--now, create the functor:
Create = setmetatable({}, {__call = function(tb, ...) return Create_PrivImpl(...) end})

--and create the "Event.E" syntax stub. Really it's just a stub to construct a table which our Create
--function can recognize as special.
Create.E = function(eventName)
	return {__eventname = eventName}
end


Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

Rate = (1 / 60)

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	end
end

function DisableJump(Boolean)
	if JumpDisabled then
		JumpDisabled:disconnect()
	end
	if not Boolean then
		return
	end
	JumpDisabled = Humanoid.Changed:connect(function(Property)
		if Property == "Jump" and Humanoid.Jump then
			Humanoid.Jump = false
		end
	end)
end

function KeyPressed(Key, Down)
	Spawn(function()
		InvokeServer("KeyPress", {Key = Key, Down = Down})
	end)
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Mouse
	PlayerMouse.KeyDown:connect(function(Key)
		KeyPressed(Key, true)
	end)
	PlayerMouse.KeyUp:connect(function(Key)
		KeyPressed(Key, false)
	end)
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("Animation") then
			ContentProvider:Preload(v.AnimationId)
		end
	end
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs({JumpDisabled, ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end
	LocalObjects = {}
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	local ServerReturn = nil
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" and value then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "DisableJump" and value then
		local Disabled = value.Disabled
		DisableJump(Disabled)
	elseif mode == "MouseData" then
		return ((PlayerMouse and {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}) or nil)
	elseif mode == "SetLocalTransparencyModifier" and value and ToolEquipped then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							if ((not v.AutoUpdate and (v.Object.LocalTransparencyModifier == 1 or  v.Object.LocalTransparencyModifier == 0)) or v.AutoUpdate) then
								v.Object.LocalTransparencyModifier = v.Transparency
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Script" referent="RBXBA7853CE3E46488E98B23016EC0FA757">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{A0F71BC1-83A0-4E2F-A54C-E0F46B065CAD}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")
Mesh = Handle:WaitForChild("Mesh")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
InsertService = game:GetService("InsertService")
RunService = game:GetService("RunService")

BatModel = InsertService:LoadAsset(167116921)
BaseBat = BatModel:GetChildren()[1]:Clone()
Debris:AddItem(BatModel, 1)

ScaleModule = require(201433042)
BaseBat.Torso.Anchored = true
BaseBat.Parent = game:GetService("Workspace")
ScaleModule.ScaleCharacter(BaseBat, 0.2, {ResizeModels = true})
BaseBat.Parent = nil

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

Functions = require(script:WaitForChild("Functions"))
BatManagement = script:WaitForChild("BatManagement")

EffectFire = script:WaitForChild("EffectFire")
ParticleScript = script:WaitForChild("ParticleScript")

Grips = {
	Unequipped = CFrame.new(0, -0.25, 0.6, 1, 0, 0, 0, 1, 0, 0, 0, 1),
	Equipped = CFrame.new(0, -0.25, 0.6, 1, 0, 0, 0, 1, 0, 0, 0, 1),
}

Animations = {
	Equip = {Animation = Tool:WaitForChild("Equip"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
	Strike = {Animation = Tool:WaitForChild("Strike"), FadeTime = nil, Weight = nil, Speed = 1.75, Duration = 1.25},
	Slash = {Animation = Tool:WaitForChild("Slash"), FadeTime = nil, Weight = nil, Speed = 2, Duration = 1.25},
	DoubleSlash = {Animation = Tool:WaitForChild("DoubleSlash"), FadeTime = nil, Weight = nil, Speed = 1.25, Duration = 1.5},
	JumpAttack = {Animation = Tool:WaitForChild("JumpAttack"), FadeTime = nil, Weight = nil, Speed = nil, Duration = 1.125},
	Slice = {Animation = Tool:WaitForChild("Slice"), FadeTime = nil, Weight = nil, Speed = 2, Duration = 0.75},
	Cut = {Animation = Tool:WaitForChild("Cut"), FadeTime = nil, Weight = nil, Speed = 2, Duration = 1},
	SpinSlash = {Animation = Tool:WaitForChild("SpinSlash"), FadeTime = nil, Weight = nil, Speed = 2.25, Duration = 0.75},
}

Sounds = {
	Unsheath = Handle:WaitForChild("Unsheath"),
	Swipe1 = Handle:WaitForChild("Swipe1"),
	Swipe2 = Handle:WaitForChild("Swipe2"),
	Swipe3 = Handle:WaitForChild("Swipe3"),
	Swipe4 = Handle:WaitForChild("Swipe4"),
	Hit = Handle:WaitForChild("Hit"),
}

Damages = {
	Touch = 4,
	Slash = 20,
}
CurrentDamage = Damages.Touch

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Anchored = false,
	CanCollide = true,
	Locked = true,
}

Gravity = 196.20

Falling = false
JumpEnabled = true
ToolEquipped = false

Tool.Enabled = true
Tool.Grip = Grips.Unequipped

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

function BlowHit(Hit, Damage)
	if not Hit or not Hit.Parent or not CheckIfAlive() then
		return
	end
	local RightArm = Character:FindFirstChild("Right Arm")
	if not RightArm then
		return
	end
	local RightGrip = RightArm:FindFirstChild("RightGrip")
	if not RightGrip or RightGrip.Part0 ~= RightArm or RightGrip.Part1 ~= Handle then
		return
	end
	local character = Hit.Parent
	local humanoid = character:FindFirstChild("Humanoid")
	local torso = character:FindFirstChild("Torso")
	if not humanoid or humanoid.Health == 0 or not torso then
		return
	end
	local player = Players:GetPlayerFromCharacter(character)
	if player and (player == Player or Functions.IsTeamMate(Player, player)) then
		return
	end
	Functions.UntagHumanoid(humanoid)
	Functions.TagHumanoid(humanoid, Player)
	humanoid:TakeDamage(Damage)
	if humanoid.Health &lt;= 0 then
	end
	return true
end

function CreateScythePiece(CreateNew)
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("BasePart") and v ~= Handle then
			v:Destroy()
		end
	end
	if not CreateNew then
		return
	end
	Blade = BasePart:Clone()
	Blade.Name = "Blade"
	Blade.Transparency = 1
	Blade.Size = Vector3.new(0.25, 1.5, 4)
	Blade.CanCollide = false
	local Weld = Create("Weld"){
		Part0 = Handle,
		Part1 = Blade,
		C0 = CFrame.new(0, 2, -1),
		C1 = CFrame.new(0, 0, 0),
		Parent = Blade,
	}
	Blade.Parent = Tool
	local HitDelay = false
	for i, v in pairs({Handle, Blade}) do
		v.Touched:connect(function(Hit)
			if not Hit or not Hit.Parent or not CheckIfAlive() or HitDelay then
				return
			end
			local HitSuccessful = BlowHit(Hit, 10)
			if HitSuccessful then
				HitDelay = true
				wait(0.25)
				HitDelay = false
			end
		end)
	end
end

function CreateBats()
	local Bats = {}
	for i = 1, 8 do
		local Bat = BaseBat:Clone()
		local torso = Bat:FindFirstChild("Torso")
		if torso then
			local Mass = 0
			for i, v in pairs(Bat:GetChildren()) do
				if v:IsA("BasePart") then
					v.CanCollide = false
					Mass = (Mass + v:GetMass())
				end
			end
			Mass = (Mass * Gravity * 1.25)
			local BodyGyro = Create("BodyGyro"){
				maxTorque = Vector3.new(math.huge, math.huge, math.huge),
				Parent = torso,
			}
			local BodyPosition = Create("BodyPosition"){
				D = 10000,
				P = 20000,
				maxForce = Vector3.new(Mass, Mass, Mass),
				Parent = torso,
			}
			table.insert(Bats, {Bat = Bat, Torso = torso, BodyGyro = BodyGyro, BodyPosition = BodyPosition})
		end
	end
	return Bats
end

function PlaceBats()
	if BatModel and BatModel.Parent then
		BatModel:Destroy()
	end
	BatModel = Create("Model"){
		Name = (Player.Name .. "'s Bats"),
	}
	local BatManagementClone = BatManagement:Clone()
	local Values = {
		{Name = "Creator", Class = "ObjectValue", Value = Player},
		{Name = "Tool", Class = "ObjectValue", Value = Tool},
		{Name = "Target", Class = "ObjectValue", Value = Handle},
		{Name = "TargetOffset", Class = "Vector3Value", Value = Vector3.new(0, 0.5, 0)},
		{Name = "Range", Class = "RayValue", Value = Ray.new(Vector3.new(-6, -2, -6), Vector3.new(6, 6, 6))},
		{Name = "Damage", Class = "NumberValue", Value = 2.5},
	}
	ValueObjects = {}
	for i, v in pairs(Values) do
		local Value = Create(v.Class){
			Name = v.Name,
			Value = v.Value,
			Parent = BatManagementClone,
		}
		ValueObjects[v.Name] = Value
	end
	BatManagementClone.Disabled = false
	BatManagementClone.Parent = BatModel
	local Bats = CreateBats()
	for i, v in pairs(Bats) do
		for ii, vv in pairs(v.Bat:GetChildren()) do
			if vv:IsA("BasePart") then
				vv.Transparency = (1 - (0.1 * i))
			end
		end
		v.Torso.CFrame = (CFrame.new(Handle.Position) * CFrame.Angles(-(math.pi / 2), 0, 0))--v.Origin.CFrame --Enables bats to appear flying around already when you equip this tool
		v.Torso.Anchored = false
		v.BodyGyro.cframe = v.Torso.CFrame
		v.Bat.Parent = BatModel
	end
	BatModel.Parent = game:GetService("Workspace")
	Spawn(function()
		for i = 1, 10 do
			for ii, v in pairs(Bats) do
				for ii, vv in pairs(v.Bat:GetChildren()) do
					if vv:IsA("BasePart") then
						vv.Transparency = (1 - (0.1 * i))
					end
				end
			end
			wait(0.1)
		end
	end)
end

function SetUpBats()
	Spawn(function()
		if BatModel and BatModel.Parent then
			BatModel:Destroy()
		end
		PlaceBats()
	end)
end

function Jump()
	if not CheckIfAlive() or not ToolEquipped or not JumpEnabled then
		return
	end
	Tool.Enabled = false
	JumpEnabled = false
	Falling = true
	local CurrentlyEquipped = true
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	ToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
	end)
	local Animation = Animations.JumpAttack
	Humanoid.WalkSpeed = 0
	Spawn(function()
		InvokeClient("PlayAnimation", Animation)
	end)
	wait(Animation.Duration)
	if CheckIfAlive() and ToolEquipped and CurrentlyEquipped then
		local RayHit, RayPos, RayNormal, RaySurface = Functions.CastRay(Torso.Position, Vector3.new(0, -1, 0), 10, {Character}, false)
		if RayHit then
			local PossibleColors = {Color3.new((115 / 255), (0 / 255), (0 / 255))}
			Sounds.Hit:Play()
			for i = 1, 30 do
				local Part = BasePart:Clone()
				Part.Name = "Effect"
				Part.Transparency = 1
				Part.Size = Vector3.new(2, 2, 2)
				Part.CanCollide = false
				local Color = PossibleColors[math.random(1, #PossibleColors)]
				local Light = Create("PointLight"){
					Color = Color,
					Brightness = 50,
					Range = 8,
					Shadows = false,
					Enabled = true,
					Parent = Part,
				}
				local Fire = Create("Fire"){
					Color = Color,
					SecondaryColor = Color,
					Size = 2,
					Heat = 9,
					Parent = Part,
				}
				local Effect = EffectFire:Clone()
				Effect.Color = ColorSequence.new(Color, Color)
				Effect.LockedToPart = true
				Effect.Enabled = true
				Effect.Parent = Part
				Part.Touched:connect(function(Hit)
					if not Hit or not Hit.Parent then
						return
					end
					local SuccessfullyHit = BlowHit(Hit, 6)
					if SuccessfullyHit then
						AlreadyHit = true
						local Fire = Hit:FindFirstChild(EffectFire.Name)
						if not Fire then
							Fire = Effect:Clone()
							local ParticleScriptCopy = ParticleScript:Clone()
							local Duration = Create("NumberValue"){
								Name = "Duration",
								Value = 3,
								Parent = Fire,
							}
							ParticleScriptCopy.Disabled = false
							ParticleScriptCopy.Parent = Fire
							Debris:AddItem(Fire, 4.5)
							Fire.Parent = Hit
						end
					end
				end)
				Part.CFrame = CFrame.new(Vector3.new(Blade.Position.X, RayPos.Y, Blade.Position.Z))
				Part.Velocity = ((((CFrame.new(RayPos) * CFrame.Angles(0, (math.random(-360, 360) * 0.01), 0)).lookVector * Vector3.new(1, 0, 1)) * math.random(15, 60)) + Vector3.new(0, math.random(50, 75), 0))
				Debris:AddItem(Part, 1.5)
				Part.Parent = game:GetService("Workspace")
			end
			Spawn(function()
				local OrigRange = ValueObjects.Range.Value
				local OrigDamage = ValueObjects.Damage.Value
				ValueObjects.Range.Value = Ray.new(Vector3.new(-20, -2, -20), Vector3.new(20, 20, 20))
				ValueObjects.Damage.Value = (OrigDamage * 4)
				wait(4)
				ValueObjects.Range.Value = OrigRange
				ValueObjects.Damage.Value = OrigDamage
			end)
		end
	end
	if CheckIfAlive() then
		Humanoid.WalkSpeed = 16
	end
	Falling = false
	Tool.Enabled = true
	Delay(5, (function()
		JumpEnabled = true
	end))
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent and Player and Player.Parent) and true) or false)
end

function Attack()
	CurrentDamage = Damages.Slash
	local SlashSounds = {Sounds.Swipe1, Sounds.Swipe2, Sounds.Swipe3, Sounds.Swipe4}
	SlashSounds[math.random(1, #SlashSounds)]:Play()
	local SlashAnimations = {Animations.Slash, Animations.Strike, Animations.DoubleSlash, Animations.Slice, Animations.Cut, Animations.SpinSlash}
	local Animation = SlashAnimations[math.random(1, #SlashAnimations)]
	Spawn(function()
		InvokeClient("PlayAnimation", Animation)
	end)
	wait(Animation.Duration)
	CurrentDamage = Damages.Touch
end

function Activated()
	if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() then
		return
	end
	Tool.Enabled = false
	Attack()
	Tool.Enabled = true
end

function Equipped(Mouse)
	Character = Tool.Parent
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	Player = Players:GetPlayerFromCharacter(Character)
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
	Tool.Grip = Grips.Equipped
	Spawn(function()
		CreateScythePiece(true)
		SetUpBats()
		InvokeClient("PlayAnimation", Animations.Equip)
	end)
	Sounds.Unsheath:Play()
end

function Unequipped()
	Tool.Grip = Grips.Unequipped
	if BatModel and BatModel.Parent then
		BatModel:Destroy()
	end
	if CheckIfAlive() then
		Humanoid.WalkSpeed = 16
	end
	CreateScythePiece(false)
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not ToolEquipped or not value or not CheckIfAlive() then
		return
	end
	if mode == "KeyPress" then
		local Key = value.Key
		local Down = value.Down
		if Key == "q" and Down and not Humanoid.Jump then
			if JumpEnabled then
				Spawn(function()
					InvokeClient("DisableJump", {Disabled = true})
				end)
				Jump()
				Spawn(function()
					InvokeClient("DisableJump", {Disabled = false})
				end)
			end
			--[[local MouseData = InvokeClient("MouseData")
			if not MouseData or not MouseData.Position or not BatModel or not BatModel.Parent then
				return
			end
			local StartPosition = (Handle.CFrame + Handle.CFrame.lookVector * Handle.Size.Z).p
			local TargetPosition = MouseData.Position
			local Direction = CFrame.new(StartPosition, TargetPosition)
			local SpinDirection = (Direction * CFrame.Angles(0, (math.pi / 2), 0))
			local FakeHandle = Handle:Clone()
			FakeHandle.Name = "Scythe"
			FakeHandle.CanCollide = true
			local Mass = (FakeHandle:GetMass() * Gravity)
			local Force = 75
			local BodyVelocity = Create("BodyVelocity"){
				maxForce = Vector3.new(Mass, Mass, Mass),
				velocity = (Direction.lookVector * Force),
				Parent = FakeHandle,
			}
			local BodyGyro = Create("BodyGyro"){
				maxTorque = Vector3.new(0, math.huge, 0),
				cframe = Direction,
				Parent = FakeHandle,
			}
			local BodyAngularVelocity = Create("BodyAngularVelocity"){
				maxTorque = Vector3.new(Mass, Mass, Mass),
				angularvelocity = ((Direction * CFrame.Angles(0, (math.pi / 2), 0)).lookVector * 10),
				Parent = FakeHandle,
			}
			FakeHandle.CFrame = CFrame.new(StartPosition, TargetPosition)
			FakeHandle.Velocity = (Direction.lookVector * Force)
			Debris:AddItem(FakeHandle, 5)
			FakeHandle.Parent = BatModel
			ValueObjects.Target.Value = FakeHandle]]
		end
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

CreateScythePiece(false)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)

ServerControl.OnServerInvoke = OnServerInvoke</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
					<Item class="ModuleScript" referent="RBXF4A7E096A36344C69C98A080C9B5D040">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">Functions</string>
							<string name="ScriptGuid">{2E3D11A9-780A-4DEF-A362-FCC83C1C7E86}</string>
							<ProtectedString name="Source">--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Functions = {}

function Functions.Clamp(Number, Min, Max)
	return math.max(math.min(Max, Number), Min)
end

function Functions.GetPercentage(Start, End, Number)
	return (((Number - Start) / (End - Start)) * 100)
end

function Functions.Round(Number, RoundDecimal)
	local WholeNumber, Decimal = math.modf(Number)
	return ((Decimal &gt;= RoundDecimal and math.ceil(Number)) or (Decimal &lt; RoundDecimal and math.floor(Number)))
end

function Functions.IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function Functions.TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function Functions.UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function Functions.CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.find(string.lower(String), string.lower(v)) then
			return true
		end
	end
	return false
end

function Functions.CheckIntangible(Hit)
	local ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Bullet"}
	if Hit and Hit.Parent then
		if ((not Hit.CanCollide or Functions.CheckTableForString(ProjectileNames, Hit.Name)) and not Hit.Parent:FindFirstChild("Humanoid")) then
			return true
		end
	end
	return false
end

function Functions.CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
	local Ignore = ((type(Ignore) == "table" and Ignore) or {Ignore})
	local RayHit, RayPos, RayNormal, RaySurface = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
	if RayHit and Functions.CheckIntangible(RayHit) then
		if DelayIfHit then
			wait()
		end
		RayHit, RayPos, RayNormal, RaySurface = Functions.CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
	end
	return RayHit, RayPos, RayNormal, RaySurface
end

return Functions</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
					<Item class="Script" referent="RBXB0B39492219D423B9F524DD224054E74">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">BatManagement</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{8E510AC9-8BA2-474E-9C5A-22D824DFC682}</string>
							<ProtectedString name="Source">--Made by Luckymaxer

Model = script.Parent

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
}

Values = {}

Bats = {}
Scythes = {}

Rate = (1 / 60)

Removing = false

for i, v in pairs(script:GetChildren()) do
	if string.find(string.lower(v.ClassName), string.lower("Value")) then
		Values[v.Name] = v
	end
end

function DestroyModel()
	if Removing then
		return
	end
	Removing = true
	Model.Name = ""
	Debris:AddItem(Model, 0.5)
end

function RemoveModel()
	if Removing then
		return
	end
	local Objects = {}
	for i, v in pairs(Model:GetChildren()) do
		if v ~= script then
			table.insert(Objects, v)
		end
	end
	if #Objects == 0 then
		DestroyModel()
	end
end

function ChildAdded(Child)
	if Child:IsA("Model") and string.find(string.lower(Child.Name), string.lower("Bat")) then
		for i, v in pairs(Bats) do
			if v.Bat == Child then
				return
			end
		end
		local torso = Child:FindFirstChild("Torso")
		if not torso then
			return
		end
		local BodyGyro = torso:FindFirstChild("BodyGyro")
		local BodyPosition = torso:FindFirstChild("BodyPosition")
		if not BodyGyro or not BodyPosition then
			return
		end
		BatTouched(Child)
		table.insert(Bats, {Bat = Child, Torso = torso, BodyGyro = BodyGyro, BodyPosition = BodyPosition, Origin = {CFrame = nil, Nearby = false, Traveling = false}, TargetPoint = nil, SoundPlayedLast = tick()})
	elseif Child:IsA("BasePart") and Child.Name == "Scythe" then
		local ScytheTable = {Scythe = Child, StartPosition = Child.Position, Began = tick()}
		Child.Touched:connect(function(Hit)
			if not Hit or not Hit.Parent or Child.Name == "Effect" then
				return
			end
			FlyScythe(ScytheTable, Hit)
		end)
		table.insert(Scythes, ScytheTable)
	end
end

function ChildRemoved(Child)
	for i, v in pairs(Bats) do
		if v.Bat == Child then
			table.remove(Bats, i)
			break
		end
	end
end

function FlyScythe(Table, Hit)
	local Now = tick()
	if Table and Table.Scythe.Parent and (Now - Table.Began) &gt; 0 then
		FlyProjectile(Table.Scythe, Hit, Table.StartPosition)
	end
end

function FlyProjectile(Part, Hit, StartPos)
	if Part.Name == "Effect" then
		return
	end
	local AlreadyHit = false
	local Player = Creator
	local function PartHit(Hit)
		if not Hit or not Hit.Parent or not Player or Part.Name == "Effect" then
			return
		end
		local character = Hit.Parent
		if character:IsA("Hat") then
			character = character.Parent
		end
		if not character then
			return
		end
		local player = Players:GetPlayerFromCharacter(character)
		if player and (player == Player or Functions.IsTeamMate(Player, player)) then
			return
		end
		local humanoid = character:FindFirstChild("Humanoid")
		if not humanoid or humanoid.Health == 0 then
			return
		end
		Functions.UntagHumanoid(humanoid)
		Functions.TagHumanoid(humanoid, Player)
		humanoid:TakeDamage(Values.Damage.Value)
		return character
	end
	local function CheckForContact(Hit)
		local Directions = {{Vector = Part.CFrame.lookVector, Length = (Part.Size.Z + 1)}, {Vector = Part.Velocity.Unit, Length = (Part.Size.Z + 1)}, ((Hit and {Vector = CFrame.new(Part.Position, Hit.Position).lookVector, Length = (Part.Size.Z + 1)}) or nil)}
		local ClosestRay = {DistanceApart = math.huge}
		for i, v in pairs(Directions) do
			if v then
				local Direction = CFrame.new(Part.Position, (Part.CFrame + v.Vector * 2).p).lookVector
				local RayHit, RayPos, RayNormal = Functions.CastRay((Part.Position + Vector3.new(0, 0, 0)), Direction, v.Length, {((Player and Player.Character) or nil), Part}, false)
				if RayHit then
					local DistanceApart = (Part.Position - RayPos).Magnitude
					if DistanceApart &lt; ClosestRay.DistanceApart then
						ClosestRay = {Hit = RayHit, Pos = RayPos, Normal = RayNormal, DistanceApart = DistanceApart}
					end
				end
			end
		end
		return ((ClosestRay.Hit and ClosestRay) or nil)
	end
	local ClosestRay = CheckForContact(Hit)
	if ClosestRay then
		local SuccessfullyHit = PartHit(ClosestRay.Hit)
		if SuccessfullyHit then
		end
		Part.CanCollide = false
		local Hit = ClosestRay.Hit
		--[[local SoundPart = BasePart:Clone()
		SoundPart.Name = "Effect"
		SoundPart.Transparency = 1
		SoundPart.Anchored = true
		SoundPart.CanCollide = false
		local Sound = Sounds.Hit:Clone()
		Sound.Parent = SoundPart
		Debris:AddItem(SoundPart, 1.5)
		SoundPart.CFrame = Part.CFrame
		SoundPart.Parent = game:GetService("Workspace")
		Sound:Play()]]
		Part.Name = "Effect"
		local ProjectilePosition = ClosestRay.Pos
		local StickCFrame = ((StartPos and (CFrame.new(ProjectilePosition, StartPos) * CFrame.Angles((math.random(-600, 600) * 0.001), 0, 0))) or Part.CFrame)
		StickCFrame = (StickCFrame * CFrame.new(0, 0, (-(Part.Size.Z / 2) + 0)) * CFrame.Angles(0, math.pi, 0))
		local Weld = Create("Motor6D"){
			Part0 = ClosestRay.Hit,
			Part1 = Part,
			C0 = CFrame.new(0, 0, 0),
			C1 = (StickCFrame:inverse() * ClosestRay.Hit.CFrame),
			Parent = Part,
		}
	end
end

function PositionBats()
	for i, v in pairs(Bats) do
		if (not v.Origin.Nearby and not v.Traveling) or not v.Origin.CFrame then
			v.Origin.Traveling = true
			local RandomOffset = CFrame.new(math.random(Values.Range.Value.Origin.X, Values.Range.Value.Direction.X), math.random(Values.Range.Value.Origin.Y, Values.Range.Value.Direction.Y), math.random(Values.Range.Value.Origin.Z, Values.Range.Value.Direction.Z)) * CFrame.Angles(math.random(-math.pi, math.pi), math.random(-math.pi, math.pi), math.random(-math.pi, math.pi))
			v.RandomOffset = RandomOffset
			local TargetPoint = ((CFrame.new(Values.Target.Value.Position) * CFrame.new(Values.TargetOffset.Value)) * RandomOffset)
			TargetPoint = (TargetPoint * CFrame.Angles(0, 0, 0))
			v.Origin.CFrame = TargetPoint
			v.BodyGyro.cframe = (CFrame.new(v.Torso.Position, TargetPoint.p) * CFrame.Angles(-(math.pi / 2), 0, 0))
			v.BodyPosition.position = TargetPoint.p
			if v.Origin.CFrame and (v.Torso.Position - v.Origin.CFrame.p).magnitude &lt;= 6 then
				v.BodyPosition.P = 5000
				v.Traveling = false
				v.Origin.Nearby = true
			else
				v.BodyPosition.P = 25000
			end
		else
			v.Origin.Nearby = false
		end
	end
end

function BatTouched(Bat)
	if not Bat or not Bat.Parent then
		return
	end
	local HitDelayed = true
	for i, v in pairs(Bat:GetChildren()) do
		if v:IsA("BasePart") then
			v.Touched:connect(function(Hit)
				if not Hit or not Hit.Parent or not HitDelayed then
					return
				end
				local character = Hit.Parent
				local humanoid = character:FindFirstChild("Humanoid")
				if not humanoid or humanoid.Health == 0 then
					return
				end
				local player = Players:GetPlayerFromCharacter(character)
				if player == Creator or Functions.IsTeamMate(Creator, player) then
					return
				end
				local creator = character:FindFirstChild("Creator")
				if creator and creator:IsA("ObjectValue") and creator.Value == Creator then
					return
				end
				HitDelayed = true
				Functions.UntagHumanoid(humanoid)
				Functions.TagHumanoid(humanoid, Creator)
				humanoid:TakeDamage(Values.Damage.Value)
				wait(0.25)
				HitDelayed = false
			end)
		end
	end
end

function FunctionBats()
	Spawn(function()
		local LastFlyUpdate = 0
		local SoundPlayedLast = 0
		local MaintainPosition = 0
		local FlapCheck = 0
		while true do
			local Now = tick()
			local CanFlap = false
			if (Now - LastFlyUpdate) &gt;= 0.5 then
				LastFlyUpdate = Now
				PositionBats()
			end
			for i, v in pairs(Scythes) do
				FlyScythe(v)
			end
			if (Now - FlapCheck) &gt;= 0.25 then
				CanFlap = true
				FlapCheck = Now
			end
			for i, v in pairs(Bats) do
				if v and v.Bat.Parent then
					if (Now - v.SoundPlayedLast) &gt;= 1 then
						v.SoundPlayedLast = Now
						local PlaySound = math.random(1, 5)
						if PlaySound == 5 then
							local PossibleSounds = {}
							for i, v in pairs(Sounds:GetChildren()) do
								if v:IsA("Sound") then
									table.insert(PossibleSounds, v)
								end
							end
							local Sound = PossibleSounds[math.random(1, #PossibleSounds)]
							local TempSound = Sound:Clone()
							Debris:AddItem(TempSound, 2.5)
							TempSound.Parent = v.Torso
							TempSound:Play()
						end
					end
					if (Now - MaintainPosition) &gt;= 0.35 and v.RandomOffset then
						local TargetPoint = ((CFrame.new(Values.Target.Value.Position) * CFrame.new(Values.TargetOffset.Value)) * v.RandomOffset)
						TargetPoint = (TargetPoint * CFrame.Angles(0, 0, 0))
	--					v.BodyGyro.cframe = (CFrame.new(v.Torso.Position, TargetPoint.p) * CFrame.Angles(-(math.pi / 2), 0, 0))
	--					v.BodyPosition.position = TargetPoint.p
					end
					if CanFlap then
						local LeftWing = v.Torso:FindFirstChild("Left Shoulder")
						local RightWing = v.Torso:FindFirstChild("Right Shoulder")
						for ii, vv in pairs({LeftWing, RightWing}) do
							if vv then
								vv.MaxVelocity = 0.1
								if vv.DesiredAngle == 0 then
									vv.DesiredAngle = 0.5
								else
									vv.DesiredAngle = (vv.DesiredAngle * -1)
								end
							end
						end
					end
				end
			end
			wait(0.25)
		end
	end)
end

FunctionsModule = script:FindFirstChild("Functions")
Sounds = script:FindFirstChild("Sounds")

if not FunctionsModule or not Sounds or not Values.Creator or not Values.Creator.Value or not Values.Tool or not Values.Tool.Value or not Values.Target or not Values.Target.Value or not Values.TargetOffset or not Values.Range.Value then
	DestroyModel()
	return
end

Functions = require(FunctionsModule)

Creator = Values.Creator.Value
Tool = Values.Tool.Value

Creator.Changed:connect(function(Property)
	if Property == "Parent" and not Creator or not Creator.Parent then
		DestroyModel()
	elseif Property == "Character" and not Creator.Character or not Creator.Character.Parent then
		DestroyModel()
	end
end)

Tool.Changed:connect(function(Property)
	if Property == "Parent" then
		DestroyModel()
	end
end)

Values.Target.Changed:connect(function(Property)
	if not Values.Target.Value or not Values.Target.Value.Parent then
		DestroyModel()
	end
end)

for i, v in pairs(Model:GetChildren()) do
	ChildAdded(v)
end

Model.ChildAdded:connect(ChildAdded)
Model.ChildRemoved:connect(ChildRemoved)

FunctionBats()

wait(1)
RemoveModel()</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
						<Item class="Folder" referent="RBX1BD38486C25541919EC530F10D94DCD5">
							<Properties>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">Sounds</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
							</Properties>
							<Item class="Sound" referent="RBX5FD90D99EF4C48CDB9B6F50121263F5E">
								<Properties>
									<BinaryString name="AttributesSerialize" />
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="IsMutedForCapture">false</bool>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Squeak1</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<float name="RollOffMaxDistance">10000</float>
									<float name="RollOffMinDistance">10</float>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>http://www.roblox.com/asset/?id=94899284</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags" />
									<double name="TimePosition">0</double>
									<float name="Volume">1</float>
								</Properties>
							</Item>
							<Item class="Sound" referent="RBX6B2EC238875347B685A80FF557F0A2CF">
								<Properties>
									<BinaryString name="AttributesSerialize" />
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="IsMutedForCapture">false</bool>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Squeak2</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<float name="RollOffMaxDistance">10000</float>
									<float name="RollOffMinDistance">10</float>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>http://www.roblox.com/asset/?id=94888905</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags" />
									<double name="TimePosition">0</double>
									<float name="Volume">1</float>
								</Properties>
							</Item>
							<Item class="Sound" referent="RBXADC536E228774D9291CD3D2FE413F19C">
								<Properties>
									<BinaryString name="AttributesSerialize" />
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="IsMutedForCapture">false</bool>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Squeak3</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<float name="RollOffMaxDistance">10000</float>
									<float name="RollOffMinDistance">10</float>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>http://www.roblox.com/asset/?id=94888934</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags" />
									<double name="TimePosition">0</double>
									<float name="Volume">1</float>
								</Properties>
							</Item>
						</Item>
						<Item class="ModuleScript" referent="RBXA362D7AC570344EEA3EE5A79823A7DDA">
							<Properties>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<Content name="LinkedSource"><null /></Content>
								<string name="Name">Functions</string>
								<string name="ScriptGuid">{61ECAD20-6A05-4DC3-B57E-50726CF6CE5F}</string>
								<ProtectedString name="Source">--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Functions = {}

function Functions.Clamp(Number, Min, Max)
	return math.max(math.min(Max, Number), Min)
end

function Functions.GetPercentage(Start, End, Number)
	return (((Number - Start) / (End - Start)) * 100)
end

function Functions.Round(Number, RoundDecimal)
	local WholeNumber, Decimal = math.modf(Number)
	return ((Decimal &gt;= RoundDecimal and math.ceil(Number)) or (Decimal &lt; RoundDecimal and math.floor(Number)))
end

function Functions.IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function Functions.TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function Functions.UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function Functions.CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.find(string.lower(String), string.lower(v)) then
			return true
		end
	end
	return false
end

function Functions.CheckIntangible(Hit)
	local ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Bullet"}
	if Hit and Hit.Parent then
		if ((not Hit.CanCollide or Functions.CheckTableForString(ProjectileNames, Hit.Name)) and not Hit.Parent:FindFirstChild("Humanoid")) then
			return true
		end
	end
	return false
end

function Functions.CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
	local Ignore = ((type(Ignore) == "table" and Ignore) or {Ignore})
	local RayHit, RayPos, RayNormal, RaySurface = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
	if RayHit and Functions.CheckIntangible(RayHit) then
		if DelayIfHit then
			wait()
		end
		RayHit, RayPos, RayNormal, RaySurface = Functions.CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
	end
	return RayHit, RayPos, RayNormal, RaySurface
end

return Functions</ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
							</Properties>
						</Item>
					</Item>
					<Item class="ParticleEmitter" referent="RBXDACADFCC31A2442D9BD21D70F4D96088">
						<Properties>
							<Vector3 name="Acceleration">
								<X>0</X>
								<Y>1.5</Y>
								<Z>0</Z>
							</Vector3>
							<BinaryString name="AttributesSerialize" />
							<float name="Brightness">1</float>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<ColorSequence name="Color">0 1 0 0 0 1 1 1 0.498039 0 </ColorSequence>
							<bool name="DefinesCapabilities">false</bool>
							<float name="Drag">0</float>
							<token name="EmissionDirection">1</token>
							<bool name="Enabled">false</bool>
							<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
							<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
							<token name="FlipbookLayout">0</token>
							<token name="FlipbookMode">0</token>
							<bool name="FlipbookStartRandom">false</bool>
							<NumberRange name="Lifetime">1 1 </NumberRange>
							<float name="LightEmission">0.25</float>
							<float name="LightInfluence">0</float>
							<bool name="LockedToPart">true</bool>
							<string name="Name">EffectFire</string>
							<token name="Orientation">0</token>
							<float name="Rate">200</float>
							<NumberRange name="RotSpeed">0 0 </NumberRange>
							<NumberRange name="Rotation">0 0 </NumberRange>
							<token name="Shape">0</token>
							<token name="ShapeInOut">0</token>
							<float name="ShapePartial">1</float>
							<token name="ShapeStyle">0</token>
							<NumberSequence name="Size">0 0 0 0.25 0.5 0 0.5 0.5 0.135 1 0.5 0 </NumberSequence>
							<int64 name="SourceAssetId">-1</int64>
							<NumberRange name="Speed">0.5 0.5 </NumberRange>
							<Vector2 name="SpreadAngle">
								<X>100</X>
								<Y>100</Y>
							</Vector2>
							<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
							<BinaryString name="Tags" />
							<Content name="Texture"><url>http://www.roblox.com/asset/?id=262362794</url></Content>
							<float name="TimeScale">1</float>
							<NumberSequence name="Transparency">0 1 0 0.25 0.75 0 0.85 0.75 0 1 1 0 </NumberSequence>
							<float name="VelocityInheritance">0</float>
							<bool name="WindAffectsDrag">false</bool>
							<float name="ZOffset">1</float>
						</Properties>
					</Item>
					<Item class="Script" referent="RBX7047A997B0C14B46A7F82C522B932317">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">ParticleScript</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{060D6CB6-404B-4452-B55E-E1A99831A6C9}</string>
							<ProtectedString name="Source">--Made by Luckymaxer

Particle = script.Parent

Debris = game:GetService("Debris")

Duration = Particle:WaitForChild("Duration")

while Duration.Value &gt; 0 do
	local Time = wait()
	Duration.Value = (Duration.Value - Time)
end

Particle.Enabled = false

Debris:AddItem(Particle, 2)</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
				</Item>
				<Item class="Animation" referent="RBX66C17015AD0046D9AE9322F4F262236F">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=27763344</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">DoubleSlash</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX4460DC1363284954BB0E97E4DE7799F6">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=306451377</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Cut</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXCAA36824953C4C12B2229123EAB21C99">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=306352073</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Equip</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX74F78F6C328B42C8867939E978ECC933">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=306414428</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Slash</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX965A09B28D7A46FF877A40972CB533DA">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=184574340</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">JumpAttack</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXFF487A4112EB42CBBF37F1E3B1CBB411">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=306450253</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">SpinSlash</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX89A3C90DE28744B498A9FDE5A8F60335">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=306452297</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Slice</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXF7043019370E439DA78C7F13D7FF167C">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=306355299</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Strike</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
			</Item>
		</Item>
		