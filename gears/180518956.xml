<Item class="Model" referent="RBXC999EBB8F8FD452D85F14685C007CF87">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">180518956</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBXABD48696855D4A42931053378860C5EB">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>0</X>
						<Y>0.215000004</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">MonsterPotion</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=179511610</url></Content>
					<string name="ToolTip">Transform into a scary monster!</string>
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>109.798279</X>
							<Y>7.22406769</Y>
							<Z>27.3479919</Z>
							<R00>-0.316764146</R00>
							<R01>0.0174341127</R01>
							<R02>-0.948344052</R02>
							<R10>-1.568209e-14</R10>
							<R11>0.999831021</R11>
							<R12>0.0183806363</R12>
							<R20>0.94850421</R20>
							<R21>0.00582232699</R21>
							<R22>-0.316710651</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX55F9D9C1D773449DA79FCD1F5169D06B">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>109.798279</X>
							<Y>7.22406769</Y>
							<Z>27.3479919</Z>
							<R00>-0.316764146</R00>
							<R01>0.0174341127</R01>
							<R02>-0.948344052</R02>
							<R10>-1.568209e-14</R10>
							<R11>0.999831021</R11>
							<R12>0.0183806363</R12>
							<R20>0.94850421</R20>
							<R21>0.00582232699</R21>
							<R22>-0.316710651</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1.25</X>
							<Y>1.75</Y>
							<Z>1.25</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX3F935C30656C46B0A57C51EA8C1F2293">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset?id=179511543</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset?id=179511579</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBXEA0FE151A82D4A4189FC1401E751A772">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Gulp</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset?id=163204602</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX3D9700E378B64FAA9DBB3497DAB90EEE">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Sizzle</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset?id=172708705</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Animation" referent="RBXF43970531ADB42FAB782802D219EC7CC">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset?id=180324301</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Drink</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX0E76CE57F92B4D539FCB1C19784F496A">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{FC65BE3D-902B-4935-890D-7B47AAB9B91F}</string>
						<ProtectedString name="Source">--Rescripted by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")

Animations = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ClientControl.OnClientInvoke = (function(Mode, Value)
	if Mode == "PlayAnimation" and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
		table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
	elseif Mode == "StopAnimation" and Value then
		for i, v in pairs(Animations) do
			if v.Animation == Value then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	elseif Mode == "PlaySound" and Value then
		Value:Play()
	elseif Mode == "StopSound" and Value then
		Value:Stop()
	end
end)

function InvokeServer(Mode, Value)
	pcall(function()
		local ServerReturn = ServerControl:InvokeServer(Mode, Value)
		return ServerReturn
	end)
end

function CheckIfAlive()
	return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXE8925E9F09A743159A33162FAB444861">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset?id=180391962</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Morph</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Script" referent="RBXCD044451965443E89BEC3CC6F7211850">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{5FB3DF2E-5CC3-43EF-A544-316845EB14EE}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
InsertService = game:GetService("InsertService")

Animations = {
	Drink = Tool:WaitForChild("Drink"),
	Morph = Tool:WaitForChild("Morph")
}

Sounds = {
	Gulp = Handle:WaitForChild("Gulp"),
	Sizzle = Handle:WaitForChild("Sizzle")
}

Monsters = require(180464321)

ServerControl = (Tool:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Tool

Duration = 30

Speed = 100

Equipped = false

Tool.Enabled = true

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if player == Player then
	end
end)

function InvokeClient(Mode, Value)
	local ReturnValue = nil
	pcall(function()
		ReturnValue = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ReturnValue
end

function InsertAsset(AssetId)
	local AssetModel = InsertService:LoadAsset(AssetId)
	local Asset = AssetModel:GetChildren()[1]:Clone()
	if AssetModel and AssetModel.Parent then
		AssetModel:Destroy()
	end
	return Asset
end

function CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.lower(v) == string.lower(String) then
			return true
		end
	end
	return false
end

function CheckTableForClass(Object, Classes)
	for i, v in pairs(Classes) do
		if Object:IsA(v) then
			return true
		end
	end
	return false
end

function GetAllAssets(Parent, Classes)
	local Assets = {}
	local function GetAssets(Parent)
		for i, v in pairs(Parent:GetChildren()) do
			if v ~= Tool then
				if CheckTableForClass(v, Classes) then
					table.insert(Assets, v)
				end
				GetAssets(v)
			end
		end
	end
	GetAssets(Parent, Classes)
	return Assets
end

function CheckForProperty(Instance, Property)
	local PropertyExists = false
	pcall(function()
		local Property = Instance[Property]
		PropertyExists = true
	end)
	return PropertyExists
end

function CreateMonster(character)
	local Assets = GetAllAssets(character, {"Hat", "Decal", "CharacterMesh", "Clothing", "ShirtGraphic", "BodyColors", "DataModelMesh"})
	local Parts = GetAllAssets(character, {"BasePart"})
	local CharacterAssets = {}
	local CharacterParts = {}
	local MonsterAssets = {}
	local NewFace = false
	local NewHead = false
	for i, v in pairs(Assets) do
		if v and v.Parent then
			table.insert(CharacterAssets, {Parent = v.Parent, Object = v:Clone()})
			v:Destroy()
		end
	end
	for i, v in pairs(Parts) do
		if v and v.Parent then
			table.insert(CharacterParts, {Part = v, BrickColor = v.BrickColor, Transparency = v.Transparency})
		end
	end
	for i, v in pairs(character:GetChildren()) do
		if v:IsA("BasePart") and v.Name ~= "HumanoidRootPart" then
			v.Transparency = 0
		end
	end
	local MonsterChosen = Monsters[math.random(1, #Monsters)]
	local MonsterName = MonsterChosen.Name
	for i, v in pairs(MonsterChosen.PackageParts) do
		local PackagePart = InsertAsset(v)
		if PackagePart:IsA("CharacterMesh") then
			table.insert(MonsterAssets, PackagePart)
			PackagePart.Parent = character
		end
	end
	if #MonsterChosen.Hats &gt; 0 then
		local HatChosen = MonsterChosen.Hats[math.random(1, #MonsterChosen.Hats)]
		if (not MonsterChosen.BodyColors or #MonsterChosen.BodyColors == 0) and HatChosen.BodyColors and #HatChosen.BodyColors &gt; 0 then
			local BodyColorsChosen = HatChosen.BodyColors[math.random(1, #HatChosen.BodyColors)]
			for i, v in pairs(BodyColorsChosen) do
				for ii, vv in pairs(character:GetChildren()) do
					if vv:IsA("BasePart") and vv.Name == v.Limb then
						vv.BrickColor = BrickColor.new(v.Color)
					end
				end
			end
		end
		if (not MonsterChosen.Clothing or #MonsterChosen.Clothing == 0) and HatChosen.Clothing and #HatChosen.Clothing &gt; 0 then
			local ClothingChosen = HatChosen.Clothing[math.random(1, #HatChosen.Clothing)]
			for i, v in pairs(ClothingChosen) do
				local Clothing = InsertAsset(v)
				if Clothing:IsA("Clothing") then
					Clothing.Parent = character
				elseif Clothing:IsA("ShirtGraphic") then
					Clothing.Parent = character
					local torso = character:FindFirstChild("Torso")
					if torso then
						local Decal = Instance.new("Decal")
						Decal.Name = "roblox"
						Decal.Face = Enum.NormalId.Front
						Decal.Texture = Clothing.Graphic
						table.insert(MonsterAssets, Decal)
						Decal.Parent = torso
					end
				elseif Clothing:IsA("Decal") then
					Clothing.Name = "face"
					local head = character:FindFirstChild("Head")
					if head then
						NewFace = true
						table.insert(MonsterAssets, Clothing)
						Clothing.Parent = head
					end
				elseif Clothing:IsA("DataModelMesh") then
					local head = character:FindFirstChild("Head")
					if head then
						NewHead = true
						table.insert(MonsterAssers, Clothing)
						Clothing.Parent = head
					end
				end
			end
		end
		if (not MonsterChosen.Transparency or #MonsterChosen.Transparency == 0) and HatChosen.Transparency then
			for i, v in pairs(HatChosen.Transparency) do
				for ii, vv in pairs(character:GetChildren()) do
					if vv:IsA("BasePart") and vv.Name == v.Limb then
						vv.Transparency = v.Transparency
					end
				end
			end
		end
		if #HatChosen.Hats &gt; 0 then
			for i, v in pairs(HatChosen.Hats) do
				local Hat = InsertAsset(v)
				local head = character:FindFirstChild("Head")
				local handle = Hat:FindFirstChild("Handle")
				if head and handle then
					local handle = handle:Clone()
					local MonsterMorphEffect = Instance.new("StringValue")
					MonsterMorphEffect.Name = "MonsterMorphEffect"
					MonsterMorphEffect.Value = MonsterName
					MonsterMorphEffect.Parent = handle
					handle.Name = Hat.Name
					handle.CanCollide = false
					local HeadWeld = Instance.new("Weld")
					HeadWeld.Name = "HeadWeld"
					HeadWeld.Part0 = head
					HeadWeld.Part1 = handle
					HeadWeld.C0 = CFrame.new(0, 0.5, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
					HeadWeld.C1 = CFrame.new(
						Hat.AttachmentPos.X, --Pos X
						Hat.AttachmentPos.Y, --Pos Y
						Hat.AttachmentPos.Z, --Pos Z
						math.abs(Hat.AttachmentRight.X), --R00
						Hat.AttachmentUp.X, --R01
						math.abs(Hat.AttachmentForward.X), --R02
						Hat.AttachmentRight.Y, --R10
						Hat.AttachmentUp.Y, --R11
						(math.abs(Hat.AttachmentForward.Y) * -1), --R12
						Hat.AttachmentRight.Z, --R20
						Hat.AttachmentUp.Z, --R21
						math.abs(Hat.AttachmentForward.Z) --R22
					)
					table.insert(MonsterAssets, handle)
					handle.Parent = character
					table.insert(MonsterAssets, HeadWled)
					HeadWeld.Parent = head
				end
			end
		end
	end
	if MonsterChosen.BodyColors and #MonsterChosen.BodyColors &gt; 0 then
		local BodyColorsChosen = MonsterChosen.BodyColors[math.random(1, #MonsterChosen.BodyColors)]
		for i, v in pairs(BodyColorsChosen) do
			for ii, vv in pairs(character:GetChildren()) do
				if vv:IsA("BasePart") and vv.Name == v.Limb then
					vv.BrickColor = BrickColor.new(v.Color)
				end
			end
		end
	end
	if MonsterChosen.Transparency and #MonsterChosen.Transparency &gt; 0 then
		for i, v in pairs(MonsterChosen.Transparency) do
			for ii, vv in pairs(character:GetChildren()) do
				if vv:IsA("BasePart") and vv.Name == v.Limb then
					vv.Transparency = v.Transparency
				end
			end
		end
	end
	if MonsterChosen.Clothing and #MonsterChosen.Clothing &gt; 0 then
		local ClothingChosen = MonsterChosen.Clothing[math.random(1, #MonsterChosen.Clothing)]
		for i, v in pairs(ClothingChosen) do
			local Clothing = InsertAsset(v)
			if Clothing:IsA("Clothing") then
				Clothing.Parent = character
			elseif Clothing:IsA("ShirtGraphic") then
				Clothing.Parent = character
				local torso = character:FindFirstChild("Torso")
				if torso then
					local Decal = Instance.new("Decal")
					Decal.Name = "roblox"
					Decal.Face = Enum.NormalId.Front
					Decal.Texture = Clothing.Graphic
					table.insert(MonsterAssets, Decal)
					Decal.Parent = torso
				end
			elseif Clothing:IsA("Decal") then
				Clothing.Name = "face"
				local head = character:FindFirstChild("Head")
				if head then
					NewFace = true
					table.insert(MonsterAssets, Clothing)
					Clothing.Parent = head
				end
			elseif Clothing:IsA("DataModelMesh") then
				local head = character:FindFirstChild("Head")
				if head then
					NewHead = true
					table.insert(MonsterAssets, Clothing)
					Clothing.Parent = head
				end
			end
		end
	end
	local head = character:FindFirstChild("Head")
	if head then
		if head.Transparency &gt;= 1 then
			head.Transparency = 0
			local Mesh = Instance.new("SpecialMesh")
			Mesh.Scale = Vector3.new(0, 0, 0)
			table.insert(MonsterAssets, Mesh)
			Mesh.Parent = head
		elseif not NewHead then
			local TempHead = Instance.new("SpecialMesh")
			TempHead.MeshType = Enum.MeshType.Head
			TempHead.Scale = Vector3.new(1.25, 1.25, 1.25)
			TempHead.VertexColor = Vector3.new(1, 1, 1)
			table.insert(MonsterAssets, TempHead)
			TempHead.Parent = head
		end
		if not NewFace then
			local TempFace = Instance.new("Decal")
			TempFace.Name = "face"
			TempFace.Face = Enum.NormalId.Front
			TempFace.Texture = "rbxasset://textures/face.png" --http://www.roblox.com/asset?id=12222851
			table.insert(MonsterAssets, TempFace)
			TempFace.Parent = head
		end
	end
	local BodyColors = Instance.new("BodyColors")
	for i, v in pairs(character:GetChildren()) do
		if v:IsA("BasePart") then
			local PropertyName = (string.gsub(v.Name, " ", "") .. "Color")
			if CheckForProperty(BodyColors, PropertyName) then
				pcall(function()
					BodyColors[PropertyName] = v.BrickColor
				end)
			end
		end
	end
	BodyColors.Parent = character
	table.insert(MonsterAssets, BodyColors)
	return CharacterAssets, CharacterParts, MonsterAssets, MonsterName
end

function Transform(character)
	Tool.Enabled = false
	local Limbs = {"Head", "Torso", "Left Arm", "Right Arm", "Left Leg", "Right Leg"}
	local MonsterMorphed = Instance.new("StringValue")
	MonsterMorphed.Name = "MonsterMorphed"
	Debris:AddItem(MonsterMorphed, (Duration + 5))
	MonsterMorphed.Parent = character
	for i, v in pairs(character:GetChildren()) do
		if v:IsA("BasePart") then
			if v:FindFirstChild("MonsterMorphEffect") then
				v:Destroy()
			elseif CheckTableForString(Limbs, v.Name) then
				local Fire = Instance.new("Fire")
				Fire.Color = Color3.new(0, 255, 0)
				Fire.SecondaryColor = Color3.new(0, 170, 0)
				Fire.Heat = 5
				Fire.Size = 10
				Fire.Enabled = true
				Debris:AddItem(Fire, 5)
				Delay(3, function()
					if Fire and Fire.Parent then
						Fire.Enabled = false
					end
				end)
				Fire.Parent = v
			end
		end
	end
	local CharacterAssets, CharacterParts, MonsterAssets, MonsterName = CreateMonster(character)
	if MonsterMorphed and MonsterMorphed.Parent then
		MonsterMorphed.Value = MonsterName
	end
	local FakeHat = Instance.new("Hat")
	FakeHat.Name = "FakeHat"
	FakeHat.Parent = character
	local FakeHatChanged = FakeHat.Changed:connect(function(Property)
		if Property == "Parent" then
			Delay(0, function()
				if FakeHat.Parent and FakeHat.Parent ~= character then
					FakeHat.Parent = character
				end
			end)
		end
	end)
	local HatAdded = character.ChildAdded:connect(function(Child)
		Delay(0, function()
			if Child:IsA("Hat") and Child.Parent and Child ~= FakeHat then
				Child.Parent = game:GetService("Workspace")
			end
		end)
	end)
	wait(Duration)
	for i, v in pairs({FakeHatChanged, HatAdded}) do
		if v then
			v:disconnect()
		end
	end
	for i, v in pairs(MonsterAssets) do
		if v and v.Parent then
			v:Destroy()
		end
	end
	if FakeHat and FakeHat.Parent then
		FakeHat:Destroy()
	end
	for i, v in pairs(CharacterAssets) do
		if v.Object and v.Parent then
			local Object = v.Object:Clone()
			if v.Object:IsA("BasePart") then
				Object.BrickColor = v.BrickColor
				Object.Transparency = v.Transparency
			end
			Object.Parent = v.Parent
		end
	end
	for i, v in pairs(CharacterParts) do
		if v.Part and v.Part.Parent then
			v.Part.BrickColor = v.BrickColor
			v.Part.Transparency = v.Transparency
		end
	end
	if MonsterMorphed and MonsterMorphed.Parent then
		MonsterMorphed:Destroy()
	end
	Tool.Enabled = true
end

function Activated()
	if not Tool.Enabled or not CheckIfAlive() or Character:FindFirstChild("MonsterMorphed") or Active then
		return
	end
	Active = true
	local character = Character
	local humanoid = Humanoid
	local CurrentlyEquipped = true
	local UnequippedConnection = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
	end)
	InvokeClient("PlayAnimation", {Animation = Animations.Drink, FadeTime = 1, Weight = 1, Speed = 1})
	InvokeClient("PlaySound", Sounds.Gulp)
	wait(1.5)
	if CurrentlyEquipped then
		InvokeClient("StopSound", Sounds.Gulp)
		InvokeClient("PlaySound", Sounds.Sizzle)
		wait(1.5)
		if CurrentlyEquipped then
			if humanoid and humanoid.Parent then
				--humanoid.WalkSpeed = 0
			end
			InvokeClient("StopAnimation", Animations.Drink)
			InvokeClient("PlayAnimation", {Animation = Animations.Morph, FadeTime = 1, Weight = 1, Speed = 0.5})
			wait(1.5)
			if CurrentlyEquipped then
				Spawn(function()
					Transform(character)
				end)
				wait(3)
				if CurrentlyEquipped then
					InvokeClient("StopAnimation", Animations.Morph)
				end
			end
		end
	end
	if humanoid and humanoid.Parent then
		humanoid.WalkSpeed = 16
	end
	Active = false
end

function CheckIfAlive()
	return (Character.Parent and Player.Parent and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	Equipped = true
end

function Unequipped()
	Equipped = false
	Active = false
	for i, v in pairs(Sounds) do
		if v and v.Parent then
			InvokeClient("StopSound", v)
		end
	end
end

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Camera" referent="RBX0F8A5E9CCF134629916289C55EC39E18">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>111.687447</X>
							<Y>7.92087793</Y>
							<Z>27.2003841</Z>
							<R00>-0.0821422786</R00>
							<R01>-0.374097139</R01>
							<R02>0.923744559</R02>
							<R10>1.86264537e-09</R10>
							<R11>0.926876843</R11>
							<R12>0.375365615</R12>
							<R20>-0.996620655</R20>
							<R21>0.0308333896</R21>
							<R22>-0.0761357695</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>111.225517</X>
							<Y>7.73317194</Y>
							<Z>27.2384567</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		