<Item class="Model" referent="RBXEB50AF27703E4BA7B39BA913E700A871">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">302502491</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBXCAE5D0B596024A438A8C5F6D5BA2C4A8">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>0.0250000004</X>
						<Y>0</Y>
						<Z>1.75</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>-0</R02>
						<R10>0</R10>
						<R11>0</R11>
						<R12>1</R12>
						<R20>0</R20>
						<R21>-1</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">SpiderSword</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=302165937</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>0.00614400022</X>
							<Y>20.4109879</Y>
							<Z>-0.0051020002</Z>
							<R00>-0.0820935667</R00>
							<R01>0.700093031</R01>
							<R02>-0.709316373</R02>
							<R10>-2.17238423e-07</R10>
							<R11>-0.711719275</R11>
							<R12>-0.702463806</R12>
							<R20>-0.996624529</R20>
							<R21>-0.0576676875</R21>
							<R22>0.0584277771</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX86764D64747740DBA7AFDF981FA0A307">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>0.00614400022</X>
							<Y>20.4109879</Y>
							<Z>-0.0051020002</Z>
							<R00>-0.0820935667</R00>
							<R01>0.700093031</R01>
							<R02>-0.709316373</R02>
							<R10>-2.17238423e-07</R10>
							<R11>-0.711719275</R11>
							<R12>-0.702463806</R12>
							<R20>-0.996624529</R20>
							<R21>-0.0576676875</R21>
							<R22>0.0584277771</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>0.25</X>
							<Y>0.5</Y>
							<Z>5</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBXF57F9E4E46244A709CFCACAA996628F5">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=302165984</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.899999976</X>
								<Y>0.899999976</Y>
								<Z>0.899999976</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=302165753</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBXA8A529D19F2B4FCE9444C4F643427607">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">SwordLunge</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222208</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.600000024</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX5704B019E1FD40D3BD2DEA1B1A457FDC">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">SwordSlash</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222216</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.699999988</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBXA46D81AEAAD94E1E9872B9204A437333">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Unsheath</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222225</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX4883A4FF24CA404EB9737286E9591687">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Poison</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=141649183</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.75</float>
						</Properties>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBXA4B1B742B91D4DA58EDC3075CBE00D11">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MouseIcon</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{F0A5BAA7-2476-4134-9735-F31EDD4F2966}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX21C872B4AC4846E2B5F79CCF8C9690D9">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{01C12F19-4DD8-473F-9933-7896342B616E}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")
ContentProvider = game:GetService("ContentProvider")
UserInputService = game:GetService("UserInputService")

InputCheck = Instance.new("ScreenGui")
InputCheck.Name = "InputCheck"
InputFrame = Instance.new("Frame")
InputFrame.BackgroundTransparency = 1
InputFrame.Size = UDim2.new(1, 0, 1, 0)
InputFrame.Parent = InputCheck

local function Create_PrivImpl(objectType)
	if type(objectType) ~= 'string' then
		error("Argument of Create must be a string", 2)
	end
	--return the proxy function that gives us the nice Create'string'{data} syntax
	--The first function call is a function call using Lua's single-string-argument syntax
	--The second function call is using Lua's single-table-argument syntax
	--Both can be chained together for the nice effect.
	return function(dat)
		--default to nothing, to handle the no argument given case
		dat = dat or {}

		--make the object to mutate
		local obj = Instance.new(objectType)
		local parent = nil

		--stored constructor function to be called after other initialization
		local ctor = nil

		for k, v in pairs(dat) do
			--add property
			if type(k) == 'string' then
				if k == 'Parent' then
					-- Parent should always be set last, setting the Parent of a new object
					-- immediately makes performance worse for all subsequent property updates.
					parent = v
				else
					obj[k] = v
				end


			--add child
			elseif type(k) == 'number' then
				if type(v) ~= 'userdata' then
					error("Bad entry in Create body: Numeric keys must be paired with children, got a: "..type(v), 2)
				end
				v.Parent = obj


			--event connect
			elseif type(k) == 'table' and k.__eventname then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create.E\'"..k.__eventname.."\']` must have a function value\
							got: "..tostring(v), 2)
				end
				obj[k.__eventname]:connect(v)


			--define constructor function
			elseif k == t.Create then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create]` should be paired with a constructor function, \
							got: "..tostring(v), 2)
				elseif ctor then
					--ctor already exists, only one allowed
					error("Bad entry in Create body: Only one constructor function is allowed", 2)
				end
				ctor = v


			else
				error("Bad entry ("..tostring(k).." =&gt; "..tostring(v)..") in Create body", 2)
			end
		end

		--apply constructor function if it exists
		if ctor then
			ctor(obj)
		end

		if parent then
			obj.Parent = parent
		end

		--return the completed object
		return obj
	end
end

--now, create the functor:
Create = setmetatable({}, {__call = function(tb, ...) return Create_PrivImpl(...) end})

--and create the "Event.E" syntax stub. Really it's just a stub to construct a table which our Create
--function can recognize as special.
Create.E = function(eventName)
	return {__eventname = eventName}
end


Animations = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

Rate = (1 / 60)

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	local function StopAnimation(Animation)
		for i, v in pairs(Animations) do
			if v.Animation == Animation then
				v.AnimationTrack:Stop(value.EndFadeTime)
				if v.TrackStopped then
					v.TrackStopped:disconnect()
				end
				table.remove(Animations, i)
			end
		end
	end
	if mode == "PlayAnimation" then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				if value.Speed then
					v.AnimationTrack:AdjustSpeed(value.Speed)
					return
				elseif value.Weight or value.FadeTime then
					v.AnimationTrack:AdjustWeight(value.Weight, value.FadeTime)
					return
				else
					StopAnimation(value.Animation, false)
				end
			end
		end
		local AnimationMonitor = Create("Model"){}
		local TrackEnded = Create("StringValue"){Name = "Ended"}
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		local TrackStopped
		if not value.Manual then
			TrackStopped = AnimationTrack.Stopped:connect(function()
				if TrackStopped then
					TrackStopped:disconnect()
				end
				StopAnimation(value.Animation, true)
				TrackEnded.Parent = AnimationMonitor
			end)
		end
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack, TrackStopped = TrackStopped})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
		if TrackStopped then
			AnimationMonitor:WaitForChild(TrackEnded.Name)
		end
		return TrackEnded.Name
	elseif mode == "StopAnimation" and value then
		StopAnimation(value.Animation)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		PlayerMouse = Player:GetMouse()
		Mouse.Button1Down:connect(function()
			InvokeServer("Button1Click", {Down = true})
		end)
		Mouse.Button1Up:connect(function()
			InvokeServer("Button1Click", {Down = false})
		end)
		Mouse.KeyDown:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = true})
		end)
		Mouse.KeyUp:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = false})
		end)
		local PlayerGui = Player:FindFirstChild("PlayerGui")
		if PlayerGui then
			InputCheckClone = InputCheck:Clone()
			if UserInputService.TouchEnabled then
				InputCheckClone = InputCheck:Clone()
				InputCheckClone.InputButton.InputBegan:connect(function()
					InvokeServer("Button1Click", {Down = true})
				end)
				InputCheckClone.InputButton.InputEnded:connect(function()
					InvokeServer("Button1Click", {Down = false})
				end)
				InputCheckClone.Parent = PlayerGui
			end
		end
		for i, v in pairs(Tool:GetChildren()) do
			if v:IsA("Animation") then
				ContentProvider:Preload(v.AnimationId)
			end
		end
	end)
end

function Unequipped()
	if InputCheckClone then
		Debris:AddItem(InputCheckClone, 0)
	end
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	local ServerReturn = nil
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MouseData" then
		return ((PlayerMouse and {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}) or nil)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Script" referent="RBX48D33DF17DCA40D89653F608FA9EFBD7">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">SwordScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{BAF351C3-10AE-4507-980F-F70F18B3F160}</string>
						<ProtectedString name="Source">--Made by Luckymaxer
--Updated for R15 avatar by StarWars

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

StunScript = script:WaitForChild("StunScript")
PoisonFlashEffect = script:WaitForChild("PoisonFlashEffect")
DeathEffect = script:WaitForChild("DeathEffect")

DamageValues = {
	BaseDamage = 5,
	SlashDamage = 8,
	LungeDamage = 12,
}

--For R15 avatars
Animations = {
	R15Slash = 522635514,
	R15Lunge = 522638767
}

local BaseUrl = "rbxassetid://"

Damage = DamageValues.BaseDamage

Grips = {
	Up = CFrame.new(0.025, 0, 1.75, 1, 0, -0, 0, 0, 1, 0, -1, 0),
	Out = CFrame.new(0.025, 0, 1.75, 1, 0, -0, 0, 1, 0, 0, -0, 1),
}

Sounds = {
	Slash = Handle:WaitForChild("SwordSlash"),
	Lunge = Handle:WaitForChild("SwordLunge"),
	Unsheath = Handle:WaitForChild("Unsheath"),
	Poison = Handle:WaitForChild("Poison"),
}

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Anchored = false,
	CanCollide = true,
	Locked = true,
}

GlowPart = BasePart:Clone()
GlowPart.Name = "Effect"
GlowPart.BrickColor = BrickColor.new("Really red")
GlowPart.Reflectance = 0
GlowPart.Transparency = 0.25
GlowPart.Material = Enum.Material.Neon
GlowPart.Size = Vector3.new(1, 1, 1)
GlowPart.CanCollide = false
Create("BlockMesh"){
	Name = "Mesh",
	Scale = Vector3.new(0.035, 0.25, 1.25),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = GlowPart,
}
Create("Weld"){
	Name = "Weld",
	Part0 = Handle,
	Part1 = GlowPart,
	C0 = CFrame.new(0.0375, 0, 0.025),
	C1 = CFrame.new(0, 0, 0),
	Parent = GlowPart,
}

Rate = (1 / 60)

Poisons = {}

ToolEquipped = false

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

Tool.Grip = Grips.Up
Tool.Enabled = true

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function DealDamage(Hit, Damage)
	if not Hit or not Hit.Parent then
		return
	end
	local character = Hit.Parent
	local humanoid = character:FindFirstChild("Humanoid")
	local torso = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
	if not humanoid or humanoid.Health == 0 or not torso then
		return
	end
	local player = Players:GetPlayerFromCharacter(character)
	if player and (player == Player or IsTeamMate(Player, player)) then
		return
	end
	UntagHumanoid(humanoid)
	TagHumanoid(humanoid, Player)
	humanoid:TakeDamage(Damage)
	if humanoid.Health &lt;= 0 then
		local Direction = CFrame.new(Torso.Position, Hit.Position).lookVector
		Direction = Vector3.new(Direction.X, 1, Direction.Z)
		local DeathEffectScript = DeathEffect:Clone()
		DeathEffectScript.WindDirection.Value = Direction
		DeathEffectScript.Force.Value = Vector3.new(0, 0, 0)
		DeathEffectScript.Disabled = false
		DeathEffectScript.Parent = character
	else
		local PoisonFlashEffectScript = character:FindFirstChild(PoisonFlashEffect.Name)
		if PoisonFlashEffectScript then
			return
		end
		local ChanceToPoison = math.random()
		if ChanceToPoison &lt;= 0.30 then
			local Sound = Sounds.Poison:Clone()
			Debris:AddItem(Sound, 4)
			Sound.Parent = torso
			Sound:Play()
			PoisonFlashEffectScript = PoisonFlashEffect:Clone()
			local Direction = CFrame.new(Torso.Position, Hit.Position).lookVector
			Direction = Vector3.new(Direction.X, 1, Direction.Z)
			local DeathEffectScript = DeathEffect:Clone()
			DeathEffectScript.WindDirection.Value = Direction
			DeathEffectScript.Force.Value = Vector3.new(0, 0, 0)
			DeathEffectScript.Disabled = true
			DeathEffectScript.Parent = PoisonFlashEffectScript
			local Creator = Create("ObjectValue"){
				Name = "Creator",
				Value = Player,
				Parent = PoisonFlashEffectScript,
			}
			local Creator = Create("ObjectValue"){
				Name = "Creator",
				Value = Player,
				Parent = PoisonFlashEffectScript,
			}
			PoisonFlashEffectScript.Disabled = false
			PoisonFlashEffectScript.Parent = character
			table.insert(Poisons, {Object = PoisonFlashEffectScript, Time = tick()})
			LightUpBlade()
		end
	end
end

function LightUpBlade()
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("BasePart") and v ~= Handle then
			v:Destroy()
		end
	end
	local GlowPartCopy = GlowPart:Clone()
	GlowPartCopy.Weld.Part0 = Handle
	local PoisonActivated = (#Poisons &gt; 0)
	if not PoisonActivated then
		return
	end
	GlowPartCopy.Parent = Tool
	local AliveCheck = 0
	local HealTick = tick()
	local Glow = {
		Rate = 20,
		Amount = 0.25,
		Interval = 0,
		More = true,
	}
	while GlowPartCopy and GlowPartCopy.Parent and PoisonActivated and #Poisons &gt; 0 do
		local Now = tick()
		if (Now - AliveCheck) &gt;= 1 then
			AliveCheck = Now
			for i, v in pairs(Poisons) do
				local Object = v.Object
				if not Object or not Object.Parent or not Object.Parent.Parent or Object.Parent.Parent ~= game:GetService("Workspace") or (Now - v.Time) &gt; 3.5 then
					table.remove(Poisons, i)
				end
			end
			if #Poisons == 0 then
				PoisonActivated = false
			end
		end
		if (Now - HealTick) &gt;= 0.25 then
			HealTick = Now
			Humanoid.Health = (Humanoid.Health + 1.5)
		end
		Glow.Interval = (Glow.Interval + 1)
		if GlowPartCopy and GlowPartCopy.Parent then
			local NewGlow = (((Glow.Amount / Glow.Rate) * 1) * ((Glow.More and 1) or -1))
			GlowPartCopy.Transparency = (GlowPartCopy.Transparency + NewGlow)
		end
		if Glow.Interval &gt; Glow.Rate then
			Glow.More = not Glow.More
			Glow.Interval = 0
		end
		wait()
	end
	Debris:AddItem(GlowPartCopy, 3)
	while GlowPartCopy and GlowPartCopy.Parent and GlowPartCopy.Transparency &lt; 1 do
		GlowPartCopy.Transparency = (GlowPartCopy.Transparency + 0.05)
		wait(Rate)
	end
	Debris:AddItem(GlowPartCopy, 0.5)
	if GlowPartCopy and GlowPartCopy.Parent then
		GlowPartCopy:Destroy()
	end
end

function Blow(Hit)
	if not Hit or not Hit.Parent or not CheckIfAlive() or not ToolEquipped then
		return
	end
	local RightArm = Character:FindFirstChild("Right Arm") or Character:FindFirstChild("RightHand")
	if not RightArm then
		return
	end
	local RightGrip = RightArm:FindFirstChild("RightGrip")
	if not RightGrip or (RightGrip.Part0 ~= Handle and RightGrip.Part1 ~= Handle) then
		return
	end
	local character = Hit.Parent
	if character == Character then
		return
	end
	local humanoid = character:FindFirstChild("Humanoid")
	if not humanoid or humanoid.Health == 0 then
		return
	end
	local player = Players:GetPlayerFromCharacter(character)
	if player and (player == Player or IsTeamMate(Player, player)) then
		return
	end
	DealDamage(Hit, Damage)
end

function Attack()
	Damage = DamageValues.SlashDamage
	Sounds.Slash:Play()
	if Humanoid then
		if Humanoid.RigType == Enum.HumanoidRigType.R6 then
			local Anim = Create("StringValue"){
				Name = "toolanim",
				Value = "Slash",
			}
			Debris:AddItem(Anim, 2)
			Anim.Parent = Tool
		elseif Humanoid.RigType == Enum.HumanoidRigType.R15 then
			local Anim = Tool:FindFirstChild("R15Slash")
			if Anim then
				local Track = Humanoid:LoadAnimation(Anim)
				Track:Play(0)
			end
		end
	end
end

function Lunge()
	Damage = DamageValues.LungeDamage

	Sounds.Lunge:Play()

	if Humanoid then
		if Humanoid.RigType == Enum.HumanoidRigType.R6 then
			local Anim = Create("StringValue"){
				Name = "toolanim",
				Value = "Lunge",
			}
			Debris:AddItem(Anim, 2)
			Anim.Parent = Tool
		elseif Humanoid.RigType == Enum.HumanoidRigType.R15 then
			local Anim = Tool:FindFirstChild("R15Lunge")
			if Anim then
				local Track = Humanoid:LoadAnimation(Anim)
				Track:Play(0)
			end
		end
	end

	wait(0.2)
	Tool.Grip = Grips.Out
	Spawn(function()
		local MouseData = InvokeClient("MouseData")
		if not MouseData then
			return
		end
		local MousePosition = MouseData.Position
		if not MousePosition then
			return
		end
		local RayData = WebStrike({
			Start = (Handle.CFrame * CFrame.new(0, 0, -(Handle.Size.Z / 2))).p,
			End = MousePosition,
		})
		if not RayData then
			return
		end
		local Hit = RayData.Hit
		if not Hit or not Hit.Parent then
			return
		end
		local character = Hit.Parent
		if character:IsA("Hat") then
			character = character.Parent
		end
		local humanoid = character:FindFirstChild("Humanoid")
		local torso = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
		if not humanoid or humanoid.Health == 0 or not torso then
			return
		end
		local player = Players:GetPlayerFromCharacter(character)
		if player and (player == Player or IsTeamMate(Player, player)) then
			return
		end
		local StunScriptCopy = character:FindFirstChild(StunScript.Name)
		if not StunScriptCopy then
			StunScriptCopy = StunScript:Clone()
			local Duration = Create("NumberValue"){
				Name = "Duration",
				Value = 0,
				Parent = StunScriptCopy,
			}
		end
		local Duration = StunScriptCopy:FindFirstChild("Duration")
		if Duration then
			Duration.Value = 3
		end
		if StunScriptCopy.Disabled or not StunScriptCopy.Parent then
			StunScriptCopy.Parent = character
			StunScriptCopy.Disabled = false
		end
	end)
	wait(0.75)
	Tool.Grip = Grips.Up

	Damage = DamageValues.SlashDamage
end

Tool.Enabled = true
LastAttack = 0

function Activated()
	if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() then
		return
	end
	Tool.Enabled = false
	local Tick = RunService.Stepped:wait()
	if (Tick - LastAttack &lt; 0.2) then
		Lunge()
	else
		Attack()
	end
	LastAttack = Tick
	--wait(0.5)
	Damage = DamageValues.BaseDamage
	local SlashAnim = Create("Animation"){
		Name = "R15Slash",
		AnimationId = BaseUrl .. Animations.R15Slash,
		Parent = Tool
	}

	local LungeAnim = Create("Animation"){
		Name = "R15Lunge",
		AnimationId = BaseUrl .. Animations.R15Lunge,
		Parent = Tool
	}
	Tool.Enabled = true
end

function CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.find(string.lower(String), string.lower(v)) then
			return true
		end
	end
	return false
end

function CheckIntangible(Hit)
	local ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Bullet"}
	if Hit and Hit.Parent then
		if CheckTableForString(ProjectileNames, Hit.Name) then
			return true
		end
	end
	return false
end

function CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
	local Ignore = ((type(Ignore) == "table" and Ignore) or {Ignore})
	local RayHit, RayPos, RayNormal, RayMaterial = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
	if RayHit and CheckIntangible(RayHit) then
		if DelayIfHit then
			wait()
		end
		RayHit, RayPos, RayNormal, RayMaterial = CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).Magnitude)), Ignore, DelayIfHit)
	end
	return RayHit, RayPos, RayNormal, RayMaterial
end

function WebStrike(Table)
	local Source = Table.Start
	local Destination = Table.End
	local MaxDistance = (Table.MaxDistance or 12)
	local MaxOffset = (Table.MaxOffset or 1)

	local Direction = (Destination - Source).Unit
	local Distance = (Source - Destination).Magnitude
	if Distance &gt; MaxDistance then
		Distance = MaxDistance
		Destination = (Source + Direction * Distance)
	end

	local MaxSegLength = 2
	local MinSegLength = 1

	local LastDistance = 0
	local Points = {Source}

	while (Distance - LastDistance) &gt; MaxSegLength do
		LastDistance = (LastDistance + ((math.random() * (MaxSegLength - MinSegLength)) + MinSegLength))
		local Offset = Vector3.new((math.random(-(MaxOffset * 1000), (MaxOffset * 1000)) * 0.001), (math.random(-(MaxOffset * 1000), (MaxOffset * 1000)) * 0.001), (math.random(-(MaxOffset * 1000), (MaxOffset * 1000)) * 0.001))
		local NewVector = (Source + (LastDistance * Direction) + Offset)
		table.insert(Points, NewVector)
		--wait(Rate)
	end
	table.insert(Points, Destination)

	local Parts = {}

	local WebModel = Create("Model"){
		Name = "SpiderWebModel",
	}
	Debris:AddItem(WebModel, 5)
	WebModel.Parent = game:GetService("Workspace")

	local RayData
	for Index, i in pairs(Points) do
		local LastPart = BasePart:Clone()
		LastPart.BrickColor = BrickColor.new("Institutional white")
		LastPart.Material = Enum.Material.Concrete
		for i, v in pairs({"Top", "Bottom", "Left", "Right", "Front", "Back"}) do
			LastPart[v .. "Surface"] = Enum.SurfaceType.SmoothNoOutlines
		end
		LastPart.Reflectance = 1
		LastPart.Transparency = 0.3
		LastPart.Anchored = true
		LastPart.CanCollide = false
		local Mesh = Create("BlockMesh"){
			Scale = Vector3.new(0.5, 1, 0.5),
			Parent = LastPart,
		}
		local Point = Points[Index + 1]
		if Point then
			local PartDirection = (CFrame.new(((i + Point) / 2), Point) * CFrame.Angles((math.pi / 2), 0, 0))
			LastPart.Size = Vector3.new(0.5, (i - Point).Magnitude, 0.5)
			LastPart.CFrame = PartDirection
			local PointDirection = (PartDirection * CFrame.Angles(-(math.pi / 2), 0, 0)).lookVector
			local RayHit, RayPos, RayNormal, RayMaterial = CastRay(LastPart.Position, PointDirection, (LastPart.Size.Y * 1), {Character, WebModel}, false)
			Debris:AddItem(LastPart, 1)
			LastPart.Parent = WebModel
			Spawn(function()
				local FadeFrames = 30
				local FadeRate = (1 / 60)
				for i = 1, FadeFrames do
					LastPart.Transparency = ((1 / FadeFrames) * i)
					wait(FadeRate)
				end
			end)
			if RayHit then
				RayData = {Hit = RayHit, Pos = RayPos, Normal = RayNormal, Material = RayMaterial}
				break
			end
			wait(Rate)
		end
	end
	return RayData
end

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso") or Character:FindFirstChild("UpperTorso")
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
	Sounds.Unsheath:Play()
end

function Unequipped()
	Tool.Grip = Grips.Up
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not ToolEquipped or not value or not CheckIfAlive() then
		return
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

Handle.Touched:connect(Blow)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)

ServerControl.OnServerInvoke = OnServerInvoke</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
					<Item class="Script" referent="RBXC925CD75CB764450B6F6414DF5E25342">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">StunScript</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{87C32CF0-6FC1-4355-BE4B-1EA74FF3FADF}</string>
							<ProtectedString name="Source">--Made by Luckymaxer

Debris = game:GetService("Debris")

Character = script.Parent
Humanoid = Character:FindFirstChild("Humanoid")

Duration = script:FindFirstChild("Duration")

Rate = (1 / 60)

function DestroyScript()
	Debris:AddItem(script, 0.5)
	script:Destroy()
end

if not Humanoid or Humanoid.Health == 0 or not Duration or Duration.Value &lt;= 0 then
	DestroyScript()
	return
end

while Humanoid.Health &gt; 0 and Duration.Value &gt; 0 do
	if Humanoid then
		Humanoid.WalkSpeed = 6
	end
	local Time = wait(Rate)
	Duration.Value = (Duration.Value - Time)
end

if Humanoid then
	Humanoid.WalkSpeed = 16
end

DestroyScript()</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
					<Item class="Script" referent="RBXA84E7F97FA634DECBB265EEEBB7A4B99">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">DeathEffect</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{683719AD-0224-4AEA-8CA9-818BED326AD2}</string>
							<ProtectedString name="Source">--Made by Luckymaxer
--Updated for R15 avatar by StarWars

Character = script.Parent
Humanoid = Character:FindFirstChild("Humanoid")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

BaseUrl = "http://www.roblox.com/asset/?id="

WindDirection = script:WaitForChild("WindDirection")
Force = script:WaitForChild("Force")
Functions = require(script:WaitForChild("Functions"))

Gravity = 196.20

BasePart = Instance.new("Part")
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

DisplayParts = {}

Rate = (1 / 60)

function DestroyScript()
	Debris:AddItem(script, 0.5)
end

if not Humanoid then
	DestroyScript()
	return
end

local FakeModel = Instance.new("Model")
FakeModel.Name = "Ghost"

Objects = Functions.Redesign(Character)

for i, v in pairs(Objects) do
	v = v.Object
	if v:IsA("BasePart") then
		local FakePart = v:Clone()
		FakePart.CanCollide = false
		for ii, vv in pairs(FakePart:GetChildren()) do
			if vv:IsA("JointInstance") then
				vv:Destroy()
			end
		end
		for ii, vv in pairs(Objects) do
			vv = vv.Object
			if vv:IsA("CharacterMesh") and string.gsub(v.Name, " ", "") == vv.BodyPart.Name then
				local Mesh = Instance.new("SpecialMesh")
				Mesh.MeshType = Enum.MeshType.FileMesh
				Mesh.MeshId = (BaseUrl .. vv.MeshId)
				Mesh.TextureId = (BaseUrl .. vv.BaseTextureId)
				Mesh.Scale = Vector3.new(1, 1, 1)
				Mesh.Offset = Vector3.new(0, 0, 0)
				Mesh.VertexColor = Vector3.new(1, 1, 1)
				Mesh.Parent = FakePart
			end
		end
		FakePart.Parent = FakeModel
		v:Destroy()
	end
end

Objects = Functions.Redesign(FakeModel)

for i, v in pairs(Objects) do
	v = v.Object
	if v:IsA("BasePart") then
		local Mass = (v:GetMass() * Gravity ^ 2)
		local BodyVelocity = Instance.new("BodyVelocity")
		BodyVelocity.maxForce = Vector3.new(Mass, Mass, Mass)
		BodyVelocity.velocity = (WindDirection.Value * Force.Value)
		BodyVelocity.Parent = v
		if v.Name == "Torso" or v.Name == "UpperTorso" then
		end
		v.Name = "Effect"
		if v.Transparency &lt; 1 then
			table.insert(DisplayParts, v)
		end
	elseif v:IsA("Decal") or v:IsA("Texture") then
		if v.Transparency &lt; 1 then
			table.insert(DisplayParts, v)
		end
	end
end

Delay(0.1, (function()
	local FadeRate = 30
	for i = 1, ((1 - Functions.DarkProperties.All.Transparency) * (1 * FadeRate)) do
		for ii, vv in pairs(DisplayParts) do
			if vv and vv.Parent then
				vv.Transparency = (vv.Transparency + (1 / FadeRate))
			end
		end
		wait(Rate)
	end
	if FakeModel and FakeModel.Parent then
		FakeModel:Destroy()
	end
end))

BoundaryBox = BasePart:Clone()
BoundaryBox.Name = "Effect"
BoundaryBox.Transparency = 1
BoundaryBox.CanCollide = false
BoundaryBox.Size = FakeModel:GetModelSize()
BoundaryBox.CFrame = FakeModel:GetModelCFrame()
BoundaryBox.Parent = FakeModel

Functions.Weld(FakeModel, BoundaryBox)

Debris:AddItem(FakeModel, 10)
FakeModel.Parent = game:GetService("Workspace")</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
						<Item class="ModuleScript" referent="RBX0B4DF06C8EF9460B98CDD1C4B62BE219">
							<Properties>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<Content name="LinkedSource"><null /></Content>
								<string name="Name">Functions</string>
								<string name="ScriptGuid">{65E58CE3-AD19-4718-A62E-C67D74A4A177}</string>
								<ProtectedString name="Source">--Made by Luckymaxer

Functions = {}

BaseColor = BrickColor.new("Really black")
Color = BaseColor.Color

Functions.DarkProperties = {
	All = {
		--BrickColor = BaseColor,
		Material = Enum.Material.Plastic,
		Transparency = 0.5,
		TextureId = "",
		--Texture = "",
		VertexColor = Vector3.new(BaseColor.Color.r, BaseColor.Color.g, BaseColor.Color.b),
		BaseTextureId = 0,
		OverlayTextureId = 0,
		ShirtTemplate = "",
		PantsTemplate = "",
		SparkleColor = BaseColor.Color,
		Color = BaseColor.Color,
		SecondaryColor = BaseColor.Color,
	},
	Class = {
		BasePart = {
			Reflectance = 0,
		},
		ParticleEmitter = {
			Color = ColorSequence.new(BaseColor.Color, BaseColor.Color),
		},
		Sparkles = {
			Color = BaseColor.Color,
			SparkleColor = BaseColor.Color,
		},
		Decal = {
			Texture = "",
		},
	}
}

function Functions.GetAllInstances(Parent)
	local Instances = {}
	local function GetInstances(Parent)
		for i, v in pairs(Parent:GetChildren()) do
			table.insert(Instances, v)
			GetInstances(v)
		end
	end
	GetInstances(Parent)
	return Instances
end

function Functions.Redesign(Parent)
	local EffectedInstances = Functions.GetAllInstances(Parent)
	local OriginalInstances = {}
	local head = nil
	local rightarm = nil
	for i, v in pairs(Parent:GetChildren()) do
		if v:IsA("BasePart") then
			if v.Name == "Head" then
				head = v
			elseif v.Name == "Right Arm" then
				rightarm = v
			end
			if head and rightarm then
				break
			end
		end
	end
	for i, v in pairs(EffectedInstances) do
		local NewInstance = {Object = v, FakeObjects = {}, Properties = {}, Parent = v.Parent}
		local PropertiesAltered = {}
		if v:IsA("Hat") then
			if head then
				local Object = v:Clone()
				NewInstance.Object = Object
				for ii, vv in pairs(v:GetChildren()) do
					if vv:IsA("BasePart") and vv.Name == "Handle" then
						local Weld = Instance.new("Weld")
						Weld.Name = "HeadWeld"
						Weld.Part0 = head
						Weld.Part1 = vv
						Weld.C0 = CFrame.new(0, 0.5, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						Weld.C1 = v.AttachmentPoint
						Weld.Parent = head
						vv.Parent = Parent
						table.insert(NewInstance.FakeObjects, vv)
					end
				end
			end
			v:Destroy()
		elseif v:IsA("Tool") then
			if rightarm then
				local Object = v:Clone()
				NewInstance.Object = Object
				for ii, vv in pairs(v:GetChildren()) do
					if vv:IsA("BasePart") and vv.Name == "Handle" then
						local Weld = Instance.new("Weld")
						Weld.Name = "RightGrip"
						Weld.Part0 = rightarm
						Weld.Part1 = vv
						Weld.C0 = CFrame.new(0, -1, 0, 1, 0, -0, 0, 0, 1, 0, -1, -0)
						Weld.C1 = v.Grip
						Weld.Parent = rightarm
						vv.Parent = Parent
						table.insert(NewInstance.FakeObjects, vv)
					end
				end
			end
			v:Destroy()
		end
		if v:IsA("BasePart") and v.Name == "HumanoidRootPart" then
		elseif v:IsA("Decal") and v.Name == "face" then
		elseif v:IsA("Clothing") then
			NewInstance.Object = v:Clone()
			v:Destroy()
		else
			for ii, vv in pairs(Functions.DarkProperties.All) do
				pcall(function()
					NewInstance.Properties[ii] = v[ii]
					PropertiesAltered[ii] = true
					v[ii] = vv
				end)
			end
			for ii, vv in pairs(Functions.DarkProperties.Class) do
				if v:IsA(ii) then
					for iii, vvv in pairs(vv) do
						--if not PropertiesAltered[iii] then
							pcall(function()
								NewInstance.Properties[iii] = v[iii]
								v[iii] = vvv
							end)
						--end
					end
				end
			end
		end
		table.insert(OriginalInstances, NewInstance)
	end
	return OriginalInstances
end

function Functions.Weld(Parent, PrimaryPart)
	local Parts = {}
	local function WeldModel(Parent, PrimaryPart)
		for i, v in pairs(Parent:GetChildren()) do
			if v:IsA("BasePart") and v ~= PrimaryPart then
				local Weld = Instance.new("Weld")
				Weld.Name = "Weld"
				Weld.Part0 = PrimaryPart
				Weld.Part1 = v
				Weld.C0 = PrimaryPart.CFrame:inverse()
				Weld.C1 = v.CFrame:inverse()
				Weld.Parent = v
				table.insert(Parts, v)
			end
			WeldModel(v, PrimaryPart)
		end
	end
	WeldModel(Parent, PrimaryPart)
	return Parts
end

return Functions</ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
							</Properties>
						</Item>
						<Item class="Vector3Value" referent="RBX5CBA1DDCD372412B94F7C1D1A257551E">
							<Properties>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">WindDirection</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
								<Vector3 name="Value">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Vector3Value" referent="RBX353CEBCCC0094283AA466ADC2D2876F7">
							<Properties>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">Force</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
								<Vector3 name="Value">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
							</Properties>
						</Item>
					</Item>
					<Item class="Script" referent="RBX71F21E365FB94E8A8F998E4E0D150457">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">PoisonFlashEffect</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{EB1A6E44-3312-4859-B3E4-DB0A8F3DC7A2}</string>
							<ProtectedString name="Source">--Made by Luckymaxer

Character = script.Parent
Humanoid = Character:FindFirstChild("Humanoid")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

BaseUrl = "http://www.roblox.com/asset/?id="

Functions = require(script:WaitForChild("Functions"))
DeathEffect = script:FindFirstChild("DeathEffect")

Creator = script:FindFirstChild("Creator")

DisplayParts = {}

Rate = (1 / 60)

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function TagHumanoid(humanoid, player)
	local Creator_Tag = Instance.new("ObjectValue")
	Creator_Tag.Name = "creator"
	Creator_Tag.Value = player
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function DestroyScript()
	Debris:AddItem(script, 0.5)
	return
end

if not Humanoid then
	DestroyScript()
	return
end

Player = Players:GetPlayerFromCharacter(Character)

for i = 1, 5 do
	if Player then
		Humanoid:UnequipTools()
	else
		for i, v in pairs(Character:GetChildren()) do
			if v:IsA("Tool") then
				v:Destroy()
			end
		end
	end

	local Objects = Functions.Redesign(Character)

	for i, v in pairs(Objects) do
		v = v.Object
		if v:IsA("BasePart") then
			if v.Transparency &lt; 1 then
				table.insert(DisplayParts, v)
			end
		elseif v:IsA("Decal") or v:IsA("Texture") then
			if v.Transparency &lt; 1 then
				table.insert(DisplayParts, v)
			end
		end
	end
	local SameTeam = false
	UntagHumanoid(Humanoid)
	if Creator and Creator.Value and Creator.Value.Parent and Creator.Value:IsA("Player") then
		if not Player or not IsTeamMate(Creator.Value, Player) then
			TagHumanoid(Humanoid, Creator.Value)
		else
			SameTeam = true
		end
	end
	if not SameTeam then
		Humanoid:TakeDamage(8)
		if Humanoid.Health &lt;= 0 and DeathEffect then
			local DeathEffectScript = DeathEffect:Clone()
			DeathEffectScript.Disabled = false
			DeathEffectScript.Parent = Character
		end
	end
	if Humanoid.Health &gt; 0 then
		--wait(0.1)
		--Delay(0.1, (function()
			local FadeRate = 2
			local FadeAmount = 0.95
			for i = 1, ((1 - Functions.DarkProperties.All.Transparency) * (FadeAmount * FadeRate)) do
				for ii, vv in pairs(DisplayParts) do
					if vv and vv.Parent then
						vv.Transparency = (vv.Transparency + (FadeAmount / FadeRate))
					end
				end
				wait(Rate)
			end
			wait(0.5)
			for i = 1, ((1 - Functions.DarkProperties.All.Transparency) * (FadeAmount * FadeRate)) do
				for ii, vv in pairs(DisplayParts) do
					if vv and vv.Parent then
						vv.Transparency = (vv.Transparency - (FadeAmount / FadeRate))
					end
				end
				wait(Rate)
			end
			for i, v in pairs(Objects) do
				local Object = v.Object
				for ii, vv in pairs(v.FakeObjects) do
					if vv and vv.Parent then
						vv:Destroy()
					end
				end
				pcall(function()
					for ii, vv in pairs(v.Properties) do
						pcall(function()
							Object[ii] = vv
						end)
					end
					Object.Parent = v.Parent
				end)
			end
		--end))
		wait(0.5)
	end
end

DestroyScript()</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
						<Item class="ModuleScript" referent="RBXB415A1FC5C6E40968A0D3B548DFCDB02">
							<Properties>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<Content name="LinkedSource"><null /></Content>
								<string name="Name">Functions</string>
								<string name="ScriptGuid">{71FE38F3-055A-4B74-AEC8-3A8D30233F7C}</string>
								<ProtectedString name="Source">--Made by Luckymaxer

Functions = {}

BaseColor = BrickColor.new("Really black")
Color = BaseColor.Color

Functions.DarkProperties = {
	All = {
		--BrickColor = BaseColor,
		Material = Enum.Material.Plastic,
		Transparency = 0.5,
		TextureId = "",
		--Texture = "",
		VertexColor = Vector3.new(BaseColor.Color.r, BaseColor.Color.g, BaseColor.Color.b),
		BaseTextureId = 0,
		OverlayTextureId = 0,
		ShirtTemplate = "",
		PantsTemplate = "",
		SparkleColor = BaseColor.Color,
		Color = BaseColor.Color,
		SecondaryColor = BaseColor.Color,
	},
	Class = {
		BasePart = {
			Reflectance = 0,
		},
		ParticleEmitter = {
			Color = ColorSequence.new(BaseColor.Color, BaseColor.Color),
		},
		Sparkles = {
			Color = BaseColor.Color,
			SparkleColor = BaseColor.Color,
		},
		Decal = {
			Texture = "",
		},
	}
}

function Functions.GetAllInstances(Parent)
	local Instances = {}
	local function GetInstances(Parent)
		for i, v in pairs(Parent:GetChildren()) do
			table.insert(Instances, v)
			GetInstances(v)
		end
	end
	GetInstances(Parent)
	return Instances
end

function Functions.Redesign(Parent)
	local EffectedInstances = Functions.GetAllInstances(Parent)
	local OriginalInstances = {}
	local head = nil
	local rightarm = nil
	for i, v in pairs(Parent:GetChildren()) do
		if v:IsA("BasePart") then
			if v.Name == "Head" then
				head = v
			elseif v.Name == "Right Arm" then
				rightarm = v
			end
			if head and rightarm then
				break
			end
		end
	end
	for i, v in pairs(EffectedInstances) do
		local NewInstance = {Object = v, FakeObjects = {}, Properties = {}, Parent = v.Parent}
		local PropertiesAltered = {}
		if v:IsA("Hat") then
			if head then
				local Object = v:Clone()
				NewInstance.Object = Object
				for ii, vv in pairs(v:GetChildren()) do
					if vv:IsA("BasePart") and vv.Name == "Handle" then
						local Weld = Instance.new("Weld")
						Weld.Name = "HeadWeld"
						Weld.Part0 = head
						Weld.Part1 = vv
						Weld.C0 = CFrame.new(0, 0.5, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						Weld.C1 = v.AttachmentPoint
						Weld.Parent = head
						vv.Parent = Parent
						table.insert(NewInstance.FakeObjects, vv)
					end
				end
			end
			v:Destroy()
		elseif v:IsA("Tool") then
			if rightarm then
				local Object = v:Clone()
				NewInstance.Object = Object
				for ii, vv in pairs(v:GetChildren()) do
					if vv:IsA("BasePart") and vv.Name == "Handle" then
						local Weld = Instance.new("Weld")
						Weld.Name = "RightGrip"
						Weld.Part0 = rightarm
						Weld.Part1 = vv
						Weld.C0 = CFrame.new(0, -1, 0, 1, 0, -0, 0, 0, 1, 0, -1, -0)
						Weld.C1 = v.Grip
						Weld.Parent = rightarm
						vv.Parent = Parent
						table.insert(NewInstance.FakeObjects, vv)
					end
				end
			end
			v:Destroy()
		end
		if v:IsA("BasePart") and v.Name == "HumanoidRootPart" then
		elseif v:IsA("Decal") and v.Name == "face" then
		elseif v:IsA("Clothing") then
			NewInstance.Object = v:Clone()
			v:Destroy()
		else
			for ii, vv in pairs(Functions.DarkProperties.All) do
				pcall(function()
					NewInstance.Properties[ii] = v[ii]
					PropertiesAltered[ii] = true
					v[ii] = vv
				end)
			end
			for ii, vv in pairs(Functions.DarkProperties.Class) do
				if v:IsA(ii) then
					for iii, vvv in pairs(vv) do
						--if not PropertiesAltered[iii] then
							pcall(function()
								NewInstance.Properties[iii] = v[iii]
								v[iii] = vvv
							end)
						--end
					end
				end
			end
		end
		table.insert(OriginalInstances, NewInstance)
	end
	return OriginalInstances
end

function Functions.Weld(Parent, PrimaryPart)
	local Parts = {}
	local function WeldModel(Parent, PrimaryPart)
		for i, v in pairs(Parent:GetChildren()) do
			if v:IsA("BasePart") and v ~= PrimaryPart then
				local Weld = Instance.new("Weld")
				Weld.Name = "Weld"
				Weld.Part0 = PrimaryPart
				Weld.Part1 = v
				Weld.C0 = PrimaryPart.CFrame:inverse()
				Weld.C1 = v.CFrame:inverse()
				Weld.Parent = v
				table.insert(Parts, v)
			end
			WeldModel(v, PrimaryPart)
		end
	end
	WeldModel(Parent, PrimaryPart)
	return Parts
end

return Functions</ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
		</Item>
		