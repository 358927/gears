<Item class="Model" referent="RBX2ACC9192C94D462FBA68DC04CFD2E714">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">186867645</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBXDC9E56B7CCE34C8BB21056718C8BD7CC">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>0</X>
						<Y>0</Y>
						<Z>0.100000001</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">TabletOfAkmenrah</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=186495170</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>0</X>
							<Y>17.3999996</Y>
							<Z>22</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBXB42E9A5D16A34830B6F729AB3DA967A9">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>0</X>
							<Y>17.3999996</Y>
							<Z>22</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1.75</X>
							<Y>2.25</Y>
							<Z>0.25</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBXEC37BFD437994F8095216973A04396A8">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=186495142</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0500000007</X>
								<Y>0.0500000007</Y>
								<Z>0.0500000007</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=186495164</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sparkles" referent="RBX0B73AABAAD1F452C9D7611B121635E28">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">false</bool>
							<string name="Name">Sparkles</string>
							<int64 name="SourceAssetId">-1</int64>
							<Color3 name="SparkleColor">
								<R>0.666666687</R>
								<G>0.666666687</G>
								<B>0</B>
							</Color3>
							<BinaryString name="Tags" />
							<float name="TimeScale">1</float>
						</Properties>
					</Item>
					<Item class="PointLight" referent="RBX3403CDBDB71A4360AD7F75CFE9E6C20D">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<float name="Brightness">50</float>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<Color3 name="Color">
								<R>0.666666687</R>
								<G>0.666666687</G>
								<B>0</B>
							</Color3>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">false</bool>
							<string name="Name">PointLight</string>
							<float name="Range">8</float>
							<bool name="Shadows">false</bool>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBX56770C994DF7466F9A412A319E3B9BC7">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{3D4C5767-FC1E-4BB1-8D3E-1141FCEDB1DC}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
ContentProvider = game:GetService("ContentProvider")

Camera = game:GetService("Workspace").CurrentCamera

Animations = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ClientControl.OnClientInvoke = (function(Mode, Value)
	if Mode == "PlayAnimation" and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
		table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
	elseif Mode == "StopAnimation" and Value then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	elseif Mode == "Preload" and Value then
		ContentProvider:Preload(Value)
	elseif Mode == "PlaySound" and Value then
		Value:Play()
	elseif Mode == "StopSound" and Value then
		Value:Stop()
	elseif Mode == "MousePosition" then
		return PlayerMouse.Hit.p
	elseif Mode == "DisableJump" then
		DisableJump(Value)
	elseif Mode == "SetCamera" and Value then
		if Value.Subject and Value.Type then
			Camera.CameraSubject = Value.Subject
			Camera.CameraType = Value.Type
		end
	end
end)

function InvokeServer(Mode, Value)
	local ServerReturn = nil
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(Mode, Value)
	end)
	return ServerReturn
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.Button1Down:connect(function()
		InvokeServer("MouseClick", {Down = true})
	end)
	Mouse.Button1Up:connect(function()
		InvokeServer("MouseClick", {Down = false})
	end)
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	if PreventJump then
		PreventJump:disconnect()
	end
	Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Script" referent="RBX6ACB796913064085A8B0094ADF7E219B">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{CC6CF440-8F67-418F-A727-9B38C0B1BC2E}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")
Sparkles = Handle:WaitForChild("Sparkles")
PointLight = Handle:WaitForChild("PointLight")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Animations = {
	Activate = {Animation = Tool:WaitForChild("Activate"), FadeTime = nil, Weight = nil, Speed = nil, Duration = 2}
}

Sounds = {}

ToolEquipped = false
AttemptingActivation = false

Duration = 30

DefaultColor = BrickColor.new("Lime green").Color

ClientControl = (Tool:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Tool

ServerControl = (Tool:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Tool

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if Mode == "KeyPress" and Value then
		local Key = string.lower(Value.Key)
		local ByteKey = string.byte(Key)
		local Down = Value.Down
	end
end)

Sparkles.Enabled = false
PointLight.Enabled = false
Tool.Enabled = true

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

function CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.lower(v) == string.lower(String) then
			return true
		end
	end
	return false
end

function GetAllObjects(Parent)
	local Objects = {}
	local function GetObjects(Parent)
		for i, v in pairs(Parent:GetChildren()) do
			table.insert(Objects, v)
			GetObjects(v)
		end
	end
	GetObjects(Parent)
	return Objects
end

function GlowPart(Object)
	local Part, Weld, Meshes, Sparkles, Light = nil, nil, {}, nil, nil
	local Parts = {"Head", "HumanoidRootPart"}
	if Object.Parent ~= Tool and not Object.Parent:IsA("Tool") and Object.Parent.Name ~= "GlowingModel" then
		if Object:IsA("JointInstance") and Object.Name == "GlowWeld" then
			Object:Destroy()
		elseif Object:IsA("BasePart") then
			Part = Object:Clone()
			Part.Name = "GlowingPart"
			Part.Transparency = 0.5
			Part.Material = Enum.Material.Plastic
			Part.CanCollide = false
			Part.Locked = true
			Part.Anchored = false
			Light = Instance.new("PointLight")
			Light.Brightness = 50
			Light.Range = 6
			Light.Shadows = false
			Light.Enabled = false
			local Surfaces = {Enum.NormalId.Top, Enum.NormalId.Bottom, Enum.NormalId.Front, Enum.NormalId.Back, Enum.NormalId.Left, Enum.NormalId.Right}
			for i, v in pairs(Surfaces) do
				pcall(function()
					Part[Object.Name .. "Surface"] = Enum.SurfaceType.Smooth
				end)
			end
			Part.FormFactor = Enum.FormFactor.Custom
			Part.Size = Vector3.new(0.2, 0.2, 0.2)
			Weld = Instance.new("Weld")
			Weld.Name = "GlowWeld"
			Weld.Part0 = Object
			Weld.Part1 = Part
			Weld.C0 = CFrame.new(0, 0, 0)
			local PartUsable = false
			if not CheckTableForString(Parts, Object.Name) then
				if Object.Name == "Torso" then
					Sparkles = Instance.new("Sparkles")
					Sparkles.Enabled = false
				end
				local HasCharacterMesh = false
				for ii, vv in pairs(Object.Parent:GetChildren()) do
					if vv:IsA("CharacterMesh") and vv.BodyPart.Name == string.gsub(Object.Name, " ", "") then
						Weld.C0 = CFrame.new(0, 0.075, 0)
						Mesh = Instance.new("SpecialMesh")
						Mesh.MeshType = Enum.MeshType.FileMesh
						Mesh.MeshId = ("http://www.roblox.com/asset?id=" .. vv.MeshId)
						Mesh.TextureId = "null"
						Mesh.Scale = Vector3.new(1.1, 1.1, 1.1)
						Mesh.Parent = Part
						table.insert(Meshes, Mesh)
						PartUsable = true
						HasCharacterMesh = true
					end
				end
				if not HasCharacterMesh then
					if Object.Parent and Object.Parent:IsA("Hat") then
						for ii, vv in pairs(Part:GetChildren()) do
							if vv:IsA("DataModelMesh") then
								vv.Scale = Vector3.new((vv.Scale.X + 0.05), (vv.Scale.Y + 0.05), (vv.Scale.Z + 0.05))
								if vv.MeshType == Enum.MeshType.FileMesh then
									vv.TextureId = "http://www.roblox.com/asset?id="
								end
								table.insert(Meshes, vv)
								PartUsable = true
							end
						end
					else
						local Mesh = Instance.new("SpecialMesh")
						Mesh.MeshType = Enum.MeshType.FileMesh
						Mesh.MeshId = "http://www.roblox.com/Asset/?id=9856898"
						Mesh.TextureId = "http://www.roblox.com/asset/?ID=1361097"
						Mesh.Scale = ((Object.Size * 2) + Vector3.new(0.1, 0.1, 0.1))
						Mesh.Parent = Part
						table.insert(Meshes, Mesh)
						PartUsable = true
					end
				end
			elseif Object.Name == "Head" then
				for ii, vv in pairs(Part:GetChildren()) do
					if vv:IsA("DataModelMesh") then
						if vv.MeshType == Enum.MeshType.FileMesh then
							vv.TextureId = "http://www.roblox.com/asset?id="
							vv.Scale = Vector3.new((vv.Scale.X + 0.1), (vv.Scale.Y + 0.1), (vv.Scale.Z + 0.1))
						else
							vv.Scale = ((vv.Scale + Vector3.new(0.1, 0.1, 0.1)) * 5)
						end
						table.insert(Meshes, vv)
						PartUsable = true
					end
				end
			end
		end
	end
	return ((Part and Weld and {Object = Object, Part = Part, Weld = Weld, Meshes = Meshes, Sparkles = Sparkles, Light = Light}) or nil)
end

function Glow(character, Color)
	if character == Tool then
		return
	end

	GlowingModel = Instance.new("Model")
	GlowingModel.Name = "GlowingModel"

	if GlowingModel and GlowingModel.Parent then
		GlowingModel:Destroy()
	end

	for i, v in pairs(character:GetChildren()) do
		if v.Name == GlowingModel.Name then
			v:Destroy()
		end
	end

	for i, v in pairs({ObjectAdded, ObjectRemoved}) do
		if v then
			v:disconnect()
		end
	end

	local GlowData = {}

	local function SetUpGlow(Table)
		Table.Part.BrickColor = BrickColor.new(Color)
		for ii, vv in pairs(Table.Part:GetChildren()) do
			if not vv:IsA("DataModelMesh") then
				vv:Destroy()
			end
		end
		for ii, vv in pairs({Table.Sparkles, Table.Light}) do
			if vv then
				pcall(function()
					vv[((vv:IsA("Sparkles") and "SparkleColor") or (vv:IsA("Light") and "Color"))] = Color
				end)
				vv.Enabled = true
				vv.Parent = Table.Part
			end
		end
		for ii, vv in pairs(Table.Meshes) do
			if vv:IsA("DataModelMesh") then
				vv.VertexColor = Vector3.new(Color.r, Color.g, Color.b)
			end
		end
		Table.Weld.Parent = Table.Part
		Table.Part.Parent = GlowingModel
	end

	local function GlowParts(Parent)
		for i, v in pairs(Parent:GetChildren()) do
			local GlowTable = GlowPart(v)
			if GlowTable then
				local ObjectAlreadyUsed = false
				for ii, vv in pairs(GlowData) do
					if vv.Object and vv.Object and vv.Object == GlowTable.Object then
						ObjectAlreadyUsed = true
					end
				end
				if not ObjectAlreadyUsed then
					SetUpGlow(GlowTable)
					table.insert(GlowData, GlowTable)
				end
			end
			GlowParts(v)
		end
	end

	GlowParts(character)
	if Players:GetPlayerFromCharacter(character) then
		Debris:AddItem(GlowingModel, Duration)
		GlowingModel.Parent = character

		ObjectAdded = character.ChildAdded:connect(function(Child)
			if Child == Tool then
				return
			end
			wait()
			if not Child or not Child.Parent or Child.Name == GlowingModel.Name then
				return
			end
			GlowParts(Child)
		end)

		ObjectRemoved = character.ChildRemoved:connect(function(Child)
			if Child == Tool then
				return
			end
			wait()
			if not Child or not Child.Parent or Child.Name == GlowingModel.Name then
				return
			end
			local Objects = GetAllObjects(Child)
			for i, v in pairs(Objects) do
				for ii, vv in pairs(GlowData) do
					if v == vv.Object then
						if vv.Part and vv.Part.Parent then
							vv.Part:Destroy()
						end
						table.remove(GlowData, ii)
					end
				end
			end
		end)

		Spawn(function()
			local VertexColor = Color
			while GlowingModel and GlowingModel.Parent do
				for i = 1, 20 do
					local Interval = (0.05 * ((i &lt; 11 and 1) or -1))
					VertexColor = Color3.new((VertexColor.r + Interval), VertexColor.g, VertexColor.b)
					for ii, vv in pairs(GlowData) do
						for iii, vvv in pairs(vv.Meshes) do
							if vvv:IsA("DataModelMesh") then
								vvv.VertexColor = Vector3.new(VertexColor.r, VertexColor.g, VertexColor.b)
							end
						end
						if vv.Sparkles and vv.Sparkles.Parent then
							vv.Sparkles.SparkleColor = Color3.new(VertexColor.r, VertexColor.g, VertexColor.b)
						end
					end
					wait(0.05)
				end
			end

			for i, v in pairs({ObjectAdded, ObjectRemoved}) do
				if v then
					v:disconnect()
				end
			end

		end)

	end

	return GlowingModel
end

function Activated()
	if not Tool.Enabled or AttemptingActivation or not CheckIfAlive() then
		return
	end
	AttemptingActivation = true
	local Animation = Animations.Activate
	InvokeClient("PlayAnimation", Animation)
	Sparkles.Enabled = true
	PointLight.Enabled = true
	local CurrentlyEquipped = true
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	ToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
	end)
	wait(Animation.Duration)
	if not CurrentlyEquipped then
		return
	end
	Tool.Enabled = false
	AttemptingActivation = false
	Sparkles.Enabled = false
	PointLight.Enabled = false
	local humanoid = Humanoid --Prevents glitching if the tool is dropped.
	humanoid.WalkSpeed = 24
	Spawn(function()
		Color = ((ColorBox and ColorBox.Parent and ColorBox.BackgroundColor3) or DefaultColor)
		Glow(Character, Color)
	end)
	wait(Duration)
	if GlowingModel and GlowingModel.Parent then
		GlowingModel:Destroy()
	end
	humanoid.WalkSpeed = 16
	wait((Duration / 2))
	Tool.Enabled = true
end

function CheckIfAlive()
	return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	PlayerGui = Player:FindFirstChild("PlayerGui")
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	if PlayerGui then
		Spawn(function()
			pcall(function()
				if ColorGui and ColorGui.Parent then
					ColorGui:Destroy()
				end
				local CurrentlyEquipped = true
				if EquippedToolUnequipped then
					EquippedToolUnequipped:disconnect()
				end
				EquippedToolUnequipped = Tool.Unequipped:connect(function()
					CurrentlyEquipped = false
					if ColorGui and ColorGui.Parent then
						ColorGui:Destroy()
					end
				end)
				local Module = require(187430232)
				local PlayerReturnTable = Module.GetTable({Key = "NATMTablet", Player = Player})
				if ToolEquipped and CurrentlyEquipped and PlayerReturnTable then
					ColorGui = PlayerReturnTable.ColorGui(DefaultColor)
					ColorBox = ColorGui:FindFirstChild("Frame"):FindFirstChild("Border"):FindFirstChild("ColorBox")
					if ToolEquipped and CurrentlyEquipped then
						ColorGui.Parent = PlayerGui
					end
				end
			end)
		end)
	end
	ToolEquipped = true
end

function Unequipped()
	AttemptingActivation = false
	Sparkles.Enabled = false
	PointLight.Enabled = false
	for i, v in pairs({EquippedToolUnequipped, ToolUnequipped}) do
		if v then
			v:disconnect()
		end
	end
	for i, v in pairs(Sounds) do
		InvokeClient("StopSound", v)
		v:Stop()
	end
	for i, v in pairs(Animations) do
		InvokeClient("StopAnimation", v)
	end
	if ColorGui and ColorGui.Parent then
--		ColorGui:Destroy()
	end
	ToolEquipped = false
end

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX604FBC43CC5D422C994927D9C831A12D">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset?id=186673959</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Activate</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX89C4858143E24797AEB703B3E7E3E937">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MouseIcon</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{4F2D45E3-5F45-4A5E-9588-920FC2C269AC}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Camera" referent="RBX2F0D7CDA20B94E16A3C3CE5E6683AE31">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>-0.0106637962</X>
							<Y>17.5349922</Y>
							<Z>20.1502266</Z>
							<R00>-0.999975502</R00>
							<R01>0.000309309398</R01>
							<R02>-0.00699036289</R02>
							<R10>-2.91038305e-11</R10>
							<R11>0.999022484</R11>
							<R12>0.0442047268</R12>
							<R20>0.00699720252</R20>
							<R21>0.0442036428</R21>
							<R22>-0.998998046</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>0.00331692491</X>
							<Y>17.4465828</Y>
							<Z>22.148222</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		