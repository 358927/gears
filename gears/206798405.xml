<Item class="Model" referent="RBX83275BB46BA9494EA5BE98B5CF60B004">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">206798405</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBX6D291741036549DDBC35C142565DF1B4">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>-0.5</X>
						<Y>-0.649999976</Y>
						<Z>0</Z>
						<R00>-0</R00>
						<R01>1</R01>
						<R02>0</R02>
						<R10>8.64761569e-06</R10>
						<R11>0</R11>
						<R12>1</R12>
						<R20>1</R20>
						<R21>0</R21>
						<R22>-8.64761569e-06</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">LavaGun</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=204508521</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>-5.53847694</X>
							<Y>28.9858227</Y>
							<Z>18.212122</Z>
							<R00>0.0166158099</R00>
							<R01>-0.875176191</R01>
							<R02>0.483519435</R02>
							<R10>0.999861896</R10>
							<R11>0.0143923732</R11>
							<R12>-0.00830918644</R12>
							<R20>0.000313009776</R20>
							<R21>0.483590722</R21>
							<R22>0.875294507</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX9C123F35D84E4537B4CF3E2461A445F5">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-5.53847694</X>
							<Y>28.9858227</Y>
							<Z>18.212122</Z>
							<R00>0.0166158099</R00>
							<R01>-0.875176191</R01>
							<R02>0.483519435</R02>
							<R10>0.999861896</R10>
							<R11>0.0143923732</R11>
							<R12>-0.00830918644</R12>
							<R20>0.000313009776</R20>
							<R21>0.483590722</R21>
							<R22>0.875294507</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1.5</X>
							<Y>3</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBXA46AFDDA56C745A79DA90C9E19956ACB">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=204508453</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=204508483</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Script" referent="RBXD30BD67F907345C8BCD4B1A6EB9DABC3">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{4FEC69B2-99F4-41C5-928F-D5F846E6CBD3}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")
Mesh = Handle:WaitForChild("Mesh")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")

BasePart = Instance.new("Part")
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.Locked = true
BasePart.CanCollide = true
BasePart.Anchored = false

BaseLaser = BasePart:Clone()
BaseLaser.Name = "Laser"
BaseLaser.BrickColor = BrickColor.new("Really red")
BaseLaser.Material = Enum.Material.CorrodedMetal
BaseLaser.Size = Vector3.new(1, 1, 1)
BaseLaser.CanCollide = false
BaseLaserMesh = Instance.new("CylinderMesh")
BaseLaserMesh.Parent = BaseLaser

ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Bullet"}

DefaultDistance = 25
MaxDistance = 200

MaxChargeTime = 5
ChargeTick = 0

DefaultCharge = 25
MaxCharge = 100

DefaultSize = 0.25
MaxSize = 1

DefaultDamage = 5
MaxDamage = 20

MaxFireTime = 3

DefaultReloadTime = 1
MaxReloadTime = 5

ServerControl = (Tool:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Tool

Mesh.VertexColor = Vector3.new(1, 1, 1)
Tool.Enabled = true

function TagHumanoid(humanoid, player)
	local Creator_Tag = Instance.new("ObjectValue")
	Creator_Tag.Name = "creator"
	Creator_Tag.Value = player
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.lower(v) == string.lower(String) then
			return true
		end
	end
	return false
end

function Clamp(Number, Min, Max)
	return math.max(math.min(Max, Number), Min)
end

function GetPercentage(Start, End, Number)
	return (((Number - Start) / (End - Start)) * 100)
end

function Round(Number, RoundDecimal)
	local WholeNumber, Decimal = math.modf(Number)
	return ((Decimal &gt;= RoundDecimal and math.ceil(Number)) or (Decimal &lt; RoundDecimal and math.floor(Number)))
end

function CheckIntangible(Hit)
	if Hit and Hit.Parent then
		if Hit.Transparency &gt; 0.8 or CheckTableForString(ProjectileNames, Hit.Name) then
			return true
		end
	end
	return false
end

function CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
	local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
	if RayHit and CheckIntangible(RayHit) then
		if DelayIfHit then
			wait()
		end
		RayHit, RayPos, RayNormal = CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
	end
	return RayHit, RayPos, RayNormal
end

function PositionPart(cframe, x, y, z)
	local PartCloneY = cframe
	PartCloneY = cframe * CFrame.Angles(-math.rad(90), 0, 0)
	PartCloneY = PartCloneY - PartCloneY.lookVector * y
	local PartCloneZ = PartCloneY + cframe.lookVector * z
	local PartCloneX = PartCloneZ * CFrame.Angles(0, math.rad(90), 0)
	PartCloneX = PartCloneX - PartCloneX.lookVector * x
	return PartCloneX * CFrame.Angles((math.pi / 2), 0, (math.pi / 2))
end

function HandleHit(Hit, Damage, StartPosition, TargetPosition)
	if not Hit or not Hit.Parent then
		return
	end
	local character = Hit.Parent
	if character:IsA("Hat") or character:IsA("Tool") then
		character = character.Parent
	end
	if character == Character then
		return
	end
	local humanoid = character:FindFirstChild("Humanoid")
	if not humanoid then
		if StartPosition and TargetPosition then
			local FirePart = BasePart:Clone()
			FirePart.Name = "Effect"
			FirePart.Size = Vector3.new(0.2, 0.2, 0.2)
			FirePart.Transparency = 1
			FirePart.CanCollide = false
			FirePart.Anchored = true
			local Fire = Instance.new("Fire")
			Fire.Heat = 3
			Fire.Size = 5
			Fire.Enabled = true
			Fire.Parent = FirePart
			Debris:AddItem(FirePart, 5)
			FirePart.Parent = game:GetService("Workspace")
			FirePart.CFrame = CFrame.new(TargetPosition, StartPosition) * CFrame.Angles(0, (math.pi / 2), 0)
		end
		return
	end
	if humanoid.Health == 0 then
		return
	end
	local player = Players:GetPlayerFromCharacter(character)
	if player and (not player.Neutral and player.TeamColor == Player.TeamColor) then
		return
	end
	UntagHumanoid(humanoid)
	TagHumanoid(humanoid, Player)
	humanoid:TakeDamage(Damage)
	if humanoid.Health == 0 then
		for i, v in pairs(character:GetChildren()) do
			if v:IsA("Hat") or v:IsA("Clothing") then
				v:Destroy()
			elseif v:IsA("BasePart") then
				v.BrickColor = BrickColor.new("Really black")
				v.Material = Enum.Material.Slate
				local Smoke = Instance.new("Smoke")
				Smoke.Opacity = 0.25
				Smoke.Size = 0.1
				Smoke.RiseVelocity = 0
				Smoke.Color = BrickColor.new("Really black").Color
				Smoke.Enabled = true
				Smoke.Parent = v
			end
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Player and Player.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Humanoid = Character:FindFirstChild("Humanoid")
	Player = Players:GetPlayerFromCharacter(Character)
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
end

function Unequipped()
	ToolEquipped = false
	MouseDown = false
end

function OnServerInvoke(player, mode, value)
	if player == Player and ToolEquipped and value and CheckIfAlive() then
		if mode == "MouseClick" then
			local Down = value.Down
			if Down and not MouseDown then
				if not Tool.Enabled or not CheckIfAlive() or not ToolEquipped then
					return
				end
				MouseDown = true
				ChargeTick = tick()
				while MouseDown and ToolEquipped and CheckIfAlive() do
					if (tick() - ChargeTick) &gt;= MaxChargeTime then
						Mesh.VertexColor = Vector3.new(1, (math.random(0, 50) * 0.01), (math.random(0, 25) * 0.01))
					end
					wait(0.1)
				end
				Mesh.VertexColor = Vector3.new(1, 1, 1)
			elseif not Down and MouseDown then
				MouseDown = false

				Tool.Enabled = false

				local CurrentCharge = math.abs(tick() - ChargeTick)
				local ChargePercent = Clamp(GetPercentage(0, MaxChargeTime, CurrentCharge), 0, MaxCharge)
				local ChargePercentToDecimal = (ChargePercent * 0.01)
				local ChargeDistance = Clamp((MaxDistance * ChargePercentToDecimal), DefaultDistance, MaxDistance)
				local ActivationTime = (MaxFireTime * ChargePercentToDecimal)
				local ActivationSize = Clamp((MaxSize * ChargePercentToDecimal), DefaultSize, MaxSize)
				local ActivationDamage = Clamp((MaxDamage * ChargePercentToDecimal), DefaultDamage, MaxDamage)
				local ChargeReload = Clamp((MaxReloadTime * ChargePercentToDecimal), DefaultReloadTime, MaxReloadTime)
				local ActivationTick = tick()

				local Laser = BaseLaser:Clone()
				local LaserMesh = Laser.Mesh
				LaserMesh.Scale = Vector3.new(0, 0, 0)
				Debris:AddItem(Laser, (ActivationTime + 2))
				Laser.Parent = Handle
				local LaserWeld = Instance.new("Weld")
				LaserWeld.Part0 = Handle
				LaserWeld.Part1 = Laser
				LaserWeld.Parent = Laser

				local TempLaser = Laser:Clone()
				local TempLaserMesh = TempLaser.Mesh
				local TempLaserWeld = Instance.new("Weld")
				TempLaserWeld.Part0 = Handle
				TempLaserWeld.Part1 = TempLaser
				TempLaserWeld.Parent = TempLaser
				TempLaser.Parent = Laser

				while (tick() - ActivationTick) &lt; ActivationTime and CheckIfAlive() and ToolEquipped and (Laser and Laser.Parent) do
					local TickTime = (tick() - ActivationTick)
					local ChargePercentage = GetPercentage(0, ActivationTime, (ActivationTime - TickTime))
					local ChargePercentageToDecimal = (ChargePercentage * 0.01)
					local ChargeSize = (ActivationSize * ChargePercentageToDecimal)
					local ChargeDamage = Clamp((ActivationDamage * ChargePercentageToDecimal), DefaultDamage, MaxDamage)
					local ChargeTransparency = (1 - ChargePercentageToDecimal)

					local StartPosition = PositionPart(Handle.CFrame, 0.25, -(Handle.Size.Y / 2), 0)
					local TargetPosition = InvokeClient("MousePosition")
					local Direction = CFrame.new(StartPosition.p, TargetPosition).lookVector

					local TotalDistance = 0

					local RayHit, RayPos, RayNormal = CastRay(StartPosition.p, Direction, ChargeDistance, {Character}, false)
					TotalDistance = (TotalDistance + (StartPosition.p - RayPos).magnitude)

					if RayHit then
						if TotalDistance &lt; ChargeDistance and RayHit.Reflectance &gt;= 0.5 then
							HandleHit(RayHit, ChargeDamage)
							local ReflectedDirection = (Direction - 2 * Direction:Dot(RayNormal) * RayNormal)
							local RayHit2, RayPos2, RayNormal2 = CastRay(RayPos, ReflectedDirection, (ChargeDistance - TotalDistance), {Character}, false)
							if RayHit2 then
								HandleHit(RayHit2, ChargeDamage, RayPos, RayPos2)
							end
							local TempDistance = (RayPos - RayPos2).magnitude
							TotalDistance = (TotalDistance + TempDistance)
							local Vec = (RayPos - RayPos2)
							local Pos = (CFrame.new(RayPos) * CFrame.new(0, 0, 0)).p
							local NewCFrame = CFrame.new(Pos, (Pos + Vec))
							TempLaserWeld.C0 = Handle.CFrame:toObjectSpace(NewCFrame) * CFrame.new(0, 0, (TempDistance / 2)) * CFrame.Angles((math.pi / 2), 0, 0)
							TempLaserWeld.C1 = CFrame.new(0, 0, 0)
							TempLaser.Transparency = Laser.Transparency
							TempLaserMesh.Scale = Vector3.new(ChargeSize, TempDistance, ChargeSize)
						else
							if ChargeTransparency &lt; 0.75 then
								HandleHit(RayHit, ChargeDamage, StartPosition.p, RayPos)
							else
								HandleHit(RayHit, ChargeDamage)
							end
							TempLaser.Transparency = 1
							LaserMesh.Scale = Vector3.new(0, 0, 0)
						end
					end

					local Distance = (StartPosition.p - RayPos).magnitude
					local Vec = (StartPosition.p - RayPos)
					local Pos = (StartPosition * CFrame.new(0, 0, 0)).p
					local NewCFrame = CFrame.new(Pos, (Pos + Vec))
					LaserWeld.C0 = Handle.CFrame:toObjectSpace(NewCFrame) * CFrame.new(0, 0, (Distance / 2)) * CFrame.Angles((math.pi / 2), 0, 0)
					LaserWeld.C1 = CFrame.new(0, 0, 0)
					LaserMesh.Scale = Vector3.new(ChargeSize, Distance, ChargeSize)
					Laser.Transparency = ChargeTransparency
					wait(0.01)
				end
				if Laser and Laser.Parent then
					Laser:Destroy()
				end

				wait(ChargeReload)

				Tool.Enabled = true
			end
		end
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = OnServerInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX575AF44127854505810184E2BF3DDDB8">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{4401FAA8-DF72-4C8C-B99A-7157D5EE1197}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")

Camera = game:GetService("Workspace").CurrentCamera

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ToolEquipped = false

function SetAnimation(Mode, Value)
	if Mode == "PlayAnimation" and Value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
		table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
	elseif Mode == "StopAnimation" and Value then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	end
end

function CheckIfAlive()
	return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.Button1Down:connect(function()
		InvokeServer("MouseClick", {Down = true})
	end)
	Mouse.Button1Up:connect(function()
		InvokeServer("MouseClick", {Down = false})
	end)
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
end

function Unequipped()
	ToolEquipped = false
	LocalObjects = {}
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs({ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end
	Animations = {}
end

function InvokeServer(Mode, Value)
	pcall(function()
		local ServerReturn = ServerControl:InvokeServer(Mode, Value)
		return ServerReturn
	end)
end

function OnClientInvoke(Mode, Value)
	if Mode == "PlayAnimation" and Value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", Value)
	elseif Mode == "StopAnimation" and Value then
		SetAnimation("StopAnimation", Value)
	elseif Mode == "PlaySound" and Value then
		Value:Play()
	elseif Mode == "StopSound" and Value then
		Value:Stop()
	elseif Mode == "MousePosition" then
		return PlayerMouse.Hit.p
	elseif Mode == "SetLocalTransparencyModifier" and Value and ToolEquipped then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == Value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, Value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							if ((not v.AutoUpdate and (v.Object.LocalTransparencyModifier == 1 or  v.Object.LocalTransparencyModifier == 0)) or v.AutoUpdate) then
								v.Object.LocalTransparencyModifier = v.Transparency
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)
ClientControl.OnClientInvoke = OnClientInvoke</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX3EA3A2874AF44783A1FDE680DAF15206">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MouseIcon</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{3EFEA67C-726E-4147-82B4-7A32448D18BC}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Camera" referent="RBX01C64094BBB94926B7695D7726F1DCF8">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>-3.51640749</X>
							<Y>29.9175663</Y>
							<Z>18.777544</Z>
							<R00>0.391538054</R00>
							<R01>-0.31468752</R01>
							<R02>0.864678979</R02>
							<R10>-0</R10>
							<R11>0.939703107</R11>
							<R12>0.341991454</R12>
							<R20>-0.920161963</R20>
							<R21>-0.133902669</R21>
							<R22>0.367929488</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">5</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>-5.24576521</X>
							<Y>29.2335835</Y>
							<Z>18.0416851</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		