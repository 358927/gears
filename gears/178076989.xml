<Item class="Model" referent="RBXCA0E072EABC94D0683DD9BE0965B2CBA">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">178076989</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBX247CB0206E934768BB5A9119B89AF6D4">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>0.400000006</X>
						<Y>-1</Y>
						<Z>0</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>-0</R12>
						<R20>-1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">Redcliff Exploding Heart</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=176248445</url></Content>
					<string name="ToolTip">Heart Attack!</string>
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>1.50000095</X>
							<Y>0.217501998</Y>
							<Z>-1.5625</Z>
							<R00>0</R00>
							<R01>0</R01>
							<R02>-1</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>1</R20>
							<R21>0</R21>
							<R22>0</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX03DC589ED93940278F245ED3D9D89B86">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>1.50000095</X>
							<Y>0.217501998</Y>
							<Z>-1.5625</Z>
							<R00>0</R00>
							<R01>0</R01>
							<R02>-1</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>1</R20>
							<R21>0</R21>
							<R22>0</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4291677645</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">2</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1.13</X>
							<Y>1.35000014</Y>
							<Z>1.06999993</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBXD497CECD44844A489B1819BB72570B88">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=176248379</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.899999976</X>
								<Y>0.899999976</Y>
								<Z>0.899999976</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=176248414</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX48314FA9E6794A7F9B6AE63EF620EC62">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">true</bool>
							<string name="Name">HB</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=179340770</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
					<Item class="Attachment" referent="RBX3D82C59832F847EBAF9A5E319DB8B526">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<CoordinateFrame name="CFrame">
								<X>0.400000036</X>
								<Y>-0.99999994</Y>
								<Z>0</Z>
								<R00>-6.31088724e-30</R00>
								<R01>0</R01>
								<R02>1</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>-1</R20>
								<R21>0</R21>
								<R22>-6.31088724e-30</R22>
							</CoordinateFrame>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">RightGripAttachment</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<bool name="Visible">false</bool>
						</Properties>
					</Item>
				</Item>
				<Item class="Script" referent="RBX050E55495C3C484C9E692A4274E3EFB7">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">GearScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{6CE74691-4EE9-4806-919C-1C315DCBC561}</string>
						<ProtectedString name="Source">--[[ alexnewtron 2014 ]]--


function Create(ty)
	return function(data)
		local obj = Instance.new(ty)
		for k, v in pairs(data) do
			if type(k) == 'number' then
				v.Parent = obj
			else
				obj[k] = v
			end
		end
		return obj
	end
end

local ClientAgent = require(script:WaitForChild("ClientAgent"));
local Controller = script:WaitForChild("Controller");
local Gear = script.Parent;

local Character = nil;
local Player = nil;
local Humanoid = nil;

local isEquipped = false;

local Check = true;

local Events = {}

local d = {
	Debris = game:GetService("Debris"),
	tween = require(Controller:WaitForChild("b")),
	easing = require(Controller:WaitForChild("e")),
};
local s = { ["HB"] = Gear.Handle:WaitForChild("HB") };

function TagHumanoid(a,b)local c=Instance.new("ObjectValue")c.Name="creator"c.Value=b;d.Debris:AddItem(c,2)c.Parent=a end
function UntagHumanoid(a)for b,c in pairs(a:GetChildren())do if c:IsA("ObjectValue")and c.Name=="creator"then c:Destroy()end end end

function Controller.OnServerInvoke(p, e, ...)
	local tuples={...};
	if (e == ClientAgent.SERVER_START) then
		--d.throw();
	elseif (e == ClientAgent.SERVER_PLAY_SOUND) then
		s[tuples[1]]:Play();
	end
end;

function d.throw()
	if not Gear:IsDescendantOf(Character) then Gear.Handle.Transparency = 0;Check = true return end
	Gear.Handle.Transparency = 1;
	local head = Character:FindFirstChild("Head");
	if (head) then
		local fB = Instance.new("Part");
		fB.Transparency = 0;
		fB.Name = "Effect";
		fB.BrickColor = BrickColor.new("Bright orange");
		fB.Size = Vector3.new(2,2,2);
		fB.CanCollide = true;
		fB.CFrame = CFrame.new(Gear.Handle.Position + head.CFrame.lookVector * 4);
		fB.Velocity=head.CFrame.lookVector * math.random(50,80)+Vector3.new(0,25,0);
		fB.TopSurface=Enum.SurfaceType.Smooth;
		fB.BottomSurface=Enum.SurfaceType.Smooth;
		local fM = Instance.new("SpecialMesh", fB);
		fM.MeshId = "http://www.roblox.com/asset/?id=176248379";
		fM.TextureId = "http://www.roblox.com/asset/?id=176248414";
		fM.Scale = Vector3.new(.9,.9,.9);
		local sound1 = Instance.new("Sound", fB);
		sound1.SoundId = "http://www.roblox.com/asset/?id=168192032";
		sound1.Name = "Splat";
		local bang = script.bang:Clone();
		bang.Parent = fB;
		Create("ObjectValue"){
			Name = "Creator",
			Value = Player,
			Parent = bang
		}
		bang.Disabled = false;
		d.Debris:AddItem(fB, 10);
		fB.Parent = workspace;
		wait(.5);
		coroutine.wrap(function()
			Controller:InvokeClient(Player, ClientAgent.REQUEST_ANIMATIONS_END);
		end)()
	end
	wait(4);
	Gear.Handle.Transparency = 0;
	s["HB"]:Play();
	Check = true;
end

Gear.Equipped:Connect(function()
	Character = Gear.Parent;
	Player = game:GetService("Players"):GetPlayerFromCharacter(Character);
	Humanoid = Character:FindFirstChild("Humanoid");
	s["HB"]:Play();
	isEquipped = true;
	spawn(function()
		wait(.5);
		while isEquipped do
			for i=1, 2 do
				local ts = d.tween("forward");
				ts.add(.05, {x = .9}, d.easing.inOutQuad);
				ts.add(.05, {x = 1.1}, d.easing.inOutQuad);
				for x=1, 200 do
					local p = ts.getCurrentProperties();
					Gear.Handle.Mesh.Scale = Vector3.new(p.x, p.x, p.x);
					ts.update(0.025); wait(0.025);
					if (p.x &gt;= 1.1) then break; end
				end
				wait(.05);
				local ts = d.tween("forward");
				ts.add(.05, {x = 1.1}, d.easing.inOutQuad);
				ts.add(.05, {x = .9}, d.easing.inOutQuad);
				for x=1, 200 do
					local p = ts.getCurrentProperties();
					Gear.Handle.Mesh.Scale = Vector3.new(p.x, p.x, p.x);
					ts.update(0.025); wait(0.025);
					if (p.x &lt;= .9) then break; end
				end
			end

			wait(1);

		end
	end);
	if not Character or not Humanoid or Humanoid.Health == 0 then return; end
Events[#Events+1] =	Gear.Activated:Connect(function()
		if not Check or not Humanoid or Humanoid.Health == 0 then return; end
		Check = false;
		s["HB"]:Stop();
		if Humanoid then
			coroutine.wrap(function()
				if Humanoid.RigType == Enum.HumanoidRigType.R15 then
					Controller:InvokeClient(Player, ClientAgent.REQUEST_ANIMATIONS, "R15Throw");
				else
					Controller:InvokeClient(Player, ClientAgent.REQUEST_ANIMATIONS, "Throw");
				end
			end)()
			wait(1.5)
			d.throw();
		end
	end)
end);

Gear.Unequipped:Connect(function()
	for i=1,#Events,1 do
		if Events[i] then Events[i]:Disconnect();Events[i] = nil end
	end
	Events = {}
	isEquipped = false;
	s["HB"]:Stop();
	--Controller:InvokeClient(Player, ClientAgent.REQUEST_ANIMATIONS_END)
end);</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
					<Item class="LocalScript" referent="RBX57E23997467A4B26A79710831E9CD753">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">false</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">GearLibrary</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{FC0E3A3F-285F-4E03-94BD-4E874134EF7B}</string>
							<ProtectedString name="Source">--[[ alexnewtron 2014 ]]--


local Gear = script.Parent.Parent;
local Player = nil;
local Character = nil;
local Humanoid = nil;
local Controller = script.Parent:WaitForChild("Controller");

local d = {
	Debris = game:GetService("Debris")
};

local ClientAgent = require(script.Parent:WaitForChild("ClientAgent"));
local preparedAnimations = {
	Gear:WaitForChild("Throw"),
	Gear:WaitForChild("R15Throw")
};
local readyAnimations = {};

local events = {}

Controller.OnClientInvoke = (function(...)
	local tuples={...};
	if (tuples[1] == ClientAgent.REQUEST_TARGETPOINT) then
		return ((Humanoid and Humanoid.TargetPoint) or nil);
	elseif (tuples[1] == ClientAgent.REQUEST_ANIMATIONS) then
		readyAnimations[tuples[2]]:Play();
		return true;
	elseif (tuples[1] == ClientAgent.REQUEST_ANIMATIONS_END) then
		for i, v in pairs(readyAnimations) do v:Stop(); end
		return true;
	end
end);

Gear.Equipped:Connect(function()
	Character = Gear.Parent;
	Player = game.Players.LocalPlayer;
	Character = Player.Character;
	Humanoid = Character:FindFirstChildOfClass("Humanoid");
	if not Character or not Humanoid or Humanoid.Health == 0 then return; end
	if (#readyAnimations == 0) then
		for i=1, #preparedAnimations do
			readyAnimations[preparedAnimations[i].Name] = Humanoid:LoadAnimation(preparedAnimations[i]);
		end
		events[#events+1] = readyAnimations["Throw"].KeyframeReached:Connect(function(k)
			if (k == "tick") then
			--	Controller:InvokeServer(ClientAgent.SERVER_PLAY_SOUND, "pin");
			elseif (k == "throw") then
				Controller:InvokeServer(ClientAgent.SERVER_START);
			end
		end);

		events[#events+1] = readyAnimations["R15Throw"].KeyframeReached:Connect(function(k)
			if (k == "tick") then
			--	Controller:InvokeServer(ClientAgent.SERVER_PLAY_SOUND, "pin");
			elseif (k == "throw") then
				Controller:InvokeServer(ClientAgent.SERVER_START);
			end
		end);
	end
end);

Gear.Unequipped:Connect(function()
	Controller:InvokeServer(ClientAgent.SERVER_START)
	for i=1, #events do
		if events[i] then events[i]:Disconnect();events[i] = nil end
	end
	events = {}
	for i, v in pairs(readyAnimations) do v:Stop(); end
end)

</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
					<Item class="Script" referent="RBX82B9A3124CC0464597955273539C6A59">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">bang</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{11F09308-34BF-4683-84FC-1A3870CEBCFB}</string>
							<ProtectedString name="Source">--[[ alexnewtron 2014 ]]--
local c = {
	d = 20,
	f = -1500,
	deb = game:GetService("Debris"),
	s = script.Parent:WaitForChild("Splat"),
	clients = nil,
	affectedClients = {},
	creator = script:WaitForChild("Creator")
}

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function TagHumanoid(humanoid, player)
	local Creator_Tag = Instance.new("ObjectValue")
	Creator_Tag.Name = "creator"
	Creator_Tag.Value = player
	game:GetService("Debris"):AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function c.bang()
	c.s:Play();
	c.clients = game:GetService("Players"):GetPlayers();
	local pos = script.Parent.Position;
	for i=1, #c.clients do
		if (c.clients[i] and c.clients[i].Character and (c.clients[i].Character:FindFirstChild("Torso") or c.clients[i].Character:FindFirstChild("UpperTorso"))) and not IsTeamMate(c.creator.Value,c.clients[i]) and c.clients[i].Character ~= c.creator.Value.Character then
			if ((pos - (c.clients[i].Character:FindFirstChild("Torso") or c.clients[i].Character:FindFirstChild("UpperTorso")).Position).Magnitude &lt; c.d) then
				table.insert(c.affectedClients, c.clients[i]);
			end
		end
	end
	for i=1, #c.affectedClients do
		local t = c.affectedClients[i].Character:FindFirstChild("Torso") or c.affectedClients[i].Character:FindFirstChild("UpperTorso")
		if t then
			local dist = Vector3.new(pos.x - t.Position.x, pos.y - t.Position.y, pos.z - t.Position.z);
			local bodyForce = Instance.new("BodyForce")
			local humanHit = t.Parent:FindFirstChildOfClass("Humanoid");
			bodyForce.Force = dist.unit * t:GetMass() * c.f;
			bodyForce.Parent = t;
			c.deb:AddItem(bodyForce, 0.5);
			if (humanHit) then
				humanHit.Sit = true;
				UntagHumanoid(humanHit)
				TagHumanoid(humanHit,c.creator.Value)
				humanHit:TakeDamage(30);
			end
			t.Parent:FindFirstChildOfClass("Humanoid").Sit = true;
			local pG = Instance.new("ScreenGui", c.affectedClients[i].PlayerGui);
			local f = Instance.new("Frame", pG);
			f.Size = UDim2.new(1,0,1,0);
			f.BackgroundTransparency = 1;
		end
	end
end
wait(2);
c.bang();
script.Parent.Transparency = 1;
local e = Instance.new("Explosion", script.Parent);
e.ExplosionType = Enum.ExplosionType.NoCraters;
e.BlastPressure = 0;
e.BlastRadius = 500;
e.Position = script.Parent.Position;
wait(1.5);
script.Parent:Destroy();</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
					<Item class="RemoteFunction" referent="RBXCDDB284D6D204747B0D41B786E23BC34">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">Controller</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
						<Item class="ModuleScript" referent="RBX8B9482BA2B4E4BA3B9092BCE3D25CFEA">
							<Properties>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<Content name="LinkedSource"><null /></Content>
								<string name="Name">b</string>
								<string name="ScriptGuid">{790F29B3-DB17-4E9B-8585-B268BCBD3034}</string>
								<ProtectedString name="Source">local a=require(script.Parent:WaitForChild("e"))local tostring=tostring;local b={forward=true,backward=true,loopforward=true,loopbackward=true,pingpong=true}local c={__tostring=function(d)local e="tween{"for f,g in pairs(d.p)do e=e.." "..tostring(f).."="..tostring(g)end;e=e.." }"return e end}local function h(i,j,k)return setmetatable({d=i or 1,f=j or a.inExpo,p=k or{}},c)end;local function l(m)local n,o,p,q;local function r(h)local s;if type(h)=="table"then for t,g in ipairs(n)do if g==h then s=t;break end end elseif type(h)=="number"then s=h end;if s and s&gt;0 and s&lt;=#n then return s end end;local function u(...)local i,j,k;local v={...}for t=1,3 do if type(v[t])=="number"then i=v[t]elseif type(v[t])=="table"then k=v[t]elseif type(v[t])=="function"then j=v[t]end end;local w=h(i,j,k)n[#n+1]=w;if not o then o=1 end;return w end;local function remove(h)local s=r(h)if s then local w=table.remove(n,s)if#n&gt;o then o=#n end;return w end end;local function x(h)local s=r(h)if s then o=s;p=0 end end;local function y()return n[o],o end;local function z()if#n&lt;=1 then return n[o],o else if m=="forward"then local A=o+1;return n[A],A elseif m=="backward"then local A=o-1;return n[A],A elseif m=="loopforward"then local A=o+1;if A&gt;#n then A=1 end;return n[A],A elseif m=="loopbackward"then local A=o-1;if A&lt;1 then A=#n end;return n[A],A elseif m=="pingpong"then local A=o+q;if A&gt;#n then A=#n-1 elseif A&lt;1 then A=2 end;return n[A],A end end end;local function B(C)C=C or"forward"assert(b[C],tostring(C).." is invalid, must be one of the valid animation modes")m=C end;local function D()if#n&lt;=1 then o=#n else if m=="forward"then if o&lt;#n then o=o+1 end elseif m=="backward"then if o&gt;1 then o=o-1 end elseif m=="loopforward"then if o&lt;#n then o=o+1 else o=1 end elseif m=="loopbackward"then if o&gt;1 then o=o-1 else o=#n end elseif m=="pingpong"then o=o+q;if o&gt;#n then q,o=-1,#n-1 elseif o&lt;=1 then if#n&gt;2 then q,o=1,1 else q,o=-1,2 end end end end end;local function E(F)p=p+F;local G,H=y(),z()if#n&gt;1 then if H and p&gt;=H.d then D()p=0 end else p=0 end end;local function I()local k={}local G=y()local H=z()if G then for f,g in pairs(G.p)do k[f]=g end end;if H and p&gt;0 then local J;local K=H.d;local L=H.f;for f,M in pairs(H.p)do J=k[f]if type(J)=="number"and type(M)=="number"then k[f]=L(p,J,M-J,K)end end end;return k end;local function N()n={}o=nil;p=0;q=1 end;N()B(m)return{getCurrentProperties=I,add=u,remove=remove,reset=N,getLength=function()return#n end,getElapsed=function()return p end,setCurrent=x,getCurrent=y,getNext=z,setMode=B,getMode=function()return m end,update=E,eachTween=function()local t=0;return function()t=t+1;if t&lt;=#n then return t,n[t]end end end}end;return l</ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX3B3C8A3AEC05477AB6610C19651BF165">
							<Properties>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<Content name="LinkedSource"><null /></Content>
								<string name="Name">e</string>
								<string name="ScriptGuid">{79B8D010-3A28-4993-88D5-018F9FCB00D1}</string>
								<ProtectedString name="Source">local pow = math.pow
local sin = math.sin
local cos = math.cos
local pi = math.pi
local sqrt = math.sqrt
local abs = math.abs
local asin  = math.asin

local function linear(t, b, c, d)
  return c * t / d + b
end

local function inQuad(t, b, c, d)
  t = t / d
  return c * pow(t, 2) + b
end

local function outQuad(t, b, c, d)
  t = t / d
  return -c * t * (t - 2) + b
end

local function inOutQuad(t, b, c, d)
  t = t / d * 2
  if t &lt; 1 then
    return c / 2 * pow(t, 2) + b
  else
    return -c / 2 * ((t - 1) * (t - 3) - 1) + b
  end
end

local function inCubic (t, b, c, d)
  t = t / d
  return c * pow(t, 3) + b
end

local function outCubic(t, b, c, d)
  t = t / d - 1
  return c * (pow(t, 3) + 1) + b
end

local function inOutCubic(t, b, c, d)
  t = t / d * 2
  if t &lt; 1 then
    return c / 2 * t * t * t + b
  else
    t = t - 2
    return c / 2 * (t * t * t + 2) + b
  end
end

local function outInCubic(t, b, c, d)
  if t &lt; d / 2 then
    return outCubic(t * 2, b, c / 2, d)
  else
    return inCubic((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inQuart(t, b, c, d)
  t = t / d
  return c * pow(t, 4) + b
end

local function outQuart(t, b, c, d)
  t = t / d - 1
  return -c * (pow(t, 4) - 1) + b
end

local function inOutQuart(t, b, c, d)
  t = t / d * 2
  if t &lt; 1 then
    return c / 2 * pow(t, 4) + b
  else
    t = t - 2
    return -c / 2 * (pow(t, 4) - 2) + b
  end
end

local function outInQuart(t, b, c, d)
  if t &lt; d / 2 then
    return outQuart(t * 2, b, c / 2, d)
  else
    return inQuart((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inQuint(t, b, c, d)
  t = t / d
  return c * pow(t, 5) + b
end

local function outQuint(t, b, c, d)
  t = t / d - 1
  return c * (pow(t, 5) + 1) + b
end

local function inOutQuint(t, b, c, d)
  t = t / d * 2
  if t &lt; 1 then
    return c / 2 * pow(t, 5) + b
  else
    t = t - 2
    return c / 2 * (pow(t, 5) + 2) + b
  end
end

local function outInQuint(t, b, c, d)
  if t &lt; d / 2 then
    return outQuint(t * 2, b, c / 2, d)
  else
    return inQuint((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inSine(t, b, c, d)
  return -c * cos(t / d * (pi / 2)) + c + b
end

local function outSine(t, b, c, d)
  return c * sin(t / d * (pi / 2)) + b
end

local function inOutSine(t, b, c, d)
  return -c / 2 * (cos(pi * t / d) - 1) + b
end

local function outInSine(t, b, c, d)
  if t &lt; d / 2 then
    return outSine(t * 2, b, c / 2, d)
  else
    return inSine((t * 2) -d, b + c / 2, c / 2, d)
  end
end

local function inExpo(t, b, c, d)
  if t == 0 then
    return b
  else
    return c * pow(2, 10 * (t / d - 1)) + b - c * 0.001
  end
end

local function outExpo(t, b, c, d)
  if t == d then
    return b + c
  else
    return c * 1.001 * (-pow(2, -10 * t / d) + 1) + b
  end
end

local function inOutExpo(t, b, c, d)
  if t == 0 then return b end
  if t == d then return b + c end
  t = t / d * 2
  if t &lt; 1 then
    return c / 2 * pow(2, 10 * (t - 1)) + b - c * 0.0005
  else
    t = t - 1
    return c / 2 * 1.0005 * (-pow(2, -10 * t) + 2) + b
  end
end

local function outInExpo(t, b, c, d)
  if t &lt; d / 2 then
    return outExpo(t * 2, b, c / 2, d)
  else
    return inExpo((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inCirc(t, b, c, d)
  t = t / d
  return(-c * (sqrt(1 - pow(t, 2)) - 1) + b)
end

local function outCirc(t, b, c, d)
  t = t / d - 1
  return(c * sqrt(1 - pow(t, 2)) + b)
end

local function inOutCirc(t, b, c, d)
  t = t / d * 2
  if t &lt; 1 then
    return -c / 2 * (sqrt(1 - t * t) - 1) + b
  else
    t = t - 2
    return c / 2 * (sqrt(1 - t * t) + 1) + b
  end
end

local function outInCirc(t, b, c, d)
  if t &lt; d / 2 then
    return outCirc(t * 2, b, c / 2, d)
  else
    return inCirc((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d

  if t == 1  then return b + c end

  if not p then p = d * 0.3 end

  local s

  if not a or a &lt; abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c/a)
  end

  t = t - 1

  return -(a * pow(2, 10 * t) * sin((t * d - s) * (2 * pi) / p)) + b
end

-- a: amplitud
-- p: period
local function outElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d

  if t == 1 then return b + c end

  if not p then p = d * 0.3 end

  local s

  if not a or a &lt; abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c/a)
  end

  return a * pow(2, -10 * t) * sin((t * d - s) * (2 * pi) / p) + c + b
end

-- p = period
-- a = amplitud
local function inOutElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d * 2

  if t == 2 then return b + c end

  if not p then p = d * (0.3 * 1.5) end
  if not a then a = 0 end

  if not a or a &lt; abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c / a)
  end

  if t &lt; 1 then
    t = t - 1
    return -0.5 * (a * pow(2, 10 * t) * sin((t * d - s) * (2 * pi) / p)) + b
  else
    t = t - 1
    return a * pow(2, -10 * t) * sin((t * d - s) * (2 * pi) / p ) * 0.5 + c + b
  end
end

-- a: amplitud
-- p: period
local function outInElastic(t, b, c, d, a, p)
  if t &lt; d / 2 then
    return outElastic(t * 2, b, c / 2, d, a, p)
  else
    return inElastic((t * 2) - d, b + c / 2, c / 2, d, a, p)
  end
end

local function inBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  t = t / d
  return c * t * t * ((s + 1) * t - s) + b
end

local function outBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  t = t / d - 1
  return c * (t * t * ((s + 1) * t + s) + 1) + b
end

local function inOutBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  s = s * 1.525
  t = t / d * 2
  if t &lt; 1 then
    return c / 2 * (t * t * ((s + 1) * t - s)) + b
  else
    t = t - 2
    return c / 2 * (t * t * ((s + 1) * t + s) + 2) + b
  end
end

local function outInBack(t, b, c, d, s)
  if t &lt; d / 2 then
    return outBack(t * 2, b, c / 2, d, s)
  else
    return inBack((t * 2) - d, b + c / 2, c / 2, d, s)
  end
end

local function outBounce(t, b, c, d)
  t = t / d
  if t &lt; 1 / 2.75 then
    return c * (7.5625 * t * t) + b
  elseif t &lt; 2 / 2.75 then
    t = t - (1.5 / 2.75)
    return c * (7.5625 * t * t + 0.75) + b
  elseif t &lt; 2.5 / 2.75 then
    t = t - (2.25 / 2.75)
    return c * (7.5625 * t * t + 0.9375) + b
  else
    t = t - (2.625 / 2.75)
    return c * (7.5625 * t * t + 0.984375) + b
  end
end

local function inBounce(t, b, c, d)
  return c - outBounce(d - t, 0, c, d) + b
end

local function inOutBounce(t, b, c, d)
  if t &lt; d / 2 then
    return inBounce(t * 2, 0, c, d) * 0.5 + b
  else
    return outBounce(t * 2 - d, 0, c, d) * 0.5 + c * .5 + b
  end
end

local function outInBounce(t, b, c, d)
  if t &lt; d / 2 then
    return outBounce(t * 2, b, c / 2, d)
  else
    return inBounce((t * 2) - d, b + c / 2, c / 2, d)
  end
end

return {
  linear = linear,
  inQuad = inQuad,
  outQuad = outQuad,
  inOutQuad = inOutQuad,
  inCubic  = inCubic ,
  outCubic = outCubic,
  inOutCubic = inOutCubic,
  outInCubic = outInCubic,
  inQuart = inQuart,
  outQuart = outQuart,
  inOutQuart = inOutQuart,
  outInQuart = outInQuart,
  inQuint = inQuint,
  outQuint = outQuint,
  inOutQuint = inOutQuint,
  outInQuint = outInQuint,
  inSine = inSine,
  outSine = outSine,
  inOutSine = inOutSine,
  outInSine = outInSine,
  inExpo = inExpo,
  outExpo = outExpo,
  inOutExpo = inOutExpo,
  outInExpo = outInExpo,
  inCirc = inCirc,
  outCirc = outCirc,
  inOutCirc = inOutCirc,
  outInCirc = outInCirc,
  inElastic = inElastic,
  outElastic = outElastic,
  inOutElastic = inOutElastic,
  outInElastic = outInElastic,
  inBack = inBack,
  outBack = outBack,
  inOutBack = inOutBack,
  outInBack = outInBack,
  inBounce = inBounce,
  outBounce = outBounce,
  inOutBounce = inOutBounce,
  outInBounce = outInBounce,
}
</ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBXC1E20190BD9E475BBFB277FE19AE8BEE">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">ClientAgent</string>
							<string name="ScriptGuid">{18D4E181-116E-4686-BF42-BB72E728B07E}</string>
							<ProtectedString name="Source">-- REMOTE FUNCTION CLIENT AGENT 9-24-14 ALEXNEWTRON
return {
	REQUEST_TARGETPOINT = 1,
	REQUEST_ANIMATIONS = 2,
	REQUEST_PLAYER = 3,
	REQUEST_ANIMATIONS_END = 4,
	SERVER_START = 5,
	SERVER_PLAY_SOUND = 6,
};</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
				</Item>
				<Item class="Animation" referent="RBXDCBA7A103B5A4BA3BF85FC178AE255D5">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=168160500</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Throw</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXEE8C377FCF39426BB1B4565129A8C9DB">
					<Properties>
						<Content name="AnimationId"><url>rbxassetid://810699988</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">R15Throw</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Keyframe" referent="RBXCA60B448572E4BA2887E6017D9C01C2A">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">ThumbnailPose</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="Time">0</float>
					</Properties>
					<Item class="Pose" referent="RBX34BAD1714C8D49AE989BD24F892298FE">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<CoordinateFrame name="CFrame">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<token name="EasingDirection">1</token>
							<token name="EasingStyle">0</token>
							<string name="Name">UpperTorso</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<float name="Weight">0</float>
						</Properties>
						<Item class="Pose" referent="RBXE9409D9275684A349307B43BFEFBECB5">
							<Properties>
								<BinaryString name="AttributesSerialize" />
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>-6.70552254e-08</Y>
									<Z>-5.96046448e-08</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>0.173648193</R11>
									<R12>-0.98480773</R12>
									<R20>0</R20>
									<R21>0.98480773</R21>
									<R22>0.173648193</R22>
								</CoordinateFrame>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<token name="EasingDirection">1</token>
								<token name="EasingStyle">0</token>
								<string name="Name">RightUpperArm</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
								<float name="Weight">1</float>
							</Properties>
							<Item class="Pose" referent="RBX3BB44766ADCD4B7AA72D8F674281F39D">
								<Properties>
									<BinaryString name="AttributesSerialize" />
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>-1.49011612e-08</Y>
										<Z>3.7252903e-09</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>0.98480773</R11>
										<R12>-0.173648179</R12>
										<R20>0</R20>
										<R21>0.173648179</R21>
										<R22>0.98480773</R22>
									</CoordinateFrame>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<token name="EasingDirection">1</token>
									<token name="EasingStyle">0</token>
									<string name="Name">RightLowerArm</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags" />
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBX4525EB91F4574B97B68BD8D1AF0465BF">
									<Properties>
										<BinaryString name="AttributesSerialize" />
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<token name="EasingDirection">1</token>
										<token name="EasingStyle">0</token>
										<string name="Name">RightHand</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags" />
										<float name="Weight">1</float>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="Camera" referent="RBX4A348A69F10B40AAA2B4BE9670B5ADAD">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>2.48276711</X>
							<Y>0.680770457</Y>
							<Z>-2.31075954</Z>
							<R00>-0.565054059</R00>
							<R01>-0.386158198</R01>
							<R02>0.729106247</R02>
							<R10>-1.49011612e-08</R10>
							<R11>0.883707404</R11>
							<R12>0.46803993</R12>
							<R20>-0.82505393</R20>
							<R21>0.264467865</R21>
							<R22>-0.499342442</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>1.02455473</X>
							<Y>-0.255309284</Y>
							<Z>-1.31207478</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		