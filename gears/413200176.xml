<Item class="Model" referent="RBX5FAAA404CAFE47DF916A3EB3B14BB954">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">413200176</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBXE51E20C6E55C4D3D961B6AF5436A516D">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>0</X>
						<Y>-0.400000006</Y>
						<Z>1</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">BadLuckGun</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=412770810</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>-0.727049172</X>
							<Y>15.0602293</Y>
							<Z>-0.28625685</Z>
							<R00>0.118112653</R00>
							<R01>0.290255785</R01>
							<R02>0.949631989</R02>
							<R10>-8.64292957e-08</R10>
							<R11>0.956326127</R11>
							<R12>-0.292301834</R12>
							<R20>-0.993000269</R20>
							<R21>0.0345244631</R21>
							<R22>0.112954222</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBXD706957FFCD64D33BAABDB3F6C4DC805">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-0.727049172</X>
							<Y>15.0602293</Y>
							<Z>-0.28625685</Z>
							<R00>0.118112653</R00>
							<R01>0.290255785</R01>
							<R02>0.949631989</R02>
							<R10>-8.64292957e-08</R10>
							<R11>0.956326127</R11>
							<R12>-0.292301834</R12>
							<R20>-0.993000269</R20>
							<R21>0.0345244631</R21>
							<R22>0.112954222</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>0.75</X>
							<Y>1.64999998</Y>
							<Z>3.29999995</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX5AA9C7EA6684452699CC1D44AC5F61A9">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=412770703</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.600000024</X>
								<Y>0.600000024</Y>
								<Z>0.600000024</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=412770874</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX008B1FD51C9B4FC08D750CF51B963D50">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Fire</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">0.720000029</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">0</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=174915286</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBXDE65E547C9F2497BB983C745189A3E89">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Shatter</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">0</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=122571929</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX8CE63D584CD3409F8BB9790BFF6C1813">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Hit</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">2</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">0</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>rbxassetid://227602004</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX7F93437768CC49A78A43DADE62ED086B">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Whack</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">0.800000012</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">0</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>rbxassetid://101166084</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Script" referent="RBX506B0D77154547EB96FD57817C98705A">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{BFFFD24B-A5AE-444E-AD40-8EB59CA9C8A4}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")
Mesh = Handle:WaitForChild("Mesh")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

local function Create_PrivImpl(objectType)
	if type(objectType) ~= 'string' then
		error("Argument of Create must be a string", 2)
	end
	--return the proxy function that gives us the nice Create'string'{data} syntax
	--The first function call is a function call using Lua's single-string-argument syntax
	--The second function call is using Lua's single-table-argument syntax
	--Both can be chained together for the nice effect.
	return function(dat)
		--default to nothing, to handle the no argument given case
		dat = dat or {}

		--make the object to mutate
		local obj = Instance.new(objectType)
		local parent = nil

		--stored constructor function to be called after other initialization
		local ctor = nil

		for k, v in pairs(dat) do
			--add property
			if type(k) == 'string' then
				if k == 'Parent' then
					-- Parent should always be set last, setting the Parent of a new object
					-- immediately makes performance worse for all subsequent property updates.
					parent = v
				else
					obj[k] = v
				end


			--add child
			elseif type(k) == 'number' then
				if type(v) ~= 'userdata' then
					error("Bad entry in Create body: Numeric keys must be paired with children, got a: "..type(v), 2)
				end
				v.Parent = obj


			--event connect
			elseif type(k) == 'table' and k.__eventname then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create.E\'"..k.__eventname.."\']` must have a function value\
							got: "..tostring(v), 2)
				end
				obj[k.__eventname]:connect(v)


			--define constructor function
			elseif k == t.Create then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create]` should be paired with a constructor function, \
							got: "..tostring(v), 2)
				elseif ctor then
					--ctor already exists, only one allowed
					error("Bad entry in Create body: Only one constructor function is allowed", 2)
				end
				ctor = v


			else
				error("Bad entry ("..tostring(k).." =&gt; "..tostring(v)..") in Create body", 2)
			end
		end

		--apply constructor function if it exists
		if ctor then
			ctor(obj)
		end

		if parent then
			obj.Parent = parent
		end

		--return the completed object
		return obj
	end
end

--now, create the functor:
Create = setmetatable({}, {__call = function(tb, ...) return Create_PrivImpl(...) end})

--and create the "Event.E" syntax stub. Really it's just a stub to construct a table which our Create
--function can recognize as special.
Create.E = function(eventName)
	return {__eventname = eventName}
end


BaseUrl = "http://www.roblox.com/asset/?id="

ProjectileScript = script:WaitForChild("ProjectileScript")

Sounds = {
	Fire = Handle:WaitForChild("Fire"),
	Shatter = Handle:WaitForChild("Shatter"),
	Whack = Handle:WaitForChild("Whack"),
	Hit = Handle:WaitForChild("Hit"),
}

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	Shape = Enum.PartType.Block,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Locked = true,
	CanCollide = true,
	Anchored = false,
}

Ladder = BasePart:Clone()
Ladder.Name = "Ladder"
Ladder.Size = Vector3.new(2, 1.5, 2)
Create("SpecialMesh"){
	Name = "Mesh",
	MeshType = Enum.MeshType.FileMesh,
	MeshId = (BaseUrl .. "412771127"),
	TextureId = (BaseUrl .. "412770970"),
	Scale = Vector3.new(1.125, 1.125, 1.125),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = Ladder,
}


Umbrella = BasePart:Clone()
Umbrella.Name = "Umbrella"
Umbrella.Size = Vector3.new(1, 1, 3)
Create("SpecialMesh"){
	Name = "Mesh",
	MeshType = Enum.MeshType.FileMesh,
	MeshId = (BaseUrl .. "412771199"),
	TextureId = (BaseUrl .. "412771071"),
	Scale = Vector3.new(1.125, 1.125, 1.125),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = Umbrella,
}

Mirror = BasePart:Clone()
Mirror.Name = "Mirror"
Mirror.Size = Vector3.new(0.25, 1.65, 2.5)
Create("SpecialMesh"){
	Name = "Mesh",
	MeshType = Enum.MeshType.FileMesh,
	MeshId = (BaseUrl .. "412771155"),
	TextureId = (BaseUrl .. "412771026"),
	Scale = Vector3.new(5, 5, 5),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = Mirror,
}

UnluckyChance = {Rate = 30, Max = 100}
Gravity = 196.20

ReloadTime = 4

ProjectileReady = true
ToolEquipped = false

Remotes = Tool:WaitForChild("Remotes")
ServerControl = (Remotes:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Remotes,
})
ClientControl = (Remotes:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Remotes,
})

Handle.Transparency = 0
Tool.Enabled = true

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Player and Player.Parent) and true) or false)
end

function Activated()

	local MouseData = InvokeClient("MouseData")
	if not MouseData or not MouseData.Position or not Tool.Enabled or not CheckIfAlive() or not ToolEquipped then
		return
	end
	Tool.Enabled = false

	Sounds.Fire.Pitch = (math.random(700, 850) * 0.001)
	Sounds.Fire:Play()

	local Projectiles = {Ladder, Umbrella, Mirror}

	local ProjectileSelected = Projectiles[math.random(1, #Projectiles)]
	local Projectile = ProjectileSelected:Clone()
	local HitSound
	local UnluckyType = 0
	if ProjectileSelected == Umbrella then
		--UnluckyType = 1
		Projectile.CFrame = (CFrame.new(Projectile.Position) * CFrame.Angles((math.pi / 2), math.rad(math.random(-30, 30)), math.rad(math.random(-360, 360))))
		local Weight = (Projectile:GetMass() * Gravity)
		local BodyGyro = Create("BodyGyro"){
			Name = "BodyGyro",
			D = 500,
			P = 3000,
			maxTorque = Vector3.new(math.huge, math.huge, 0),
			cframe = Projectile.CFrame,
			Parent = Projectile,
		}
		local BodyAngularVelocity = Create("BodyAngularVelocity"){
			Name = "BodyAngularVelocity",
			P = 1250,
			maxTorque = Vector3.new(0, 0, Weight),
			angularvelocity = Vector3.new(0, 0, 1),
			Parent = Projectile,
		}
		local BodyVelocity = Create("BodyVelocity"){
			Name = "BodyVelocity",
			P = 1250,
			maxForce = Vector3.new(0, Weight, 0),
			velocity = Vector3.new(0, -8, 0),
			Parent = Projectile,
		}
		HitSound = Sounds.Hit:Clone()
		HitSound.Pitch = (math.random(2000, 2000) * 0.001)
	else
		if ProjectileSelected == Ladder then
			--UnluckyType = 2
			HitSound = Sounds.Whack:Clone()
			HitSound.Pitch = (math.random(500, 800) * 0.001)
		elseif ProjectileSelected == Mirror then
			--UnluckyType = 3
			HitSound = Sounds.Shatter:Clone()
			HitSound.Pitch = (math.random(900, 1250) * 0.001)
		end
		Projectile.CFrame = (Projectile.CFrame * CFrame.Angles(math.rad(math.random(-360, 360)), math.rad(math.random(-360, 360)), math.rad(math.random(-360, 360))))
	end
	local MaxTypes = 2
	if (Create("Humanoid"){WalkSpeed = -1}).WalkSpeed &lt; 0 then --Nasty hack to enable reversed WalkSpeed when 0 clamp mistake is fixed.
		MaxTypes = 3
	end
	UnluckyType = math.random(1, MaxTypes)
	if HitSound then
		HitSound.Name = "HitSound"
		HitSound.Parent = Projectile
	end

	pcall(function()
		local SpawnPos = (Handle.CFrame * CFrame.new(0, 1, -((Handle.Size.Z / 2) + 0.5)))
		Projectile.CFrame = (SpawnPos * CFrame.Angles(Projectile.CFrame:toEulerAnglesXYZ()))
		SpawnPos = SpawnPos.p
		local TargetPos = MouseData.Position

		local Direction = (TargetPos - SpawnPos)
		--Direction = (Direction - Direction.Unit * 5)

		local DeltaXZSquared = ((Direction.X ^ 2) + (Direction.Z ^ 2))
		local DeltaXZ = math.sqrt(DeltaXZSquared)
		local DeltaY = Direction.Y
		local Alpha = (math.random() * math.pi / 4 + math.pi / 8)
		local Numerator = (-0.5 * Gravity * DeltaXZSquared)
		local Denominator = (math.cos(Alpha) * math.cos(Alpha) * (DeltaY - math.tan(Alpha) * DeltaXZ))
		if Denominator == 0 then
			return
		end
		local MaxSpeed = 120
		local MissileSpeed = math.sqrt(Numerator / Denominator)
		if MissileSpeed &gt; MaxSpeed or tostring(MissileSpeed) == tostring(0 / 0) or tostring(MissileSpeed) == tostring(math.huge) then
			MissileSpeed = MaxSpeed
		end

		local VectorXZ = (MissileSpeed * math.cos(Alpha))
		local VectorY = (MissileSpeed * math.sin(Alpha))
		local VectorX = (VectorXZ * Direction.X / DeltaXZ)
		local VectorZ = (VectorXZ * Direction.Z / DeltaXZ)

		Projectile.CanCollide = true
		Projectile.Velocity = Vector3.new(VectorX, VectorY, VectorZ)

		local Unlucky = math.random(1, UnluckyChance.Max)

		local Values = {
			{Name = "Creator", Class = "ObjectValue", Value = Player},
			{Name = "PushForce", Class = "NumberValue", Value = 20},
			{Name = "Damage", Class = "NumberValue", Value = 0},
			{Name = "Unlucky", Class = "IntValue", Value = ((Unlucky &lt;= UnluckyChance.Rate and UnluckyType) or 0)},
		}

		for i, v in pairs(Values) do
			local Value = Create(v.Class){
				Name = v.Name,
				Value = v.Value,
				Parent = Projectile,
			}
		end

		local ProjectileScriptCopy = ProjectileScript:Clone()
		ProjectileScriptCopy.Disabled = false
		ProjectileScriptCopy.Parent = Projectile

		Debris:AddItem(Projectile, 15)
		Projectile.Parent = game:GetService("Workspace")
	end)
	wait(ReloadTime)
	Tool.Enabled = true
end

function Equipped()
	Character = Tool.Parent
	Humanoid = Character:FindFirstChild("Humanoid")
	Player = Players:GetPlayerFromCharacter(Character)
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
end

function Unequipped()
	ToolEquipped = false
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not ToolEquipped or not CheckIfAlive() then
		return
	end
end

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
					<Item class="Script" referent="RBXFA8BCC1C800D4C6A8C4D4B856142AF14">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">ProjectileScript</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{3E4CA092-A597-40DB-A38A-D7AA5713E59B}</string>
							<ProtectedString name="Source">--Made by Luckymaxer

Part = script.Parent
Mesh = Part:WaitForChild("Mesh")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

OrigSize = Part.Size
OrigScale = Mesh.Scale

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

Creator = Part:WaitForChild("Creator")
PushForce = Part:WaitForChild("PushForce")
Damage = Part:WaitForChild("Damage")
Unlucky = Part:WaitForChild("Unlucky")

HitSound = Part:FindFirstChild("HitSound")

StunScript = script:WaitForChild("StunScript")

AlreadyHit = false

function GetCreator()
	return (((Creator and Creator.Value and Creator.Value:IsA("Player") and Creator.Value.Parent) and Creator.Value) or nil)
end

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

Part.Touched:connect(function(Hit)
	if not Hit or not Hit.Parent or Part.Velocity.Magnitude &lt; 2 or AlreadyHit then
		return
	end
	local CreatorPlayer = GetCreator()
	if not CreatorPlayer then
		return
	end
	local Character = Hit.Parent
	if Character:IsA("Hat") or Character:IsA("Tool") then
		Character = Character.Parent
	end
	local Humanoid = Character:FindFirstChild("Humanoid")
	local Torso = Character:FindFirstChild("HumanoidRootPart")
	if not Humanoid or Humanoid.Health == 0 or not Torso then
		return
	end
	local Player = Players:GetPlayerFromCharacter(Character)
	if Player and (Player == CreatorPlayer or IsTeamMate(CreatorPlayer, Player)) then
		return
	end

	AlreadyHit = true

	Torso.Velocity = (CFrame.new(Part.Position, Torso.Position).lookVector * PushForce.Value)

	for i, v in pairs(Part:GetChildren()) do
		if string.find(string.lower(v.ClassName), string.lower("Body")) then
			v:Destroy()
		end
	end

	if HitSound then
		HitSound:Play()
	end

	local StunScriptCopy = StunScript:Clone()
	local Values = {
		{Name = "Direction", Class = "Vector3Value", Value = CFrame.new(Vector3.new(Part.Position.X, Torso.Position.Y, Part.Position.Z), Torso.Position).lookVector},
		{Name = "Force", Class = "NumberValue", Value = math.random(25, 50)},
		{Name = Unlucky.Name, Class = Unlucky.ClassName, Value = Unlucky.Value},
	}
	for i, v in pairs(Values) do
		local Value = Create(v.Class){
			Name = v.Name,
			Value = v.Value,
			Parent = StunScriptCopy,
		}
	end
	StunScriptCopy.Disabled = false
	StunScriptCopy.Parent = Character

	UntagHumanoid(Humanoid)
	TagHumanoid(Humanoid, CreatorPlayer)
	Humanoid:TakeDamage(Damage.Value)
end)</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
						<Item class="Script" referent="RBX9FC9B1B93BF34299AC7C5D587DACA318">
							<Properties>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null /></Content>
								<string name="Name">StunScript</string>
								<token name="RunContext">0</token>
								<string name="ScriptGuid">{32E09E5A-E025-4A6E-A1F8-F54889CF8BDC}</string>
								<ProtectedString name="Source">--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Character = script.Parent
Humanoid = Character:FindFirstChild("Humanoid")
HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")

ClientScript = script:FindFirstChild("ClientScript")

EffectsBin = script:FindFirstChild("EffectsBin")
Effects = {}
if EffectsBin then
	for i, v in pairs(EffectsBin:GetChildren()) do
		Effects[v.Name] = v:Clone()
	end
end

Direction = script:FindFirstChild("Direction")
Force = script:FindFirstChild("Force")
Unlucky = script:FindFirstChild("Unlucky")

if Humanoid and Humanoid.Health &gt; 0 and HumanoidRootPart then

	if Unlucky and Unlucky.Value ~= 0 and not Character:FindFirstChild("BadLuckEffected") then
		if EffectsBin then
			local Effect
			if Unlucky.Value == 1 then
				Effect = Effects.Trippy:Clone()
			elseif Unlucky.Value == 2 then
				Effect = Effects.Blur:Clone()
			elseif Unlucky.Value == 3 then
				Effect = Effects.Confusion:Clone()
			end
			if Effect then
				local BadLuckEffected = Create("BoolValue"){
					Name = "BadLuckEffected",
				}
				Debris:AddItem(BadLuckEffected, 15)
				BadLuckEffected.Parent = Character
				if ClientScript then
					Player = Players:GetPlayerFromCharacter(Character)
					if Player then
						local ClientScriptCopy = ClientScript:Clone()
						ClientScriptCopy.Disabled = false
						ClientScriptCopy.Parent = Character
					end
				end
				Effect.Disabled = false
				Effect.Parent = Character
			end
		end
	end
	--Humanoid.Sit = true
	Humanoid.PlatformStand = true
	Humanoid:ChangeState(Enum.HumanoidStateType.Ragdoll)
	if Direction and Force then
		HumanoidRootPart.Velocity = (Direction.Value * Force.Value)
	else
		HumanoidRootPart.Velocity = ((HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(math.random(-360, 360)), 0)).lookVector * math.random(15, 35))
	end
	wait(3)
	Humanoid.PlatformStand = false
	Humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
end

Debris:AddItem(script, 0.5)</ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
							</Properties>
							<Item class="Folder" referent="RBX7C8710D88CBA44B78CADCB9CDFF517E9">
								<Properties>
									<BinaryString name="AttributesSerialize" />
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<string name="Name">EffectsBin</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags" />
								</Properties>
								<Item class="Script" referent="RBXD025CFBF85194F9DA75CDCD8F9C0C81F">
									<Properties>
										<BinaryString name="AttributesSerialize" />
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Disabled">true</bool>
										<Content name="LinkedSource"><null /></Content>
										<string name="Name">Confusion</string>
										<token name="RunContext">0</token>
										<string name="ScriptGuid">{3DC23F89-DAF7-492A-92B9-B77112109A21}</string>
										<ProtectedString name="Source">--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Character = script.Parent
Humanoid = Character:FindFirstChild("Humanoid")

if Humanoid and Humanoid.Health &gt; 0 then
	Humanoid.WalkSpeed = -10
	wait(10)
	Humanoid.WalkSpeed = 16
end

Debris:AddItem(script, 0.5)</ProtectedString>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags" />
									</Properties>
								</Item>
								<Item class="LocalScript" referent="RBXBF5B2CA3104D46E786B466CA17D348E2">
									<Properties>
										<BinaryString name="AttributesSerialize" />
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Disabled">true</bool>
										<Content name="LinkedSource"><null /></Content>
										<string name="Name">Blur</string>
										<token name="RunContext">0</token>
										<string name="ScriptGuid">{815FF762-E99D-4BC0-B2BE-8754C81E2715}</string>
										<ProtectedString name="Source">--Made by Luckymaxer

wait()

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Player = Players.LocalPlayer

Camera = game:GetService("Workspace").CurrentCamera

Character = Player.Character
Humanoid = Character:FindFirstChild("Humanoid")

function TweenNumber(Object, Property, Goal, Time)
	Time = (Time * 30)
	local Increment = ((Goal - Object[Property]) / Time)
	for i = 1, Time do
		Object[Property] = (Object[Property] + Increment)
		wait()
	end
	return true
end

if Humanoid then
	Humanoid.WalkSpeed = 10
	local BlurWorked = false
	pcall(function()
		local BlurEffect = Create("BlurEffect"){
			Name = "Blur",
			Size = 0,
			Enabled = true,
		}

		Debris:AddItem(BlurEffect, 15)

		BlurEffect.Parent = Camera

		TweenNumber(BlurEffect, "Size", 35, 1.5)
		wait(7)
		TweenNumber(BlurEffect, "Size", 0, 3)
		if BlurEffect and BlurEffect.Parent then
			BlurEffect:Destroy()
		end
		BlurWorked = true
	end)
	if not BlurWorked then
		wait(12)
	end
	Humanoid.WalkSpeed = 16
end

Debris:AddItem(script, 0.5)</ProtectedString>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags" />
									</Properties>
								</Item>
								<Item class="Script" referent="RBXC459F8ECD6BE4BA293BDB293DA5F233A">
									<Properties>
										<BinaryString name="AttributesSerialize" />
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Disabled">true</bool>
										<Content name="LinkedSource"><null /></Content>
										<string name="Name">Trippy</string>
										<token name="RunContext">0</token>
										<string name="ScriptGuid">{6AA92F32-A2F7-49D0-B937-7CC9870B664A}</string>
										<ProtectedString name="Source">--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Character = script.Parent
Humanoid = Character:FindFirstChild("Humanoid")
HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")

if Humanoid and Humanoid.Health &gt; 0 and HumanoidRootPart then
	local Start = tick()
	while (tick() - Start) &lt; 15 do
		Humanoid.PlatformStand = true
		Humanoid:ChangeState(Enum.HumanoidStateType.Ragdoll)
		HumanoidRootPart.Velocity = (HumanoidRootPart.CFrame.lookVector * 15)
		wait(2)
		Humanoid.PlatformStand = false
		Humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
	end
end

Debris:AddItem(script, 0.5)</ProtectedString>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags" />
									</Properties>
								</Item>
							</Item>
							<Item class="LocalScript" referent="RBX4182B0ED0B5C46878ED7421746832E4A">
								<Properties>
									<BinaryString name="AttributesSerialize" />
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Disabled">true</bool>
									<Content name="LinkedSource"><null /></Content>
									<string name="Name">ClientScript</string>
									<token name="RunContext">0</token>
									<string name="ScriptGuid">{48129453-2BE5-4C80-AC56-E4374073DEB8}</string>
									<ProtectedString name="Source">--Made by Luckymaxer

wait()

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Player = Players.LocalPlayer
PlayerGui = Player:FindFirstChild("PlayerGui")

UnluckyText = script:WaitForChild("UnluckyText")

function TweenNumber(Current, Goal, Time)
	return ((Goal - Current) / Time)
end

function TweenNumber9(Object, Property, Goal, Time)
	Time = (Time * 30)
	local Increment = ((Goal - Object[Property]) / Time)
	for i = 1, Time do
		Object[Property] = (Object[Property] + Increment)
		wait()
	end
	return true
end

if PlayerGui and UnluckyText then
	local Messages = {
		"You are unlucky!",
		"Bad luck is upon you...",
		"Oh no! You have bad luck!",
		"Not so lucky anymore...",
		"Just your luck!",
		"You have run out of luck!",
		"Looks like your luck has run out!",
	}
	local Message = Messages[math.random(1, #Messages)]
	local Colors = {
		{Front = Vector3.new(170, 0, 255), Back = Vector3.new(170, 170, 255)},
		{Front = Vector3.new(0, 255, 0), Back = Vector3.new(0, 170, 0)},
		{Front = Vector3.new(255, 170, 0), Back = Vector3.new(255, 85, 0)},
	}
	for i, v in pairs(Colors) do
		for ii, vv in pairs(v) do
			local Color = (vv / 255)
			Colors[i][ii] = Color3.new(Color.X, Color.Y, Color.Z)
		end
	end
	local Color = Colors[math.random(1, #Colors)]
	local UnluckyTextCopy = UnluckyText:Clone()
	local Text = UnluckyTextCopy.Text
	Text.Text = Message
	Text.Background.Text = Message
	Text.TextColor3 = Color.Front
	Text.TextStrokeColor3 = Color.Back
	Text.Background.TextColor3 = Text.TextStrokeColor3
	Text.Background.TextStrokeColor3 = Text.Background.TextColor3
	Text.Visible = true
	Text.Position = UDim2.new(0.25, 0, -Text.Size.Y.Scale, -36, 0)
	for ii, vv in pairs({Text, Text.Background}) do
		vv.TextTransparency = 1
		vv.TextStrokeTransparency = 1
	end
	Debris:AddItem(UnluckyTextCopy, 10)
	UnluckyTextCopy.Parent = PlayerGui
	Spawn(function()
		local Time = 3.5
		Time = (Time * 30)
		local TextIncrement = TweenNumber(Text.TextTransparency, 0, Time)
		local TextStrokeIncrement = TweenNumber(Text.TextStrokeTransparency, 0.3, Time)
		for i = 1, Time do
			for ii, vv in pairs({Text, Text.Background}) do
				vv.TextTransparency = (vv.TextTransparency + TextIncrement)
				vv.TextStrokeTransparency = (vv.TextStrokeTransparency + TextStrokeIncrement)
			end
			wait()
		end
	end)
	Text:TweenPosition(
		UDim2.new(Text.Position.X.Scale, Text.Position.X.Offset, 0.15, 0),
		Enum.EasingDirection.InOut,
		Enum.EasingStyle.Linear,
		1,
		true,
		(function()
		end)
	)
	wait(5)
	Spawn(function()
		local Time = 1.5
		Time = (Time * 30)
		local TextIncrement = TweenNumber(Text.TextTransparency, 1, Time)
		local TextStrokeIncrement = TweenNumber(Text.TextStrokeTransparency, 1, Time)
		for i = 1, Time do
			for ii, vv in pairs({Text, Text.Background}) do
				vv.TextTransparency = (vv.TextTransparency + TextIncrement)
				vv.TextStrokeTransparency = (vv.TextStrokeTransparency + TextStrokeIncrement)
			end
			wait()
		end
	end)
end</ProtectedString>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags" />
								</Properties>
								<Item class="ScreenGui" referent="RBX327D891A8FB045B6B64E473775054ADC">
									<Properties>
										<BinaryString name="AttributesSerialize" />
										<bool name="AutoLocalize">true</bool>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipToDeviceSafeArea">true</bool>
										<bool name="DefinesCapabilities">false</bool>
										<int name="DisplayOrder">0</int>
										<bool name="Enabled">true</bool>
										<string name="Name">UnluckyText</string>
										<bool name="ResetOnSpawn">true</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<token name="SafeAreaCompatibility">1</token>
										<token name="ScreenInsets">2</token>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags" />
										<token name="ZIndexBehavior">0</token>
									</Properties>
									<Item class="TextLabel" referent="RBX639595AF471B4352A5CF31E642A3E21F">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize" />
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0.105882362</R>
												<G>0.164705887</G>
												<B>0.207843155</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">1</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<Font name="FontFace">
												<Family><url>rbxasset://fonts/families/Arial.json</url></Family>
												<Weight>400</Weight>
												<Style>Normal</Style>
												<CachedFaceId><url>rbxasset://fonts/Arimo-Regular.ttf</url></CachedFaceId>
											</Font>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">0</int>
											<float name="LineHeight">1</float>
											<string name="LocalizationMatchIdentifier" />
											<string name="LocalizationMatchedSourceText" />
											<int name="MaxVisibleGraphemes">-1</int>
											<string name="Name">Text</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<string name="OpenTypeFeatures" />
											<UDim2 name="Position">
												<XS>0.25</XS>
												<XO>0</XO>
												<YS>0.150000006</YS>
												<YO>0</YO>
											</UDim2>
											<bool name="RichText">false</bool>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>0.5</XS>
												<XO>0</XO>
												<YS>0.100000001</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags" />
											<string name="Text">Bad luck is upon you!</string>
											<Color3 name="TextColor3">
												<R>1</R>
												<G>0.666666687</G>
												<B>0</B>
											</Color3>
											<token name="TextDirection">0</token>
											<bool name="TextScaled">true</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">
												<R>1</R>
												<G>0.333333343</G>
												<B>0</B>
											</Color3>
											<float name="TextStrokeTransparency">0.300000012</float>
											<float name="TextTransparency">0</float>
											<token name="TextTruncate">0</token>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">false</bool>
											<int name="ZIndex">2</int>
										</Properties>
										<Item class="TextLabel" referent="RBX7FA6A2000270414B97C33F5294177E6E">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<BinaryString name="AttributesSerialize" />
												<bool name="AutoLocalize">true</bool>
												<token name="AutomaticSize">0</token>
												<Color3 name="BackgroundColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">
													<R>0.105882362</R>
													<G>0.164705887</G>
													<B>0.207843155</B>
												</Color3>
												<token name="BorderMode">0</token>
												<int name="BorderSizePixel">1</int>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<bool name="ClipsDescendants">false</bool>
												<bool name="DefinesCapabilities">false</bool>
												<bool name="Draggable">false</bool>
												<Font name="FontFace">
													<Family><url>rbxasset://fonts/families/Arial.json</url></Family>
													<Weight>400</Weight>
													<Style>Normal</Style>
													<CachedFaceId><url>rbxasset://fonts/Arimo-Regular.ttf</url></CachedFaceId>
												</Font>
												<bool name="Interactable">true</bool>
												<int name="LayoutOrder">0</int>
												<float name="LineHeight">1</float>
												<string name="LocalizationMatchIdentifier" />
												<string name="LocalizationMatchedSourceText" />
												<int name="MaxVisibleGraphemes">-1</int>
												<string name="Name">Background</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<string name="OpenTypeFeatures" />
												<UDim2 name="Position">
													<XS>0.00499999989</XS>
													<XO>0</XO>
													<YS>0.0500000007</YS>
													<YO>0</YO>
												</UDim2>
												<bool name="RichText">false</bool>
												<Ref name="RootLocalizationTable">null</Ref>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<token name="SelectionBehaviorDown">0</token>
												<token name="SelectionBehaviorLeft">0</token>
												<token name="SelectionBehaviorRight">0</token>
												<token name="SelectionBehaviorUp">0</token>
												<bool name="SelectionGroup">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<int name="SelectionOrder">0</int>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags" />
												<string name="Text">Bad luck is upon you!</string>
												<Color3 name="TextColor3">
													<R>1</R>
													<G>0.333333343</G>
													<B>0</B>
												</Color3>
												<token name="TextDirection">0</token>
												<bool name="TextScaled">true</bool>
												<float name="TextSize">14</float>
												<Color3 name="TextStrokeColor3">
													<R>1</R>
													<G>0.333333343</G>
													<B>0</B>
												</Color3>
												<float name="TextStrokeTransparency">0.300000012</float>
												<float name="TextTransparency">0</float>
												<token name="TextTruncate">0</token>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="Folder" referent="RBXE893E2D1C4EC4F06BD09BB0BEC1C9215">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Remotes</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
					<Item class="RemoteFunction" referent="RBXDD8796228614462CA4243FACBF00E59D">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">ServerControl</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
					<Item class="RemoteFunction" referent="RBXEACDE91295064305B85DAD2F1F38ADF7">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">ClientControl</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBX91E33AA6397D45F299A6CD0CE0D48A39">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{4FC6F1CB-353F-450C-9884-E4AE540C9A1D}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
UserInputService = game:GetService("UserInputService")

Animations = {}

Remotes = Tool:WaitForChild("Remotes")
ServerControl = Remotes:WaitForChild("ServerControl")
ClientControl = Remotes:WaitForChild("ClientControl")

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() or not mode or not value then
		return
	end
	if mode == "PlayAnimation" then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	Player = Players:GetPlayerFromCharacter(Character)
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Mouse
	ToolEquipped = true
end

function Unequipped()
	ToolEquipped = false
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}
end

function InvokeServer(mode, value)
	local ServerReturn
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if not mode or not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "MouseData" then
		return ((PlayerMouse and {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}) or nil)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXECEE38DF1A1948698BB5F1B4772C455A">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MouseIcon</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{C4114224-40D6-46FE-9206-F10DF0FD2C80}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Camera" referent="RBX995D725170BE43968AF998F3252A8028">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>-2.94274139</X>
							<Y>15.2335243</Y>
							<Z>1.67056262</Z>
							<R00>0.733942807</R00>
							<R01>-0.0354520455</R01>
							<R02>-0.67828548</R02>
							<R10>1.86264515e-09</R10>
							<R11>0.998636961</R11>
							<R12>-0.0521958992</R12>
							<R20>0.679211318</R20>
							<R21>0.038308803</R21>
							<R22>0.732942343</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">55</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>-1.68791366</X>
							<Y>15.3300867</Y>
							<Z>0.31461966</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		