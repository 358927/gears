<Item class="Model" referent="RBXB0D1665C611E41EF97E8DEE71D5D5F65">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">110702207</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBXE2B4D5C118C142A48D382F2D880B92F7">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>0</X>
						<Y>-1</Y>
						<Z>-0.5</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">GreenDragon</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=112601422</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>0</X>
							<Y>17.3299999</Y>
							<Z>22.0100002</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX47B0247688F7417B96410BB3A7FCF178">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>0</X>
							<Y>17.3299999</Y>
							<Z>22.0100002</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1.20000005</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX599C3A139BB14CFF9F34A6501CC22578">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=112601269</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1.29999995</X>
								<Y>1.29999995</Y>
								<Z>1.29999995</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=112601344</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBX6C4C70F427814B4ABF85D6488F1A2463">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">SummonOnce</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{2B6088B7-92DD-4CC4-9898-BECD85BEEC1C}</string>
						<ProtectedString name="Source">-----------------
--| Constants |--
-----------------

local PET_ID = 112599423
local AI_SCRIPT_NAME = 'DragonAi'

--------------------
--| WaitForChild |--
--------------------

-- Waits for parent.child to exist, then returns it
local function WaitForChild(parent, childName)
	assert(parent, "ERROR: WaitForChild: parent is nil")
	while not parent:FindFirstChild(childName) do parent.ChildAdded:wait() end
	return parent[childName]
end

-----------------
--| Variables |--
-----------------

local InsertService = Game:GetService('InsertService')
local PlayersService = Game:GetService('Players')

local MyPlayer = PlayersService.LocalPlayer

local Tool = script.Parent
local ToolHandle = Tool.Handle

local AiScript = WaitForChild(script, AI_SCRIPT_NAME)
local CreatorTag = WaitForChild(AiScript, 'creator')

local Pet = nil
local MyHumanoid = nil

-----------------
--| Functions |--
-----------------

local function OnEquipped()
	CreatorTag.Value = MyPlayer
	if MyPlayer.Character then
		MyHumanoid = MyPlayer.Character:FindFirstChild('Humanoid')
	end
end

local function OnActivated()
	if not Pet then -- LoadAsset failed, try again
		Pet = InsertService:LoadAsset(PET_ID):GetChildren()[1]
	end
	if Pet and Tool.Enabled and MyHumanoid and MyHumanoid.Health &gt; 0 then
		Tool.Enabled = false

		-- Place the Pet
		Pet.Parent = Workspace
		Pet:MoveTo(ToolHandle.Position)

		-- Give Pet the AiScript
		AiScript.Parent = Pet
		AiScript.Disabled = false

		Tool:Destroy()
	end
end

--------------------
--| Script Logic |--
--------------------

Pet = InsertService:LoadAsset(PET_ID):GetChildren()[1]

Tool.Equipped:connect(OnEquipped)
Tool.Activated:connect(OnActivated)
</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
					<Item class="Script" referent="RBXDD5F02BDC043477EBB8DB4A0F40016FA">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">DragonAi</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{DA6C89D8-F1E8-464B-B019-7A476269A310}</string>
							<ProtectedString name="Source">-----------------
--| Constants |--
-----------------

local FPS = 30 -- FramesPerSecond
local TURN_RATE = 0.1 -- Can range from 0 to 1
local FIREBALL_SPEED = 70 -- Speed of the projectile
local FIREBALL_NAME = 'FireBall' -- Name of the projectile
local FIREBALL_LENGTH = 2 -- Seconds until the projectile is removed
local FIREBALL_TIME_BETWEEN = 0.2 -- Seconds between each projectile launch
local FIREBALL_NUMBER = 7 -- Number of projectiles to launch when breathing fire
local PET_FLIGHT_SPEED = 40 -- Speed of the pet
local PET_ATTACK_SPEED = 30 -- Speed of the pet when attacking

--------------------
--| WaitForChild |--
--------------------

-- Waits for parent.child to exist, then returns it
local function WaitForChild(parent, childName)
	assert(parent, "ERROR: WaitForChild: parent is nil")
	while not parent:FindFirstChild(childName) do parent.ChildAdded:wait() end
	return parent[childName]
end

-----------------
--| Variables |--
-----------------

local DebrisService = Game:GetService('Debris')
local PlayersService = Game:GetService('Players')

local Pet = script.Parent
local PetBody = WaitForChild(Pet, 'Body')
local LeftShoulderJoint = WaitForChild(PetBody, 'Left Shoulder')
local RightShoulderJoint = WaitForChild(PetBody, 'Right Shoulder')
local NeckJoint = WaitForChild(PetBody, 'Neck')
local PetHead = WaitForChild(Pet, 'Head')

local CreatorTag = WaitForChild(script, 'creator')
local Fire = WaitForChild(script, 'Fire')
local FireBallScript = WaitForChild(script, 'FireBall')
local SummonSound = WaitForChild(script, 'Summon')

local MyPlayer = CreatorTag.Value

local TargetPoint = PetBody.Position
local MoveAmount = Vector3.new()

local Flapping, Waiting, Down = false, false, true
local LastWingAngle = 0

local FireBall = nil

-------------------------
--| Utility Functions |--
-------------------------

-- Returns the closest living Humanoid to position who isn't in excludeList
local function FindClosestHumanoid(position, excludeList) -- (Vector3, table)
	if not position then print("Need a Vector3 position") return nil end

	-- Change list values to keys so we can use indexing
	local excludeSet = {}
	if excludeList and type(excludeList) == "table" then
		for _, l in ipairs(excludeList) do
			excludeSet[l] = true
		end
	end

	-- Search through Workspace children
	local closestHumanoid = nil
	for _, child in pairs(Game.Workspace:GetChildren()) do
		if (child and child:FindFirstChild("Humanoid") and child.Humanoid.Health &gt; 0 and not excludeSet[child.Humanoid])
		and (not closestHumanoid or (child.Humanoid.Torso.Position - position).magnitude &lt; (closestHumanoid.Torso.Position - position).magnitude) then
			closestHumanoid = child.Humanoid
		end
	end
	return closestHumanoid --NOTE: Can be nil
end

-- Returns true if a is within epsilon of b
local function IsClose(a, b, epsilon)
	epsilon = epsilon or 0.01
	return (a &lt;= b + epsilon and a &gt;= b - epsilon)
end

-----------------------
--| Other Functions |--
-----------------------

local function OnPetPartTouched(otherPart)
	if otherPart and otherPart.Name ~= FIREBALL_NAME and not otherPart:IsDescendantOf(MyPlayer.Character) then
		--print("Valid Touch:", otherPart)

	end
end

local function SetFlyTarget(position, duration)
	TargetPoint = position
	MoveAmount = (position - PetBody.Position) / (duration * FPS)
end

local function LaunchFireBall()
	local fireBallClone = FireBall:Clone()
	DebrisService:AddItem(fireBallClone, FIREBALL_LENGTH)
	fireBallClone.Parent = Workspace
	fireBallClone.CFrame = PetHead.CFrame
	fireBallClone.Velocity = fireBallClone.CFrame.lookVector * FIREBALL_SPEED
end

local function BreatheFire()
	Spawn(function()
		SummonSound:Play()
		NeckJoint.DesiredAngle = 0.3
		wait(0.5)
		for i = 1, FIREBALL_NUMBER do
			LaunchFireBall()
			wait(FIREBALL_TIME_BETWEEN)
		end
		NeckJoint.DesiredAngle = 0
		wait(0.5)
	end)
end

local function Initialize()
	CreatorTag.Parent = nil
	SummonSound.Parent = PetHead

	BreatheFire()

	-- Create the initial FireBall to clone from
	FireBall = Instance.new('Part')
	FireBall.Name = FIREBALL_NAME
	FireBall.Transparency = 1
	FireBall.CanCollide = false
	FireBall.TopSurface = Enum.SurfaceType.Smooth
	FireBall.BottomSurface = Enum.SurfaceType.Smooth
	FireBall.Size = Vector3.new(4, 4, 4)
	Instance.new("BodyForce", FireBall).force = Vector3.new(0, FireBall:GetMass() * 196.2, 0) -- Antigravity
	Fire:Clone().Parent = FireBall -- Fire it up
	CreatorTag:Clone().Parent = FireBall -- Attach creator tag
	local ballScriptClone = FireBallScript:Clone()
	ballScriptClone.Parent = FireBall
	ballScriptClone.Disabled = false

	-- Connect to all pet parts
	for _, child in pairs(Pet:GetChildren()) do
		if child:IsA('BasePart') then
			child.Touched:connect(OnPetPartTouched)
		end
	end

	-- Start flying upwards
	local upLookVector = (Vector3.new(0, 1, 0) + PetBody.CFrame.lookVector).unit
	SetFlyTarget(PetBody.Position + (upLookVector * 100), 4)
	Flapping = true
end

local function DiveBomb()
	local humanoid = FindClosestHumanoid(PetBody.Position, {MyPlayer.Character.Humanoid})
	if humanoid then
		local target = humanoid.Parent.Torso.Position
		local direction = (target - PetBody.Position).unit
		local verticalOffset = Vector3.new(0, 1, 0) * 10
		local horizontalOffset = Vector3.new(direction.x, 0, direction.z) * 50
		local beforePoint = target - horizontalOffset + verticalOffset
		local timeToDestination = (beforePoint - PetBody.Position).magnitude / PET_ATTACK_SPEED
		SetFlyTarget(beforePoint, timeToDestination)
		wait(timeToDestination * 0.8)
		BreatheFire()
		wait(timeToDestination * 0.2)
		local afterPoint = target + horizontalOffset + verticalOffset
		timeToDestination = (afterPoint - PetBody.Position).magnitude / PET_ATTACK_SPEED
		SetFlyTarget(afterPoint, timeToDestination)
	end
end

--------------------
--| Script Logic |--
--------------------

Initialize()

Spawn(function()
	while true do
		wait(math.random(5, 15))
		DiveBomb()
	end
end)

local myHead = MyPlayer.Character.Head
local myHumanoid = MyPlayer.Character.Humanoid

myHumanoid.Died:connect(function()
	myHumanoid = nil
end)

PlayersService.PlayerRemoving:connect(function(player)
	if player == MyPlayer then
		myHumanoid = nil
	end
end)

while PetBody and PetHead and TargetPoint and myHead and myHumanoid do
	if (TargetPoint - PetBody.Position).magnitude &gt; 5 then -- Incrementally fly toward TargetPoint
		local newPosition = PetBody.Position + MoveAmount
		local direction = (TargetPoint - PetBody.Position).unit
		local newLookVector = PetBody.CFrame.lookVector:Lerp(direction, TURN_RATE)
		PetBody.CFrame = CFrame.new(newPosition, newPosition + newLookVector)
	else -- Made it to TargetPoint, pick a new target
		print("Made it to target, picking a new random one")
		local newTarget = nil
		local distance = 0
		while distance &lt; 80 do
			local angle = 2 * math.pi * math.random()
			local radius = math.random(50, 150)
			local height = math.random(100, 150)
			local x, z = radius * math.cos(angle), radius * math.sin(angle)
			newTarget = myHead.Position + Vector3.new(x, height, z)
			distance = (newTarget - TargetPoint).magnitude
		end
		SetFlyTarget(newTarget, distance / PET_FLIGHT_SPEED)
	end

	if Flapping then -- Update wings
		if not Waiting then
			local angle = Down and 0.5 or -0.4
			LeftShoulderJoint.DesiredAngle = angle
			RightShoulderJoint.DesiredAngle = angle
			LastWingAngle = angle
			Waiting = true
		else -- Waiting for wings to reach desired angle
			if IsClose(LeftShoulderJoint.CurrentAngle, LastWingAngle) or IsClose(RightShoulderJoint.CurrentAngle, LastWingAngle) then
				Down = not Down
				Waiting = false
			end
		end
	end

	wait(1 / FPS)
end

DebrisService:AddItem(Pet, 0)
</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
						<Item class="Fire" referent="RBX84CBBD9684F849568B3FAC8FB3191F32">
							<Properties>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<Color3 name="Color">
									<R>0.666666687</R>
									<G>1</G>
									<B>0</B>
								</Color3>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Enabled">true</bool>
								<string name="Name">Fire</string>
								<Color3 name="SecondaryColor">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
								<float name="TimeScale">1</float>
								<float name="heat_xml">9</float>
								<float name="size_xml">5</float>
							</Properties>
						</Item>
						<Item class="ObjectValue" referent="RBXC375DC6DA1334DD38FBB6EE83202BC17">
							<Properties>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">creator</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
								<Ref name="Value">null</Ref>
							</Properties>
						</Item>
						<Item class="Script" referent="RBX2E757199040449968ED5BAD7468C13E2">
							<Properties>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null /></Content>
								<string name="Name">FireBall</string>
								<token name="RunContext">0</token>
								<string name="ScriptGuid">{668E7C8D-14CC-466E-BB1B-C0528CC013C3}</string>
								<ProtectedString name="Source">-----------------
--| Constants |--
-----------------

local HAT_ID = 36883367
local BODY_MESH_IDS = {36780113, 36780032, 36780156, 36780079, 36780195}
local BODY_TEXTURE_ID = 36780292

--------------------
--| WaitForChild |--
--------------------

-- Waits for parent.child to exist, then returns it
local function WaitForChild(parent, childName)
	assert(parent, "ERROR: WaitForChild: parent is nil")
	while not parent:FindFirstChild(childName) do parent.ChildAdded:wait() end
	return parent[childName]
end

-----------------
--| Variables |--
-----------------

local InsertService = Game:GetService('InsertService')
local DebrisService = Game:GetService('Debris')

local Ball = script.Parent

local CreatorTag = WaitForChild(Ball, 'creator')
local Fire = WaitForChild(Ball, 'Fire')

local Connection = nil

-----------------
--| Functions |--
-----------------

-- Returns the ancestor that contains a Humanoid, if it exists
local function FindCharacterAncestor(subject)
	if subject and subject ~= Workspace then
		local humanoid = subject:FindFirstChild('Humanoid')
		if humanoid then
			return subject, humanoid
		else
			return FindCharacterAncestor(subject.Parent)
		end
	end
	return nil
end

-- Removes any old creator tags and applies the new one to target
local function ApplyTags(target)
	while target:FindFirstChild('creator') do
		target.creator:Destroy()
	end
	local creatorTagClone = CreatorTag:Clone()
	creatorTagClone.Parent = target
	DebrisService:AddItem(creatorTagClone, 1.5)
end

-- Turns the character into a Skeleton!
local function Skeletonify(character)
	InsertService:LoadAsset(HAT_ID):GetChildren()[1].Parent = character
	for i, meshId in ipairs(BODY_MESH_IDS) do
		local characterMesh = Instance.new('CharacterMesh')
		characterMesh.BodyPart = i
		characterMesh.MeshId = meshId
		characterMesh.OverlayTextureId = BODY_TEXTURE_ID
		characterMesh.Parent = character
	end
end

-- Sets the character ablaze!
local function Ignite(character, fire)
	fire = fire or Instance.new('Fire')
	for _, child in pairs(character:GetChildren()) do
		if child:IsA('BasePart') then
			local fClone = fire:Clone()
			fClone.Parent = child
			DebrisService:AddItem(fClone, 3.0)
		end
	end
end

-- When the ball touches an enemy, turn them into a dead skeleton
local function OnTouched(otherPart)
	if otherPart and otherPart.Name ~= Ball.Name then
		local character, humanoid = FindCharacterAncestor(otherPart.Parent)
		if character and humanoid and humanoid.Health &gt; 0 then
			local myPlayer = CreatorTag.Value
			if character ~= myPlayer.Character and not (character:FindFirstChild('creator') and character.creator.Value ~= myPlayer) then
				-- (Only do the following if the character isn't myPlayer and they haven't already been converted)
				ApplyTags(humanoid)
				--	Skeletonify(character)
				Ignite(character, Fire)
				humanoid:TakeDamage(13)
				Ball:Destroy()
			end
		end
	end
end

--------------------
--| Script Logic |--
--------------------

Ball.Touched:connect(OnTouched)
</ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
							</Properties>
						</Item>
						<Item class="Sound" referent="RBXBE6B1678AABB40F1A610E4B6EE0E35F0">
							<Properties>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="IsMutedForCapture">false</bool>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">Summon</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<float name="RollOffMaxDistance">10000</float>
								<float name="RollOffMinDistance">10</float>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>http://www.roblox.com/asset/?id=86939835</url></Content>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
								<double name="TimePosition">0</double>
								<float name="Volume">1</float>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Camera" referent="RBXEEFBF78C943048229BF3C0B71A0A4B29">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>-1.25942171</X>
							<Y>17.8269176</Y>
							<Z>19.3353653</Z>
							<R00>-0.904832006</R00>
							<R01>0.0710009933</R01>
							<R02>-0.419807136</R02>
							<R10>-7.45058149e-09</R10>
							<R11>0.985997677</R11>
							<R12>0.166759446</R12>
							<R20>0.425768971</R20>
							<R21>0.150889277</R21>
							<R22>-0.892162085</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>0</X>
							<Y>17.3266392</Y>
							<Z>22.0118523</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		