<Item class="Model" referent="RBXF985822C0D744C82887E7560F5B5DAE7">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">1360078533</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBXE498F2CD66114843BD89207EC4D10A93">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>1.39999998</X>
						<Y>1.75</Y>
						<Z>-1.25</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>-3.9340253e-07</R12>
						<R20>0</R20>
						<R21>3.9340253e-07</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">RedScifiRoped</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>rbxassetid://1363069649</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>-7.6899991</X>
							<Y>4.30000019</Y>
							<Z>-0.970000029</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBXA075AC8E48EE4EC597342D85958B76AA">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-7.6899991</X>
							<Y>4.30000019</Y>
							<Z>-0.970000029</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>0.5</X>
							<Y>4.9000001</Y>
							<Z>6</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBXEAD406C7B0804292B78DAC2058C5AA6F">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>rbxassetid://218513910</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>rbxassetid://1359879461</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBXF8F651C4DF8E47DBB49465192549B544">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">true</bool>
							<string name="Name">Running</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1.2653116</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=115327352</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX79EDA4C9250244819E1BD5F3BAC77FE3">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Honk</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><null /></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
					<Item class="Attachment" referent="RBX4CCC3159DFB74B4D87E484B5971CCB9C">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<CoordinateFrame name="CFrame">
								<X>1.39999998</X>
								<Y>1.75</Y>
								<Z>-1.25</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>-3.9340253e-07</R12>
								<R20>0</R20>
								<R21>3.9340253e-07</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">RightGripAttachment</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<bool name="Visible">false</bool>
						</Properties>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBXB0515D48FBCF4022B92479814DD2AE47">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{E10A18A9-CF57-4616-BF57-6AEAEAA00B2A}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")

Camera = game:GetService("Workspace").CurrentCamera

Animations = {}
LocalObjects = {}

Remotes = Tool:WaitForChild("Remotes")
ServerControl = Remotes:WaitForChild("ServerControl")
ClientControl = Remotes:WaitForChild("ClientControl")

ToolEquipped = false

function SetAnimation(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	end
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.Button1Down:connect(function()
		InvokeServer("MouseClick", {Down = true})
	end)
	Mouse.Button1Up:connect(function()
		InvokeServer("MouseClick", {Down = false})
	end)
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
	Mouse.Move:connect(function()
		InvokeServer("MouseMove", {Position = Mouse.Hit.p, Target = Mouse.Target})
	end)
	Humanoid:ChangeState(Enum.HumanoidStateType.None)
end

function Unequipped()
	ToolEquipped = false
	LocalObjects = {}
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end
	Humanoid:ChangeState(Enum.HumanoidStateType.Freefall) --Prevent the ability to fly by constantly equipping and unequipping the tool.
	Animations = {}
end

function InvokeServer(mode, value)
	pcall(function()
		local ServerReturn = ServerControl:InvokeServer(mode, value)
		return ServerReturn
	end)
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MousePosition" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	elseif mode == "DisableJump" then
		DisableJump(value)
	elseif mode == "SetLocalTransparencyModifier" and value and ToolEquipped then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							local CurrentTransparency = v.Object.LocalTransparencyModifier
							if ((not v.AutoUpdate and (CurrentTransparency == 1 or  CurrentTransparency == 0)) or v.AutoUpdate) then
								v.Object.LocalTransparencyModifier = v.Transparency
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX7C13B02E344B4E6297EC4D259C710373">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MouseIcon</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{2C56136B-FC2B-432A-9922-B8C3678B4210}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX88A43872EDAF4D7FB27B73CF888FF2A2">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Assets</string>
						<string name="ScriptGuid">{E73E0661-FBE1-4C4E-AD18-A1073B15C24D}</string>
						<ProtectedString name="Source">BaseUrl = "rbxassetid://"

local function Create_PrivImpl(objectType)
	if type(objectType) ~= 'string' then
		error("Argument of Create must be a string", 2)
	end
	--return the proxy function that gives us the nice Create'string'{data} syntax
	--The first function call is a function call using Lua's single-string-argument syntax
	--The second function call is using Lua's single-table-argument syntax
	--Both can be chained together for the nice effect.
	return function(dat)
		--default to nothing, to handle the no argument given case
		dat = dat or {}

		--make the object to mutate
		local obj = Instance.new(objectType)
		local parent = nil

		--stored constructor function to be called after other initialization
		local ctor = nil

		for k, v in pairs(dat) do
			--add property
			if type(k) == 'string' then
				if k == 'Parent' then
					-- Parent should always be set last, setting the Parent of a new object
					-- immediately makes performance worse for all subsequent property updates.
					parent = v
				else
					obj[k] = v
				end


			--add child
			elseif type(k) == 'number' then
				if type(v) ~= 'userdata' then
					error("Bad entry in Create body: Numeric keys must be paired with children, got a: "..type(v), 2)
				end
				v.Parent = obj


			--event connect
			elseif type(k) == 'table' and k.__eventname then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create.E\'"..k.__eventname.."\']` must have a function value\
							got: "..tostring(v), 2)
				end
				obj[k.__eventname]:connect(v)


			--define constructor function
			elseif k == t.Create then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create]` should be paired with a constructor function, \
							got: "..tostring(v), 2)
				elseif ctor then
					--ctor already exists, only one allowed
					error("Bad entry in Create body: Only one constructor function is allowed", 2)
				end
				ctor = v


			else
				error("Bad entry ("..tostring(k).." =&gt; "..tostring(v)..") in Create body", 2)
			end
		end

		--apply constructor function if it exists
		if ctor then
			ctor(obj)
		end

		if parent then
			obj.Parent = parent
		end

		--return the completed object
		return obj
	end
end

--now, create the functor:
Create = setmetatable({}, {__call = function(tb, ...) return Create_PrivImpl(...) end})

--and create the "Event.E" syntax stub. Really it's just a stub to construct a table which our Create
--function can recognize as special.
Create.E = function(eventName)
	return {__eventname = eventName}
end


BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	Shape = Enum.PartType.Block,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Anchored = false,
	CanCollide = true,
	Locked = true
}

MeshData = {
	Meshes = {
		Body = 218514173,
		HandleBars = 218513951,
		HoverPiece1 = 218514065,
		HoverPiece2 = 218514114,
		HoverPiece3 = 218514147,
		SmallHoverPiece1 = 218514214,
		SmallHoverPiece2 = 218514260,
	},
	TextureId = 1359879461
}

function CreateVehicle()

	local ExhaustSmoke = {}
	local Lights = {}
	local Sparkles = {}
	local HoverParts = {}

	local Body = BasePart:Clone()
	Body.Name = "Body"
	Body.Size = Vector3.new(1.75, 1.35, 4.25)
	local BodyMesh = Create("SpecialMesh"){
		MeshType = Enum.MeshType.FileMesh,
		MeshId = MeshData.Meshes.Body,
		TextureId = MeshData.TextureId,
		Scale = Vector3.new(4, 4, 4),
		VertexColor = Vector3.new(1, 1, 1),
		Offset = Vector3.new(0, 0, 0),
		Parent = Body
	}

	local BaseHoverPiece1 = BasePart:Clone()
	BaseHoverPiece1.Name = "HoverPiece1"
	BaseHoverPiece1.CanCollide = false
	local BottomHoverPiece1BarsMesh = Create("SpecialMesh"){
		MeshType = Enum.MeshType.FileMesh,
		MeshId = MeshData.Meshes.HoverPiece1,
		TextureId = MeshData.TextureId,
		Scale = Vector3.new(4, 4, 4),
		VertexColor = Vector3.new(1, 1, 1),
		Offset = Vector3.new(0, 0, 0),
		Parent = BaseHoverPiece1,
	}

	local BaseHoverPiece2 = BasePart:Clone()
	BaseHoverPiece2.Name = "HoverPiece2"
	BaseHoverPiece2.CanCollide = false
	local BottomHoverPiece2BarsMesh = Create("SpecialMesh"){
		MeshType = Enum.MeshType.FileMesh,
		MeshId = MeshData.Meshes.HoverPiece2,
		TextureId = MeshData.TextureId,
		Scale = Vector3.new(4, 4, 4),
		VertexColor = Vector3.new(1, 1, 1),
		Offset = Vector3.new(0, 0, 0),
		Parent = BaseHoverPiece2,
	}

	local BaseHoverPiece3 = BasePart:Clone()
	BaseHoverPiece3.Name = "HoverPiece3"
	BaseHoverPiece3.CanCollide = false
	local BottomHoverPiece3BarsMesh = Create("SpecialMesh"){
		MeshType = Enum.MeshType.FileMesh,
		MeshId = MeshData.Meshes.HoverPiece3,
		TextureId = MeshData.TextureId,
		Scale = Vector3.new(4, 4, 4),
		VertexColor = Vector3.new(1, 1, 1),
		Offset = Vector3.new(0, 0, 0),
		Parent = BaseHoverPiece3,
	}

	local BaseSmallHoverPiece1 = BasePart:Clone()
	BaseSmallHoverPiece1.Name = "SmallHoverPiece2"
	BaseSmallHoverPiece1.CanCollide = false
	local BottomHoverPiece3BarsMesh = Create("SpecialMesh"){
		MeshType = Enum.MeshType.FileMesh,
		MeshId = MeshData.Meshes.SmallHoverPiece1,
		TextureId = MeshData.TextureId,
		Scale = Vector3.new(4, 4, 4),
		VertexColor = Vector3.new(1, 1, 1),
		Offset = Vector3.new(0, 0, 0),
		Parent = BaseSmallHoverPiece1,
	}

	local BaseSmallHoverPiece2 = BasePart:Clone()
	BaseSmallHoverPiece2.Name = "SmallHoverPiece1"
	BaseSmallHoverPiece2.CanCollide = false
	local BottomHoverPiece3BarsMesh = Create("SpecialMesh"){
		MeshType = Enum.MeshType.FileMesh,
		MeshId = MeshData.Meshes.SmallHoverPiece2,
		TextureId = MeshData.TextureId,
		Scale = Vector3.new(4, 4, 4),
		VertexColor = Vector3.new(1, 1, 1),
		Offset = Vector3.new(0, 0, 0),
		Parent = BaseSmallHoverPiece2,
	}

	local BaseLightPart = BasePart:Clone()
	BaseLightPart.Name = "LightPart"
	BaseLightPart.Transparency = 1
	local Light = Create("PointLight"){
		Name = "Light",
		Brightness = 50,
		Color = Color3.new((0 / 255), (252 / 255), (255 / 255)),
		Range = 7,
		Shadows = false,
		Enabled = false,
		Parent = BaseLightPart,
	}
	for i = 1, 5 do
		local BaseSparkles = Create("Sparkles"){
			SparkleColor = Color3.new((0 / 255), (255 / 255), (0 / 255)),
			Enabled = false,
			Parent = BaseLightPart,
		}
	end

	local HeadLight = BaseLightPart:Clone()
	HeadLight.Parent = Body
	table.insert(Lights, HeadLight.Light)
	for i, v in pairs(HeadLight:GetChildren()) do
		if v:IsA("Sparkles") then
			table.insert(Sparkles, v)
		end
	end

	local LightWeld = Create("Weld"){
		Part0 = Body,
		Part1 = HeadLight,
		C0 = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0),
		Parent = HeadLight
	}

	local HandleBars = BasePart:Clone()
	HandleBars.Name = "HandleBars"
	HandleBars.Size = Vector3.new(3, 0.75, 0.25)
	HandleBars.CanCollide = false
	local HandleBarsMesh = Create("SpecialMesh"){
		MeshType = Enum.MeshType.FileMesh,
		MeshId = MeshData.Meshes.HandleBars,
		TextureId = MeshData.TextureId,
		Scale = Vector3.new(4, 4, 4),
		VertexColor = Vector3.new(1, 1, 1),
		Offset = Vector3.new(0, 0, 0),
		Parent = HandleBars,
	}
	local HandleBarsWeld = Create("Weld"){
		Part0 = Body,
		Part1 = HandleBars,
		C0 = CFrame.new(0, 3.45, -1.55) * CFrame.Angles(0, 0, 0),
		Parent = HandleBars
	}
	HandleBars.Parent = Body

	local BottomHoverPiece1 = BaseHoverPiece1:Clone()
	BottomHoverPiece1.Name = "BottomHoverPiece3"
	local BottomHoverPiece1Weld = Create("Weld"){
		Part0 = Body,
		Part1 = BottomHoverPiece1,
		C0 = CFrame.new(0, 0.545, -1.565) * CFrame.Angles(0, 0, 0),
		Parent = BottomHoverPiece1
	}
	BottomHoverPiece1.Parent = Body
	table.insert(HoverParts, BottomHoverPiece1)

	local BottomHoverPiece2 = BaseHoverPiece2:Clone()
	BottomHoverPiece2.Name = "BottomHoverPiece2"
	local BottomHoverPiece2Weld = Create("Weld"){
		Part0 = Body,
		Part1 = BottomHoverPiece2,
		C0 = CFrame.new(0, 0.288, -1.565) * CFrame.Angles(0, 0, 0),
		Parent = BottomHoverPiece2
	}
	BottomHoverPiece2.Parent = Body
	table.insert(HoverParts, BottomHoverPiece2)

	local BottomHoverPiece3 = BaseHoverPiece3:Clone()
	BottomHoverPiece3.Name = "BottomHoverPiece1"
	local BottomHoverPiece3Weld = Create("Weld"){
		Part0 = Body,
		Part1 = BottomHoverPiece3,
		C0 = CFrame.new(0, 0.0775, -1.565) * CFrame.Angles(0, 0, 0),
		Parent = BottomHoverPiece3
	}
	BottomHoverPiece3.Parent = Body
	table.insert(HoverParts, BottomHoverPiece3)

	local TopHoverPiece3 = BaseHoverPiece3:Clone()
	TopHoverPiece3.Name = "TopHoverPiece1"
	local TopHoverPiece3Weld = Create("Weld"){
		Part0 = Body,
		Part1 = TopHoverPiece3,
		C0 = CFrame.new(0, 2.945, -1.565) * CFrame.Angles(0, 0, 0),
		Parent = TopHoverPiece3
	}
	TopHoverPiece3.Parent = Body
	table.insert(HoverParts, TopHoverPiece3)

	local TopHoverPiece2 = BaseHoverPiece2:Clone()
	TopHoverPiece2.Name = "TopHoverPiece2"
	local TopHoverPiece2Weld = Create("Weld"){
		Part0 = Body,
		Part1 = TopHoverPiece2,
		C0 = CFrame.new(0, 2.7225, -1.565) * CFrame.Angles(0, 0, 0),
		Parent = TopHoverPiece2
	}
	TopHoverPiece2.Parent = Body
	table.insert(HoverParts, TopHoverPiece2)

	local TopHoverPiece1 = BaseHoverPiece1:Clone()
	TopHoverPiece1.Name = "TopHoverPiece3"
	local TopHoverPiece1Weld = Create("Weld"){
		Part0 = Body,
		Part1 = TopHoverPiece1,
		C0 = CFrame.new(0, 2.49, -1.565) * CFrame.Angles(0, 0, 0),
		Parent = TopHoverPiece1
	}
	TopHoverPiece1.Parent = Body
	table.insert(HoverParts, TopHoverPiece1)

	local BackLeftHoverPiece = BaseSmallHoverPiece2:Clone()
	local BackLeftHoverPieceWeld = Create("Weld"){
		Part0 = Body,
		Part1 = BackLeftHoverPiece,
		C0 = CFrame.new(-0.28, -0.275, 1.3325) * CFrame.Angles(0, 0, 0),
		Parent = BackLeftHoverPiece
	}
	BackLeftHoverPiece.Parent = Body
	table.insert(HoverParts, BackLeftHoverPiece)
	local SmallBackLeftHoverPiece = BaseSmallHoverPiece1:Clone()
	local SmallBackLeftHoverPieceWeld = Create("Weld"){
		Part0 = Body,
		Part1 = SmallBackLeftHoverPiece,
		C0 = CFrame.new(-0.28, -0.425, 1.3325) * CFrame.Angles(0, 0, 0),
		Parent = SmallBackLeftHoverPiece
	}
	SmallBackLeftHoverPiece.Parent = Body
	table.insert(HoverParts, SmallBackLeftHoverPiece)

	local MiddleBackLeftHoverPiece = BaseSmallHoverPiece2:Clone()
	local MiddleBackLeftHoverPieceWeld = Create("Weld"){
		Part0 = Body,
		Part1 = MiddleBackLeftHoverPiece,
		C0 = CFrame.new(-0.28, -0.275, 0.435) * CFrame.Angles(0, 0, 0),
		Parent = MiddleBackLeftHoverPiece
	}
	MiddleBackLeftHoverPiece.Parent = Body
	table.insert(HoverParts, MiddleBackLeftHoverPiece)
	local SmallMiddleBackLeftHoverPiece = BaseSmallHoverPiece1:Clone()
	local SmallMiddleBackLeftHoverPieceWeld = Create("Weld"){
		Part0 = Body,
		Part1 = SmallMiddleBackLeftHoverPiece,
		C0 = CFrame.new(-0.28, -0.425, 0.435) * CFrame.Angles(0, 0, 0),
		Parent = SmallMiddleBackLeftHoverPiece
	}
	SmallMiddleBackLeftHoverPiece.Parent = Body
	table.insert(HoverParts, SmallMiddleBackLeftHoverPiece)

	local MiddleFrontLeftHoverPiece = BaseSmallHoverPiece2:Clone()
	local MiddleFrontLeftHoverPieceWeld = Create("Weld"){
		Part0 = Body,
		Part1 = MiddleFrontLeftHoverPiece,
		C0 = CFrame.new(-0.28, -0.275, -0.635) * CFrame.Angles(0, 0, 0),
		Parent = MiddleFrontLeftHoverPiece
	}
	MiddleFrontLeftHoverPiece.Parent = Body
	table.insert(HoverParts, MiddleFrontLeftHoverPiece)
	local SmallMiddleFrontLeftHoverPiece = BaseSmallHoverPiece1:Clone()
	local SmallMiddleFrontLeftHoverPieceWeld = Create("Weld"){
		Part0 = Body,
		Part1 = SmallMiddleFrontLeftHoverPiece,
		C0 = CFrame.new(-0.28, -0.425, -0.635) * CFrame.Angles(0, 0, 0),
		Parent = SmallMiddleFrontLeftHoverPiece
	}
	SmallMiddleFrontLeftHoverPiece.Parent = Body
	table.insert(HoverParts, SmallMiddleFrontLeftHoverPiece)

	local FrontLeftHoverPiece = BaseSmallHoverPiece2:Clone()
	local FrontLeftHoverPieceWeld = Create("Weld"){
		Part0 = Body,
		Part1 = FrontLeftHoverPiece,
		C0 = CFrame.new(-0.28, -0.275, -1.5625) * CFrame.Angles(0, 0, 0),
		Parent = FrontLeftHoverPiece
	}
	FrontLeftHoverPiece.Parent = Body
	table.insert(HoverParts, FrontLeftHoverPiece)
	local SmallFrontLeftHoverPiece = BaseSmallHoverPiece1:Clone()
	local SmallFrontLeftHoverPieceWeld = Create("Weld"){
		Part0 = Body,
		Part1 = SmallFrontLeftHoverPiece,
		C0 = CFrame.new(-0.28, -0.425, -1.5625) * CFrame.Angles(0, 0, 0),
		Parent = SmallFrontLeftHoverPiece
	}
	SmallFrontLeftHoverPiece.Parent = Body
	table.insert(HoverParts, SmallFrontLeftHoverPiece)

	local BackRightHoverPiece = BaseSmallHoverPiece2:Clone()
	local BackRightHoverPieceWeld = Create("Weld"){
		Part0 = Body,
		Part1 = BackRightHoverPiece,
		C0 = CFrame.new(0.28, -0.275, 1.3325) * CFrame.Angles(0, 0, 0),
		Parent = BackRightHoverPiece
	}
	BackRightHoverPiece.Parent = Body
	table.insert(HoverParts, BackRightHoverPiece)
	local SmallBackRightHoverPiece = BaseSmallHoverPiece1:Clone()
	local SmallBackRightHoverPieceWeld = Create("Weld"){
		Part0 = Body,
		Part1 = SmallBackRightHoverPiece,
		C0 = CFrame.new(0.28, -0.425, 1.3325) * CFrame.Angles(0, 0, 0),
		Parent = SmallBackRightHoverPiece
	}
	SmallBackRightHoverPiece.Parent = Body
	table.insert(HoverParts, SmallBackRightHoverPiece)

	local MiddleBackRightHoverPiece = BaseSmallHoverPiece2:Clone()
	local MiddleBackRightHoverPieceWeld = Create("Weld"){
		Part0 = Body,
		Part1 = MiddleBackRightHoverPiece,
		C0 = CFrame.new(0.28, -0.275, 0.435) * CFrame.Angles(0, 0, 0),
		Parent = MiddleBackRightHoverPiece
	}
	MiddleBackRightHoverPiece.Parent = Body
	table.insert(HoverParts, MiddleBackRightHoverPiece)
	local SmallMiddleBackRightHoverPiece = BaseSmallHoverPiece1:Clone()
	local SmallMiddleBackRightHoverPieceWeld = Create("Weld"){
		Part0 = Body,
		Part1 = SmallMiddleBackRightHoverPiece,
		C0 = CFrame.new(0.28, -0.425, 0.435) * CFrame.Angles(0, 0, 0),
		Parent = SmallMiddleBackRightHoverPiece
	}
	SmallMiddleBackRightHoverPiece.Parent = Body
	table.insert(HoverParts, SmallMiddleBackRightHoverPiece)

	local MiddleFrontRightHoverPiece = BaseSmallHoverPiece2:Clone()
	local MiddleFrontRightHoverPieceWeld = Create("Weld"){
		Part0 = Body,
		Part1 = MiddleFrontRightHoverPiece,
		C0 = CFrame.new(0.28, -0.275, -0.635) * CFrame.Angles(0, 0, 0),
		Parent = MiddleFrontRightHoverPiece
	}
	MiddleFrontRightHoverPiece.Parent = Body
	table.insert(HoverParts, MiddleFrontRightHoverPiece)
	local SmallMiddleFrontRightHoverPiece = BaseSmallHoverPiece1:Clone()
	local SmallMiddleFrontRightHoverPieceWeld = Create("Weld"){
		Part0 = Body,
		Part1 = SmallMiddleFrontRightHoverPiece,
		C0 = CFrame.new(0.28, -0.425, -0.635) * CFrame.Angles(0, 0, 0),
		Parent = SmallMiddleFrontRightHoverPiece
	}
	SmallMiddleFrontRightHoverPiece.Parent = Body
	table.insert(HoverParts, SmallMiddleFrontRightHoverPiece)

	local FrontRightHoverPiece = BaseSmallHoverPiece2:Clone()
	local FrontRightHoverPieceWeld = Create("Weld"){
		Part0 = Body,
		Part1 = FrontRightHoverPiece,
		C0 = CFrame.new(0.28, -0.275, -1.5625) * CFrame.Angles(0, 0, 0),
		Parent = FrontRightHoverPiece
	}
	FrontRightHoverPiece.Parent = Body
	table.insert(HoverParts, FrontRightHoverPiece)
	local SmallFrontRightHoverPiece = BaseSmallHoverPiece1:Clone()
	local SmallFrontRightHoverPieceWeld = Create("Weld"){
		Part0 = Body,
		Part1 = SmallFrontRightHoverPiece,
		C0 = CFrame.new(0.28, -0.425, -1.5625) * CFrame.Angles(0, 0, 0),
		Parent = SmallFrontRightHoverPiece
	}
	SmallFrontRightHoverPiece.Parent = Body
	table.insert(HoverParts, SmallFrontRightHoverPiece)

	local Tables = {
		ExhaustSmoke = ExhaustSmoke,
		Lights = Lights,
		Sparkles = Sparkles,
		HoverParts = HoverParts,
	}

	return {
		Vehicle = Body,
		Tables = Tables
	}

end

for i, v in pairs(MeshData) do
	if type(v) == "table" then
		for ii, vv in pairs(v) do
			if type(vv) == "string" or type(vv) == "number" then
				MeshData[i][ii] = (BaseUrl .. tostring(vv))
			end
		end
	elseif type(v) == "string" or type(v) == "number" then
		MeshData[i] = (BaseUrl .. tostring(v))
	end
end

return {
	BaseUrl = BaseUrl,
	MeshData = MeshData,
	CreateVehicle = CreateVehicle
}</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Script" referent="RBX97CC20DBB4064B029B9448BB84A4897D">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{A3440335-D259-4DD2-BD6D-58D6A57B64EF}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Assets = require(Tool:WaitForChild("Assets"))
Data = Assets.Data

BaseUrl = Assets.BaseUrl

BasePart = Instance.new("Part")
BasePart.Material = Enum.Material.Plastic
BasePart.Shape = Enum.PartType.Block
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.Anchored = false
BasePart.CanCollide = true
BasePart.Locked = true

AnimationsBin = Tool:WaitForChild("Animations")
R6Anims = AnimationsBin:WaitForChild("R6")
R15Anims = AnimationsBin:WaitForChild("R15")

Animations = {
	R6Hold = {Animation = R6Anims:WaitForChild("Hold"), FadeTime = nil, Weight = nil, Speed = nil},
	R15Hold = {Animation = R15Anims:WaitForChild("Hold"), FadeTime = nil, Weight = nil, Speed = nil}
}

Sounds = {
	Honk = Handle:WaitForChild("Honk"),
	Engine = Handle:WaitForChild("Running")
}

Controls = {
	Forward = {Key = "w", ByteKey = 17, Mode = false},
	Backward = {Key = "s", ByteKey = 18, Mode = false},
	Left = {Key = "a", ByteKey = 20, Mode = false},
	Right = {Key = "d", ByteKey = 19, Mode = false}
}

Rate = (1 / 60)

Gravity = workspace.Gravity

PoseOffset = CFrame.new(0, -2.5, -0.3) * CFrame.Angles(0, 0, 0) --The offset your character is from the center of the vehicle.

SpeedBoost = {
	Allowed = false,
	Active = false,
	Enabled = true,
	Duration = 10,
	ReloadTime = 30
}

Special = {
	Allowed = false,
	Enabled = true,
	Active = false,
	Duration = 0,
	ReloadTime = 60
}

Speed = {
	Acceleration = {
		Normal = 20,
		Boost = 40
	},
	Deceleration = {
		Normal = 20,
		Boost = 40
	},
	MovementSpeed = {
		Normal = {Min = 20, Max = 70},
		Boost = {Min = 60, Max = 150}
	},
	TurnSpeed = {
		Speed = {Min = 5, Max = 5},
		TurnAlpha = 0.30,
		AlphaDampening = 0.2
	},
}

MaxSpeed = { --Maximum speed which the vehicle can move and turn at.
	Movement = Speed.MovementSpeed.Normal,
	Turn = Speed.TurnSpeed.Speed,
	Acceleration = Speed.Acceleration.Normal,
	Deceleration = Speed.Deceleration.Normal
}

CurrentSpeed = { --The speed which the vehicle is moving and turning at.
	Movement = 0,
	Turn = 0
}

Honk = {
	Honking = false,
	LastHonk = 0,
	ReloadTime = 1
}

Jump = {
	Jumping = false,
	LastJump = 0,
	ReloadTime = 1.9,
	JumpForce = 30
}

ToolEquipped = false

Remotes = Tool:WaitForChild("Remotes")
ServerControl = (Remotes:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Remotes
ClientControl = (Remotes:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Remotes

Tool.Enabled = true

function RayCast(Position, Direction, MaxDistance, IgnoreList)
	local IgnoreList = ((type(IgnoreList) == "table" and IgnoreList) or {IgnoreList})
	return game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList)
end

function GetAllConnectedParts(Object)
	local Parts = {}
	local function GetConnectedParts(Object)
		for i, v in pairs(Object:GetConnectedParts()) do
			local Ignore = false
			for ii, vv in pairs(Parts) do
				if v == vv then
					Ignore = true
				end
			end
			if not Ignore then
				table.insert(Parts, v)
				GetConnectedParts(v)
			end
		end
	end
	GetConnectedParts(Object)
	return Parts
end

local Limbs = {"Left Arm", "Right Arm", "LeftHand", "RightHand", "RightLowerArm", "RightUpperArm", "LeftLowerArm", "LeftUpperArm"}

function EnableFirstPersonView()
	if not CheckIfAlive() or not ToolEquipped then
		return
	end

	for i, v in pairs(Limbs) do
		local Limb = Character:FindFirstChild(v)
		if Limb and Limb:IsA("BasePart") then
			Spawn(function()
				InvokeClient("SetLocalTransparencyModifier", {Object = Limb, Transparency = 0, AutoUpdate = false})
			end)
		end
	end
end

function ThrustUpdater()

	for i, v in pairs(CurrentSpeed) do
		CurrentSpeed[i] = 0
	end
	for i, v in pairs(Controls) do
		Controls[i].Mode = false
	end

	while ToolEquipped and Body and Body.Parent and CheckIfAlive() and RotationForce and RotationForce.Parent and ThrustForce and ThrustForce.Parent and TurnGyro and TurnGyro.Parent do

		RotationForce.angularvelocity = Vector3.new(0, CurrentSpeed.Turn, 0)
		if math.abs(CurrentSpeed.Turn) &gt; Speed.TurnSpeed.AlphaDampening then
			CurrentSpeed.Turn = (CurrentSpeed.Turn - (Speed.TurnSpeed.AlphaDampening * (math.abs(CurrentSpeed.Turn) / CurrentSpeed.Turn)))
		else
			CurrentSpeed.Turn = 0
		end

		if not Controls.Forward.Mode or Controls.Backward.Mode then --Slow down if not controlling.
			CurrentSpeed.Movement = (CurrentSpeed.Movement * 0.99)
		end

		local MySpeed = Vector3.new(Body.Velocity.X, 0, Body.Velocity.Z).magnitude
		local VelocityDifference = math.abs((MySpeed - (ThrustForce.velocity.magnitude)))
		if MySpeed &gt; 3 and ThrustForce.velocity.magnitude &gt; 3 and VelocityDifference &gt; (0.7 * ThrustForce.velocity.magnitude) then
			CurrentSpeed.Movement = (CurrentSpeed.Movement * 0.9)
		end

		if Controls.Forward.Mode then --Handle acceleration
			CurrentSpeed.Movement = math.min(MaxSpeed.Movement.Max, (CurrentSpeed.Movement + (MaxSpeed.Acceleration * Rate)))
		end
		if Controls.Backward.Mode then --Handle deceleration, if speed is more than 0, decrease quicker.
			CurrentSpeed.Movement = math.max(-MaxSpeed.Movement.Min, (CurrentSpeed.Movement - (MaxSpeed.Deceleration * ((CurrentSpeed.Movement &gt; 0 and 2.8) or 1) * Rate)))
		end

		if Controls.Left.Mode then --Handle left turn speed
			CurrentSpeed.Turn = math.min(Speed.TurnSpeed.Speed.Max, (CurrentSpeed.Turn + (Speed.TurnSpeed.TurnAlpha)))
		end
		if Controls.Right.Mode then --Handle right turn speed
			CurrentSpeed.Turn = math.max(-Speed.TurnSpeed.Speed.Min, (CurrentSpeed.Turn - (Speed.TurnSpeed.TurnAlpha)))
		end

		local Direction = Torso.CFrame.lookVector
		Direction = Vector3.new(Direction.x, 0, Direction.z).unit

		local Velocity = (Direction * CurrentSpeed.Movement) --The thrust force which you move.
		ThrustForce.velocity = Vector3.new(Velocity.X, ThrustForce.velocity.Y, Velocity.Z)

		local LeanAmount = (-CurrentSpeed.Turn * (math.pi / 6) / 4) --Amount your character leans over.
		local XZAngle = math.atan2(Torso.CFrame.lookVector.z, 0, Torso.CFrame.lookVector.x) --Handle rotation
		TurnGyro.cframe = CFrame.Angles((LeanAmount * Direction.x), 0, (LeanAmount * Direction.z))

		--Wheel animation
		local DesiredAngle = (999999999 * (-CurrentSpeed.Movement / math.abs(CurrentSpeed.Movement)))
		local MaxVelocity = (CurrentSpeed.Movement / 250)
--		for i, v in pairs({FrontMotor, BackMotor}) do
--			if v and v.Parent then
--				v.DesiredAngle = DesiredAngle
--				v.MaxVelocity = MaxVelocity
--			end
--		end

		--Smoke exhaust from vehicle running.
		for i, v in pairs(ExhaustSmoke) do
			if v and v.Parent then
				v.Opacity = ((math.min(math.abs(CurrentSpeed.Movement), 10) / 10) * 0.5)
			end
		end

		--Engine running sound which pitch changes while in motion.
		Sounds.Engine.Pitch = (1 + (math.abs(CurrentSpeed.Movement / MaxSpeed.Movement.Max) * 1))

		wait(Rate)

	end
end

function SpawnVehicle()

	Handle.Transparency = 1

	Spawn(function()
		InvokeClient("PlaySound", Sounds.Engine)
		local Animation = Animations.R6Hold
		if Humanoid.RigType == Enum.HumanoidRigType.R15 then
			Animation = Animations.R15Hold
		end
		InvokeClient("PlayAnimation", Animation)
	end)

	Humanoid.PlatformStand = true

	local VehicleData = Assets.CreateVehicle()
	Body = VehicleData.Vehicle
	local ParticleTable = VehicleData.Tables

--	FrontMotor = Body.FrontMotor
--	BackMotor = Body.BackMotor

	ExhaustSmoke = ParticleTable.ExhaustSmoke
	Lights = ParticleTable.Lights
	Sparkles = ParticleTable.Sparkles

	if SpeedBoost.Active then
		for i, v in pairs(Sparkles) do
			if v and v.Parent then
				v.Enabled = true
			end
		end
	end

	local TorsoWeld = Instance.new("Motor6D")
	local R6Offset = CFrame.new(0, 0, 0)
	if Humanoid and Humanoid.RigType == Enum.HumanoidRigType.R6 then
		R6Offset = CFrame.new(0, -0.5, 0)
	end
	TorsoWeld.C0 = PoseOffset * R6Offset
	TorsoWeld.Part0 = Torso
	TorsoWeld.Part1 = Body
	TorsoWeld.Parent = Body

	Body.CanCollide = true

	RotationForce = Instance.new("BodyAngularVelocity")
	RotationForce.maxTorque = Vector3.new(0, math.huge, 0)
	RotationForce.angularvelocity = Vector3.new(0, 0, 0)
	RotationForce.Parent = Torso

	ThrustForce = Instance.new("BodyVelocity")
	ThrustForce.maxForce = Vector3.new(math.huge, 0, math.huge)
	ThrustForce.velocity = Vector3.new(0, 0, 0)
	ThrustForce.P = 100
	ThrustForce.Parent = Torso

	TurnGyro = Instance.new("BodyGyro")
	TurnGyro.maxTorque = Vector3.new(5000, 0, 5000)
	TurnGyro.P = 300
	TurnGyro.D = 100
	TurnGyro.Parent = Torso

	Body.Parent = Tool

	local RayHit, RayPos, RayNormal = RayCast(Torso.Position, Vector3.new(0, -1, 0), (Torso.Size.Y * 2), {Character})
	if RayHit then
		Torso.CFrame = Torso.CFrame + Vector3.new(0, ((Character:GetModelSize().Y / 2) + 1.5), 0)
	end

	Spawn(ThrustUpdater)

end

function FreezePlayer()
	if CheckIfAlive() then
		local FreezePart = BasePart:Clone()
		FreezePart.Name = "FreezePart"
		FreezePart.Transparency = 1
		FreezePart.Anchored = true
		FreezePart.CanCollide = false
		local FreezeWeld = Instance.new("Weld")
		FreezeWeld.Part0 = Torso
		FreezeWeld.Part1 = FreezePart
		FreezeWeld.Parent = FreezePart
		Debris:AddItem(FreezePart, 0.125)
		FreezePart.Parent = Character
		Torso.Velocity = Vector3.new(0, -25, 0)
		Torso.RotVelocity = Vector3.new(0, 0, 0)
	end
end

function CleanUp()
	Handle.Velocity = Vector3.new(0, 0, 0)
	Handle.RotVelocity = Vector3.new(0, 0, 0)
	for i, v in pairs({Body, RotationForce, ThrustForce, TurnGyro}) do
		if v and v.Parent then
			v:Destroy()
		end
	end
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("BasePart") and v ~= Handle then
			v:Destroy()
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("HumanoidRootPart")
	if not CheckIfAlive() then
		return
	end
	Spawn(CleanUp)
	Spawn(EnableFirstPersonView)
	Spawn(SpawnVehicle)
	ToolEquipped = true
end

function Unequipped()
	Spawn(CleanUp)
	Spawn(FreezePlayer)
	for i, v in pairs(Sounds) do
		v:Stop()
		Spawn(function()
			InvokeClient("StopSound", v)
		end)
	end
	if CheckIfAlive() then
		Humanoid.PlatformStand = false
	end
	Handle.Transparency = 0
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player == Player and ToolEquipped and value and CheckIfAlive() then
		if mode == "KeyPress" then
			local Down = value.Down
			local Key = value.Key
			local ByteKey = string.byte(Key)
			for i, v in pairs(Controls) do
				if Key == v.Key or ByteKey == v.ByteKey then
					Controls[i].Mode = Down
				end
			end
			if Key == " " and Down then --Jump controller
				if math.abs(tick() - Jump.LastJump) &gt; Jump.ReloadTime and not Jump.Jumping and ThrustForce and ThrustForce.Parent then
					Jump.Jumping = true
					local Parts = GetAllConnectedParts(Body)
					local Mass = 0
					for i, v in pairs(Parts) do
						Mass = (Mass + v:GetMass())
					end
					ThrustForce.maxForce = Vector3.new(ThrustForce.maxForce.X, ((Mass * Gravity) * 100), ThrustForce.maxForce.Z)
					ThrustForce.velocity = (Vector3.new(0, 1, 0) * Jump.JumpForce) + Vector3.new(ThrustForce.velocity.X, 0, ThrustForce.velocity.Z)
					wait(0.1)
					ThrustForce.maxForce = Vector3.new(ThrustForce.maxForce.X, 0, ThrustForce.maxForce.Z)
					ThrustForce.velocity = Vector3.new(ThrustForce.velocity.X, 0, ThrustForce.velocity.Z)
					Jump.LastJump = tick()
					Jump.Jumping = false
				end
			elseif Key == "x" and Down then --Toggle light(s) on/off.
				for i, v in pairs(Lights) do
					if v and v.Parent then
						v.Enabled = not v.Enabled
					end
				end
			elseif Key == "h" and Down then --Play honk sound.
				local Sound = Sounds.Honk
				if (tick() - Honk.LastHonk) &gt;= (Sound.TimeLength + Honk.ReloadTime) and not Honk.Honking then
					Honk.Honking = true
					local TempSound = Sound:Clone()
					Debris:AddItem(TempSound, Sound.TimeLength)
					TempSound.Parent = Body
					TempSound:Play()
					Honk.LastHonk = tick()
					Honk.Honking = false
				end
			elseif Key == "q" and Down then --Activate special.
				if not Special.Allowed or not Special.Enabled or Special.Active then
					return
				end
				Special.Enabled = false
				Special.Active = true
				wait(Special.Duration)
				Special.Active = false
				wait(Special.ReloadTime)
				Special.Enabled = true
			elseif ByteKey == 48 and Down then --Activate speed boost.
				if not SpeedBoost.Allowed or not SpeedBoost.Enabled or SpeedBoost.Active then
					return
				end
				SpeedBoost.Enabled = false
				SpeedBoost.Active = true
				for i, v in pairs(Sparkles) do
					if v and v.Parent then
						v.Enabled = true
					end
				end
				MaxSpeed.Acceleration = Speed.Acceleration.Boost
				MaxSpeed.Deceleration = Speed.Deceleration.Boost
				MaxSpeed.Movement = Speed.MovementSpeed.Boost
				wait(SpeedBoost.Duration)
				MaxSpeed.Acceleration = Speed.Acceleration.Normal
				MaxSpeed.Deceleration = Speed.Deceleration.Normal
				MaxSpeed.Movement = Speed.MovementSpeed.Normal
				for i, v in pairs(Sparkles) do
					if v and v.Parent then
						v.Enabled = false
					end
				end
				SpeedBoost.Active = false
				wait(SpeedBoost.ReloadTime)
				SpeedBoost.Enabled = true
			end
		end
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

Spawn(CleanUp)

ServerControl.OnServerInvoke = OnServerInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)
workspace:GetPropertyChangedSignal("Gravity"):Connect(function()
	Gravity = workspace.Gravity
end)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Folder" referent="RBXF89D291772D44FF78D0CE99D1ADD4B45">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Animations</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
					<Item class="Folder" referent="RBX180781BFEAAE4FD395E1A66EE02C05D5">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">R6</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
						<Item class="Animation" referent="RBXDEBAA58CC8A74C84B3EA06B8DB31389D">
							<Properties>
								<Content name="AnimationId"><url>rbxassetid://180270832</url></Content>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">Hold</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX3EDE1E004B8D42558552EA54765F0CA2">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">R15</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
						<Item class="Animation" referent="RBX250E1B2950734881B0DC8BDDB019839E">
							<Properties>
								<Content name="AnimationId"><url>rbxassetid://517892320</url></Content>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">Hold</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX7F259EBECC8B43FEBA3F6BB522880D0D">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Remotes</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
					<Item class="RemoteFunction" referent="RBXE54CC146A9E241718587B8115D86A729">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">ServerControl</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
					<Item class="RemoteFunction" referent="RBX5E1B512254DC47948A61D35230D8B381">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">ClientControl</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
				</Item>
				<Item class="Keyframe" referent="RBXBF8B6727F1DF43AC979532763896D5C0">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">ThumbnailPose</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="Time">0</float>
					</Properties>
					<Item class="Pose" referent="RBX7F1E310DA0B848A1AA26DF97E8F04A97">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<CoordinateFrame name="CFrame">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<token name="EasingDirection">1</token>
							<token name="EasingStyle">0</token>
							<string name="Name">HumanoidRootPart</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<float name="Weight">0</float>
						</Properties>
						<Item class="Pose" referent="RBX6D54C73169D04C8BA295BE4B52C42BE0">
							<Properties>
								<BinaryString name="AttributesSerialize" />
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<token name="EasingDirection">1</token>
								<token name="EasingStyle">0</token>
								<string name="Name">LowerTorso</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
								<float name="Weight">1</float>
							</Properties>
							<Item class="Pose" referent="RBXA0A54090F0C146098D683035C2418D71">
								<Properties>
									<BinaryString name="AttributesSerialize" />
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<token name="EasingDirection">1</token>
									<token name="EasingStyle">0</token>
									<string name="Name">UpperTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags" />
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBX18D92E79CF624439A4EAB8ED28F7D4B2">
									<Properties>
										<BinaryString name="AttributesSerialize" />
										<CoordinateFrame name="CFrame">
											<X>-1.1920929e-07</X>
											<Y>1.01322044e-08</Y>
											<Z>0</Z>
											<R00>0.99999994</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>-4.37113883e-08</R11>
											<R12>-1</R12>
											<R20>0</R20>
											<R21>1</R21>
											<R22>-4.37113883e-08</R22>
										</CoordinateFrame>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<token name="EasingDirection">1</token>
										<token name="EasingStyle">0</token>
										<string name="Name">LeftUpperArm</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags" />
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX196883609A7B4FF5A93F60588E5F9674">
										<Properties>
											<BinaryString name="AttributesSerialize" />
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>-5.96046448e-08</Y>
												<Z>9.31322575e-10</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.99999994</R11>
												<R12>2.08616257e-07</R12>
												<R20>0</R20>
												<R21>-2.08616257e-07</R21>
												<R22>0.99999994</R22>
											</CoordinateFrame>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="DefinesCapabilities">false</bool>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftLowerArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags" />
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXAAE89FD5CA3C40C1938AAB355884491F">
											<Properties>
												<BinaryString name="AttributesSerialize" />
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<bool name="DefinesCapabilities">false</bool>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftHand</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags" />
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Pose" referent="RBXD823CACE75844BB383416209ED7135F5">
									<Properties>
										<BinaryString name="AttributesSerialize" />
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>5.36619638e-09</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1.19248806e-08</R11>
											<R12>-1</R12>
											<R20>0</R20>
											<R21>1</R21>
											<R22>1.19248806e-08</R22>
										</CoordinateFrame>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<token name="EasingDirection">1</token>
										<token name="EasingStyle">0</token>
										<string name="Name">RightUpperArm</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags" />
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX2D0033EB7FBF49EEBF0369BAC715546C">
										<Properties>
											<BinaryString name="AttributesSerialize" />
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>-8.94069672e-08</Y>
												<Z>-9.31322464e-10</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.99999994</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>0.99999994</R22>
											</CoordinateFrame>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="DefinesCapabilities">false</bool>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightLowerArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags" />
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXCC7C711BD65C4C0AA486729D19388C31">
											<Properties>
												<BinaryString name="AttributesSerialize" />
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<bool name="DefinesCapabilities">false</bool>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightHand</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags" />
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Pose" referent="RBXE2023299B6FF4AC3AB5FF6A951E0AAA4">
									<Properties>
										<BinaryString name="AttributesSerialize" />
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<token name="EasingDirection">1</token>
										<token name="EasingStyle">0</token>
										<string name="Name">Head</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags" />
										<float name="Weight">1</float>
									</Properties>
								</Item>
							</Item>
							<Item class="Pose" referent="RBXBF620589A9FC46D6A9A80D2659D167D0">
								<Properties>
									<BinaryString name="AttributesSerialize" />
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<token name="EasingDirection">1</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LeftUpperLeg</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags" />
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBX902DA7E1F29C4614814ECC19362C3F51">
									<Properties>
										<BinaryString name="AttributesSerialize" />
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<token name="EasingDirection">1</token>
										<token name="EasingStyle">0</token>
										<string name="Name">LeftLowerLeg</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags" />
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX5B7AF1E0F10340478EFF2A40C662F605">
										<Properties>
											<BinaryString name="AttributesSerialize" />
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="DefinesCapabilities">false</bool>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftFoot</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags" />
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Pose" referent="RBXD77BC5FC6EF248B7AF15725CFEDE02E1">
								<Properties>
									<BinaryString name="AttributesSerialize" />
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<token name="EasingDirection">1</token>
									<token name="EasingStyle">0</token>
									<string name="Name">RightUpperLeg</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags" />
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBX7F8F13EA4972433B9D13A899C1C743C0">
									<Properties>
										<BinaryString name="AttributesSerialize" />
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<token name="EasingDirection">1</token>
										<token name="EasingStyle">0</token>
										<string name="Name">RightLowerLeg</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags" />
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX503556FD347947C99167E8002C7C8745">
										<Properties>
											<BinaryString name="AttributesSerialize" />
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="DefinesCapabilities">false</bool>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightFoot</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags" />
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="Camera" referent="RBX42CD58292D6E4FC19FDF3847472F7C3F">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>-8.66545773</X>
							<Y>4.72338295</Y>
							<Z>-1.63275433</Z>
							<R00>-0.502346933</R00>
							<R01>0.258418739</R01>
							<R02>-0.825146914</R02>
							<R10>-0</R10>
							<R11>0.954295397</R11>
							<R12>0.298865318</R12>
							<R20>0.864666224</R20>
							<R21>0.150134072</R21>
							<R22>-0.479387313</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>-7.0151639</X>
							<Y>4.12565231</Y>
							<Z>-0.6739797</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		