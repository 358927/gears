<Item class="Model" referent="RBX43A15C3CC403499D90118E61C3CC382D">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">287426148</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBXC9074BD644C3496FABBFE528AFCC0C24">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>0</X>
						<Y>-2.3499999</Y>
						<Z>0.25</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">OmegaRainbowSword</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=283709719</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>-0.0462489985</X>
							<Y>8.95164776</Y>
							<Z>-0.026199</Z>
							<R00>0.964508057</R00>
							<R01>0.187234089</R01>
							<R02>-0.186193511</R02>
							<R10>9.16905947e-07</R10>
							<R11>0.705131471</R11>
							<R12>0.70907706</R12>
							<R20>0.264054179</R20>
							<R21>-0.683909833</R21>
							<R22>0.680104733</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBXA13AB280CBBA4FCC959EA5E6D68833D1">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-0.0462489985</X>
							<Y>8.95164776</Y>
							<Z>-0.026199</Z>
							<R00>0.964508057</R00>
							<R01>0.187234089</R01>
							<R02>-0.186193511</R02>
							<R10>9.16905947e-07</R10>
							<R11>0.705131471</R11>
							<R12>0.70907706</R12>
							<R20>0.264054179</R20>
							<R21>-0.683909833</R21>
							<R22>0.680104733</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>0.200000003</X>
							<Y>6</Y>
							<Z>0.75</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBXF745976DC26046A9B785DA350B72DF40">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=283709615</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.5</X>
								<Y>0.5</Y>
								<Z>0.5</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=283709681</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBXDF8DAE7296DA4AB2A5BA1846B840D68E">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Unsheath</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222225</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX6325F5D41BEC40CD863F886032AE0E92">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Slash</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222216</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX7162E5A8487E470BB866ABF30F617713">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Lunge</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222208</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Script" referent="RBX9AA521047D874CF1A8CFDD859714855D">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{82915E16-CC97-42AA-88E5-1A25F2D762FE}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")

RemoverScript = script:WaitForChild("RemoverScript")
ParticleScript = script:WaitForChild("ParticleScript")
ParticleFire = script:WaitForChild("Fire")

local function Create_PrivImpl(objectType)
	if type(objectType) ~= 'string' then
		error("Argument of Create must be a string", 2)
	end
	--return the proxy function that gives us the nice Create'string'{data} syntax
	--The first function call is a function call using Lua's single-string-argument syntax
	--The second function call is using Lua's single-table-argument syntax
	--Both can be chained together for the nice effect.
	return function(dat)
		--default to nothing, to handle the no argument given case
		dat = dat or {}

		--make the object to mutate
		local obj = Instance.new(objectType)
		local parent = nil

		--stored constructor function to be called after other initialization
		local ctor = nil

		for k, v in pairs(dat) do
			--add property
			if type(k) == 'string' then
				if k == 'Parent' then
					-- Parent should always be set last, setting the Parent of a new object
					-- immediately makes performance worse for all subsequent property updates.
					parent = v
				else
					obj[k] = v
				end


			--add child
			elseif type(k) == 'number' then
				if type(v) ~= 'userdata' then
					error("Bad entry in Create body: Numeric keys must be paired with children, got a: "..type(v), 2)
				end
				v.Parent = obj


			--event connect
			elseif type(k) == 'table' and k.__eventname then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create.E\'"..k.__eventname.."\']` must have a function value\
							got: "..tostring(v), 2)
				end
				obj[k.__eventname]:connect(v)


			--define constructor function
			elseif k == t.Create then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create]` should be paired with a constructor function, \
							got: "..tostring(v), 2)
				elseif ctor then
					--ctor already exists, only one allowed
					error("Bad entry in Create body: Only one constructor function is allowed", 2)
				end
				ctor = v


			else
				error("Bad entry ("..tostring(k).." =&gt; "..tostring(v)..") in Create body", 2)
			end
		end

		--apply constructor function if it exists
		if ctor then
			ctor(obj)
		end

		if parent then
			obj.Parent = parent
		end

		--return the completed object
		return obj
	end
end

--now, create the functor:
Create = setmetatable({}, {__call = function(tb, ...) return Create_PrivImpl(...) end})

--and create the "Event.E" syntax stub. Really it's just a stub to construct a table which our Create
--function can recognize as special.
Create.E = function(eventName)
	return {__eventname = eventName}
end


BaseUrl = "http://www.roblox.com/asset/?id="

Gravity = 196.20

Rate = (1 / 60)

Damage = {
	Touch = {Min = 5, Max = 8},
	Hit = {Min = 18, Max = 22},
}

FireDamage = 5

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	Shape = Enum.PartType.Block,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
}

Grips = {
	Up = CFrame.new(0, -2.35, 0.25, 1, 0, 0, 0, 1, 0, 0, 0, 1),
	Out = CFrame.new(0, -2.35, 0.25, 1, 0, 0, 0, 0, -1, -0, 1, 0),
}

Animations = {
	LeftSlash = {Animation = Tool:WaitForChild("LeftSlash"), FadeTime = nil, Weight = nil, Speed = 2.5, Duration = 0.5},
	RightSlash = {Animation = Tool:WaitForChild("RightSlash"), FadeTime = nil, Weight = nil, Speed = 2.5, Duration = 0.5},
	Lunge = {Animation = Tool:WaitForChild("Lunge"), FadeTime = 0, Weight = nil, Speed = nil, Duration = nil},
}

Sounds = {
	Unsheath = Handle:WaitForChild("Unsheath"),
	Slash = Handle:WaitForChild("Slash"),
	Lunge = Handle:WaitForChild("Lunge"),
}

LastAttack = 0

Special = {
	Enabled = true,
	Active = false,
	ReloadTime = 20,
}

Particles = {}

Lunging = false
ToolEquipped = false

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

Handle.Transparency = 0
Tool.Enabled = true

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function Swing(PossibleAnims)
	if not CheckIfAlive() or not ToolEquipped then
		return
	end
	if PossibleAnims and #PossibleAnims &gt; 0 then
		local Animation = PossibleAnims[math.random(1, #PossibleAnims)]
		CurrentAnimation = Animation
		local AttackAnimation = CurrentAnimation
		Spawn(function()
			InvokeClient("PlayAnimation", CurrentAnimation)
		end)
		Delay(Animation.Duration, (function()
			CurrentAnimation = nil
		end))
	end
end

function CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.lower(v) == string.lower(String) then
			return true
		end
	end
	return false
end

function Blow(Hit)
	if not Hit or not Hit.Parent or not CheckIfAlive() or not ToolEquipped then
		return
	end
	local RightArm = Character:FindFirstChild("Right Arm")
	if not RightArm then
		return
	end
	local RightGrip = RightArm:FindFirstChild("RightGrip")
	if not RightGrip or (RightGrip.Part0 ~= Handle and RightGrip.Part1 ~= Handle) then
		return
	end
	local character = Hit.Parent
	if character == Character then
		return
	end
	local humanoid = character:FindFirstChild("Humanoid")
	if not humanoid or humanoid.Health == 0 then
		return
	end
	local player = Players:GetPlayerFromCharacter(character)
	if player and (player == Player or IsTeamMate(Player, player)) then
		return
	end
	local PossibleDamage = ((CurrentAnimation and Damage.Hit) or Damage.Touch)
	local DamageValue = math.random(PossibleDamage.Min, PossibleDamage.Max)
	local HealthAfter = (humanoid.Health - DamageValue)
	UntagHumanoid(humanoid)
	TagHumanoid(humanoid, Player)
	humanoid:TakeDamage(DamageValue)
	if HealthAfter &gt; 0 then
	end
end

function GetAllConnectedParts(Object)
	local Parts = {}
	local function GetConnectedParts(Object)
		for i, v in pairs(Object:GetConnectedParts()) do
			local Ignore = false
			for ii, vv in pairs(Parts) do
				if v == vv then
					Ignore = true
				end
			end
			if not Ignore then
				table.insert(Parts, v)
				GetConnectedParts(v)
			end
		end
	end
	GetConnectedParts(Object)
	return Parts
end

function Lunge(MousePosition)
	Lunging = true
	for i, v in pairs(Animations) do
		Spawn(function()
			InvokeClient("StopAnimation", v)
		end)
	end
	Sounds.Lunge:Play()
	Tool.Grip = Grips.Out
	local Direction = CFrame.new(Torso.Position, Vector3.new(MousePosition.X, Torso.Position.Y, MousePosition.Z))
	Torso.CFrame = Direction
	local Parts = GetAllConnectedParts(Torso)
	local Mass = 0
	for i, v in pairs(Parts) do
		Mass = (Mass + v:GetMass())
	end
	Mass = (Mass * Gravity * 100)
	local BodyVelocity = Create("BodyVelocity"){
		maxForce = Vector3.new(Mass, 0, Mass),
		velocity = (Direction.lookVector * 100),
	}
	local BodyGyro = Create("BodyGyro"){
		maxTorque = Vector3.new(math.huge, math.huge, math.huge),
		cframe = Direction,
	}
	for i, v in pairs({BodyVelocity, BodyGyro}) do
		Debris:AddItem(v, 0.5)
		v.Parent = Torso
	end
	wait(0.75)
	Tool.Grip = Grips.Up
	wait(0.5)
	Lunging = false
end

function TweenColor(Object, Property, CurrentColor, DesiredColor, Time)
	local Difference = {
		Red = (DesiredColor.r - CurrentColor.r),
		Green = (DesiredColor.g - CurrentColor.g),
		Blue = (DesiredColor.b - CurrentColor.b),
	}
	local ChangeRate = 30
	for i = 1, (Time * ChangeRate) do
		local NewColor = Color3.new(
			(CurrentColor.r + Difference.Red / (Time * ChangeRate)),
			(CurrentColor.g + Difference.Green / (Time * ChangeRate)),
			(CurrentColor.b + Difference.Blue / (Time * ChangeRate))
		)
		CurrentColor = NewColor
		pcall(function()
			Object[Property] = NewColor
		end)
		wait(Rate)
	end
end

function ParticleHit(Part)
	local HitDebounce = false
	local TouchedConnection
	TouchedConnection = Part.Touched:connect(function(Hit)
		if not Hit or not Hit.Parent or HitDebounce then
			return
		end
		local character = Hit.Parent
		local humanoid = character:FindFirstChild("Humanoid")
		if not humanoid or humanoid.Health == 0 then
			return
		end
		local player = Players:GetPlayerFromCharacter(character)
		if player and (player == Player or IsTeamMate(Player, player)) then
			return
		end
		if not Special.Active then
			HitDebounce = true
		end
		UntagHumanoid(humanoid)
		TagHumanoid(humanoid, Player)
		humanoid:TakeDamage(FireDamage * ((Special.Active and 2.5) or 1))
		local Fire = Part:FindFirstChild("Fire")
		if Fire then
			for i, v in pairs(character:GetChildren()) do
				if v:IsA("BasePart") and not v:FindFirstChild("EffectFire") then
					local FireCopy = ParticleFire:Clone()
					FireCopy.Name = "EffectFire"
					FireCopy.Color = ColorSequence.new(Fire.Color, Fire.Color)
					FireCopy.Enabled = true
					local ParticleScriptCopy = ParticleScript:Clone()
					local Duration = Create("NumberValue"){
						Name = "Duration",
						Value = 4,
						Parent = FireCopy,
					}
					ParticleScriptCopy.Disabled = false
					ParticleScriptCopy.Parent = FireCopy
					Debris:AddItem(FireCopy, 5)
					FireCopy.Parent = v
				end
			end
		end
		wait(0.5)
		HitDebounce = false
	end)
	return
end

function CreateParticles()
	Particles = {}
	local ModelName = (Player.Name .. "'s Particles")
	local ParticleRadius = 5
	local ParticleModel = Create("Model"){
		Name = ModelName,
	}
	local Values = {
		{Name = "Creator", Class = "ObjectValue", Value = Player},
		{Name = "Tool", Class = "ObjectValue", Value = Tool},
	}
	local RemoverScriptCopy = RemoverScript:Clone()
	for i, v in pairs(Values) do
		local Value = Create(v.Class){
			Name = v.Name,
			Value = v.Value,
			Parent = RemoverScriptCopy,
		}
	end
	RemoverScriptCopy.Disabled = false
	RemoverScriptCopy.Parent = ParticleModel
	local OrbitingVelocity = 15
	local Radius = 7.5
	local RadiusSquared = (Radius ^ 2)
	local OrbitingVelocitySquared = (OrbitingVelocity ^ 2)
	local Count = 40
	local Colors = {"Really red", "Really blue", "Deep orange"}
	local Now = tick()
	for i = 1, Count do
		local ParticlePart = BasePart:Clone()
		ParticlePart.Name = "Effect"
		ParticlePart.Transparency = 1
		ParticlePart.Size = Vector3.new(1, 1, 1)
		ParticlePart.CanCollide = false
		local FireColor = BrickColor.new(Colors[math.random(1, #Colors)]).Color
		local Fire = Create("Fire"){
			Color = FireColor,
			SecondaryColor = FireColor,
			Heat = 2,
			Size = 3,
			Enabled = true,
			Parent = ParticlePart,
		}
		local Mass = ParticlePart:GetMass()
		local SpawnPos = Torso.Position
		local OrbitingVelocity = 15
		local Theta = (i / 20 * 2 * math.pi)
		local NewVelocity = Vector3.new((math.random() - 0.5), (math.random() - 0.5), (math.random() - 0.5))
		local UnitVectorTowardsUs = Vector3.new((Radius * math.cos(Theta)), 0, (Radius * math.sin(Theta))).Unit
		NewVelocity = (NewVelocity - UnitVectorTowardsUs * NewVelocity:Dot(UnitVectorTowardsUs))
		ParticlePart.Velocity = (NewVelocity.Unit * OrbitingVelocity)
		ParticlePart.RotVelocity = Vector3.new(((math.random() - 0.5) * 10), ((math.random() - 0.5) * 10), ((math.random() - 0.5) * 10))
		local Force = Create("BodyForce"){
			force = Vector3.new((-Mass * OrbitingVelocity * OrbitingVelocity * math.cos(Theta) / RadiusSquared), (Mass * Gravity), (-Mass * OrbitingVelocity * OrbitingVelocity * math.sin(Theta) / RadiusSquared)),
			Parent = ParticlePart,
		}
		local Position = Create("BodyPosition"){
			maxForce = Vector3.new(0, 0, 0),
			Parent = ParticlePart,
		}
		ParticlePart.CFrame = CFrame.new((SpawnPos.X + Radius * math.cos(Theta)), SpawnPos.Y, (SpawnPos.Z + Radius * math.sin(Theta)))
		ParticlePart.Parent = ParticleModel
		table.insert(Particles, {Part = ParticlePart, Force = Force, Position = Position, Fire = {Object = Fire, LastChange = Now}})
		ParticleHit(ParticlePart)
	end
	ParticleModel.Parent = game:GetService("Workspace")
	while ParticleModel and ParticleModel.Parent do
		local Now = tick()
		for i, v in pairs(Particles) do
			local MPos = Torso.Position
			local DPos = (v.Part.Position - MPos)
			local Mass = v.Part:GetMass()
			local UnitVectorTowardsUs = DPos.Unit
			if DPos.Magnitude &lt;= (Radius + 2) then
				v.Position.maxForce = Vector3.new(0, 0, 0)
				v.Force.force = (Mass * Vector3.new((-OrbitingVelocitySquared * DPos.X / RadiusSquared), (-OrbitingVelocitySquared * DPos.Y / RadiusSquared + Gravity), (-OrbitingVelocitySquared * DPos.Z / RadiusSquared)))
				local NewVelocity = (v.Part.Velocity - ( 1 / (1 + math.abs(DPos.Magnitude - Radius))) * UnitVectorTowardsUs * v.Part.Velocity:Dot(UnitVectorTowardsUs))
				v.Part.Velocity = (NewVelocity.Unit * OrbitingVelocity * Vector3.new(1, 1, 1))
			else
				local Mass = (v.Part:GetMass() * Gravity * math.random(75, 100))
				v.Force.force = Vector3.new(0, 0, 0)
				v.Position.maxForce = Vector3.new(Mass, Mass, Mass)
				v.Position.position = (Torso.CFrame + (Torso.CFrame * CFrame.Angles((math.random(-360, 360) * 0.01), (math.random(-360, 360) * 0.01) ,(math.random(-360, 360) * 0.01))).lookVector * Radius).p
			end
			if (Now - v.Fire.LastChange) &gt;= 2 then
				v.Fire.LastChange = Now
				Spawn(function()
					local NewColor = BrickColor.new(Colors[math.random(1, #Colors)]).Color
					local TransformRate = 1
					Spawn(function()
						TweenColor(v.Fire.Object, "Color", v.Fire.Object.Color, NewColor, TransformRate)
					end)
					Spawn(function()
						TweenColor(v.Fire.Object, "SecondaryColor", v.Fire.Object.SecondaryColor, NewColor, TransformRate)
					end)
				end)
			end
		end
		wait(0.01)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent and Player and Player.Parent) and true) or false)
end

function Attack()
	Sounds.Slash:Play()
	local AttackAnims = {Animations.LeftSlash, Animations.RightSlash}
	Swing(AttackAnims)
end

function Activated()
	if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() then
		return
	end
	Tool.Enabled = false
	local Time = RunService.Stepped:wait()
	if (Time - LastAttack) &lt; 0.2 then
		local MousePosition = InvokeClient("MousePosition")
		if MousePosition then
			Lunge(MousePosition.Position)
		end
	else
		Attack()
	end
	LastAttack = Time
	Tool.Enabled = true
end

function Equipped(Mouse)
	Character = Tool.Parent
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	Player = Players:GetPlayerFromCharacter(Character)
	if not CheckIfAlive() then
		return
	end
	Sounds.Unsheath:Play()
	Spawn(function()
		Tool.Grip = Grips.Up
		if not Special.Active then
			CreateParticles()
		end
	end)
	ToolEquipped = true
end

function Unequipped()
	Tool.Grip = Grips.Up
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not ToolEquipped or not value or not CheckIfAlive() then
		return
	end
	if mode == "KeyPress" then
		local Key = value.Key
		local Down = value.Down
		if Key == "q" and Down then
			if not Special.Enabled or Special.Active then
				return
			end
			local TargetPosition = InvokeClient("MousePosition")
			if not TargetPosition then
				return
			end
			TargetPosition = TargetPosition.Position
			Special.Enabled = false
			Special.Active = true
			for i, v in pairs(Particles) do
				if v and v.Part and v.Part.Parent then
					local Particle = v.Part:Clone()
					if v.Part and v.Part.Parent then
						v.Part:Destroy()
					end
					ParticleHit(Particle)
					Particle.Name = "Effect"
					for i, v in pairs(Particle:GetChildren()) do
						if string.find(string.lower(v.ClassName), string.lower("Body")) then
							v:Destroy()
						end
					end
					v.Fire.Object.Heat = 15
					v.Fire.Object.Size = 5
					local Direction = CFrame.new(Particle.Position, TargetPosition)
					local Mass = (Particle:GetMass() * Gravity)
					local Force = 100
					local Velocity = (Direction.lookVector * Force)
					local BodyVelocity = Create("BodyVelocity"){
						maxForce = Vector3.new(Mass, Mass, Mass),
						velocity = Velocity,
						Parent = Particle,
					}
					Particle.RotVelocity = Vector3.new(0, 0, 0)
					Particle.Velocity = Velocity
					Debris:AddItem(Particle, 3)
					Particle.Parent = game:GetService("Workspace")
				end
			end
			wait(Special.ReloadTime)
			Special.Active = false
			if ToolEquipped and CheckIfAlive() then
				CreateParticles()
			end
			Special.Enabled = true
		end
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = OnServerInvoke

Handle.Touched:connect(Blow)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
					<Item class="Script" referent="RBXAFAEA2C1D60848DE8A022259F0220546">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">RemoverScript</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{6299CBF2-DD81-43B8-936B-C520042313D6}</string>
							<ProtectedString name="Source">--Made by Luckymaxer

Model = script.Parent

Debris = game:GetService("Debris")

Creator = script:FindFirstChild("Creator")
Tool = script:FindFirstChild("Tool")

FadeRate = 0.025
Rate = (1 / 15)

Removing = false

function DestroyModel()
	if Removing then
		return
	end
	Model.Name = ""
	for i, v in pairs(Model:GetChildren()) do
		if v:IsA("BasePart") then
			v.Transparency = 1
			v.Anchored = true
			v.CanCollide = false
			for ii, vv in pairs(v:GetChildren()) do
				if vv:IsA("Fire") or vv:IsA("Smoke") or vv:IsA("Sparkles") or vv:IsA("Light") or vv:IsA("ParticleEmitter") then
					vv.Enabled = false
				end
			end
		end
	end
	Removing = true
	Debris:AddItem(Model, 1.5)
end

function ClearModel()
	if Removing then
		return
	end
	local Parts = {}
	for i, v in pairs(Model:GetChildren()) do
		if v:IsA("BasePart") then
			table.insert(Parts, v)
		end
	end
	if #Parts == 0 then
		Removing = true
		Model.Name = ""
		Debris:AddItem(Model, 0.5)
	end
end

if not Creator or not Creator.Value or not Creator.Value:IsA("Player") or not Creator.Value.Parent or not Tool or not Tool.Value or not Tool.Value.Parent then
	DestroyModel()
	return
end

Creator = Creator.Value
Tool = Tool.Value

Character = Creator.Character
if not Character then
	DestroyModel()
	return
end

Creator.Changed:connect(function(Property)
	if Property == "Parent" and not Creator.Parent then
		DestroyModel()
	end
end)

Character.Changed:connect(function(Property)
	if Property == "Parent" and not Character.Parent then
		DestroyModel()
	end
end)

Tool.Changed:connect(function(Property)
	if Property == "Parent" then
		DestroyModel()
	end
end)

Model.ChildRemoved:connect(function(Child)
	ClearModel()
end)

wait(1)

ClearModel()</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
					<Item class="ParticleEmitter" referent="RBX5DF81ABF2D8B4C0BAD1E89A1041F1201">
						<Properties>
							<Vector3 name="Acceleration">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<BinaryString name="AttributesSerialize" />
							<float name="Brightness">1</float>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<ColorSequence name="Color">0 1 1 1 0 1 1 1 1 0 </ColorSequence>
							<bool name="DefinesCapabilities">false</bool>
							<float name="Drag">0</float>
							<token name="EmissionDirection">1</token>
							<bool name="Enabled">false</bool>
							<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
							<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
							<token name="FlipbookLayout">0</token>
							<token name="FlipbookMode">0</token>
							<bool name="FlipbookStartRandom">false</bool>
							<NumberRange name="Lifetime">0.75 0.75 </NumberRange>
							<float name="LightEmission">0.75</float>
							<float name="LightInfluence">0</float>
							<bool name="LockedToPart">false</bool>
							<string name="Name">Fire</string>
							<token name="Orientation">0</token>
							<float name="Rate">1000</float>
							<NumberRange name="RotSpeed">5 8 </NumberRange>
							<NumberRange name="Rotation">4 5 </NumberRange>
							<token name="Shape">0</token>
							<token name="ShapeInOut">0</token>
							<float name="ShapePartial">1</float>
							<token name="ShapeStyle">0</token>
							<NumberSequence name="Size">0 0 0 0.90399 0.875 0 1 1.25 0 </NumberSequence>
							<int64 name="SourceAssetId">-1</int64>
							<NumberRange name="Speed">0 0 </NumberRange>
							<Vector2 name="SpreadAngle">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
							<BinaryString name="Tags" />
							<Content name="Texture"><url>rbxasset://textures/particles/fire_main.dds</url></Content>
							<float name="TimeScale">1</float>
							<NumberSequence name="Transparency">0 0.75 0 1 0.75 0 </NumberSequence>
							<float name="VelocityInheritance">0</float>
							<bool name="WindAffectsDrag">false</bool>
							<float name="ZOffset">1</float>
						</Properties>
					</Item>
					<Item class="Script" referent="RBXED7BF651B77F48FD9E6B6999EA26E1A8">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">ParticleScript</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{6F34B2EB-83DD-4010-91D5-0ECC7DB3DB59}</string>
							<ProtectedString name="Source">--Rescripted by Luckymaxer

Particle = script.Parent

Duration = Particle:WaitForChild("Duration")

wait(Duration.Value)

Particle.Enabled = false
</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBX4CFF155A0A1840A883322630045C7FA5">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{B8CD4141-10A0-48CA-8531-7EB77716C3D7}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
ContentProvider = game:GetService("ContentProvider")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Animations = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

Rate = (1 / 60)

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	local function StopAnimation(Animation)
		for i, v in pairs(Animations) do
			if v.Animation == Animation then
				v.AnimationTrack:Stop(value.EndFadeTime)
				if v.TrackStopped then
					v.TrackStopped:disconnect()
				end
				table.remove(Animations, i)
			end
		end
	end
	if mode == "PlayAnimation" then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				if value.Speed then
					v.AnimationTrack:AdjustSpeed(value.Speed)
					return
				elseif value.Weight or value.FadeTime then
					v.AnimationTrack:AdjustWeight(value.Weight, value.FadeTime)
					return
				else
					StopAnimation(value.Animation, false)
				end
			end
		end
		local AnimationMonitor = Create("Model"){}
		local TrackEnded = Create("StringValue"){Name = "Ended"}
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		local TrackStopped
		if not value.Manual then
			TrackStopped = AnimationTrack.Stopped:connect(function()
				if TrackStopped then
					TrackStopped:disconnect()
				end
				StopAnimation(value.Animation, true)
				TrackEnded.Parent = AnimationMonitor
			end)
		end
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack, TrackStopped = TrackStopped})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
		if TrackStopped then
			AnimationMonitor:WaitForChild(TrackEnded.Name)
		end
		return TrackEnded.Name
	elseif mode == "StopAnimation" and value then
		StopAnimation(value.Animation)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		PlayerMouse = Player:GetMouse()
		Mouse.Button1Down:connect(function()
			InvokeServer("Button1Click", {Down = true})
		end)
		Mouse.Button1Up:connect(function()
			InvokeServer("Button1Click", {Down = false})
		end)
		Mouse.KeyDown:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = true})
		end)
		Mouse.KeyUp:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = false})
		end)
		for i, v in pairs(Tool:GetChildren()) do
			if v:IsA("Animation") then
				ContentProvider:Preload(v.AnimationId)
			end
		end
	end)
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	local ServerReturn = nil
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MousePosition" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX0D4E7CD6FAC44E7A97D6521B160C78B9">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MouseIcon</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{16400588-DB00-430C-B5F5-534978198962}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXDB22AC02B20445EABB736EB720DF3BF1">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=285965988</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Lunge</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXC86A20F1349741FA85AD6BC472D6B4CC">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=285551640</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">RightSlash</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX328689F020E54FF5892600E09EB4D408">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=285552468</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">LeftSlash</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Camera" referent="RBXCC62282E80D74DE8AD743226B6A57D63">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>3.14841104</X>
							<Y>8.87070656</Y>
							<Z>0.692869246</Z>
							<R00>0.180602193</R00>
							<R01>0.0593728758</R01>
							<R02>0.981762588</R02>
							<R10>-9.31322575e-10</R10>
							<R11>0.998176396</R11>
							<R12>-0.0603655092</R12>
							<R20>-0.983556271</R20>
							<R21>0.0109021422</R21>
							<R22>0.180272847</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>0.478018045</X>
							<Y>9.03490067</Y>
							<Z>0.202527344</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		