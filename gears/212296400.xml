<Item class="Model" referent="RBXB5F0A2C1941847FF8BA16B95329B1608">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">212296400</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBXE3836100967D47898F42DA7AD3D44211">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>1.5</X>
						<Y>1</Y>
						<Z>-1.64999998</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">Magician'sCloak</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=211683070 </url></Content>
					<string name="ToolTip">Planes, trains and cloakomobiles</string>
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>-36.1200294</X>
							<Y>72.7200623</Y>
							<Z>-24.7299404</Z>
							<R00>0.998436093</R00>
							<R01>0.0559068173</R01>
							<R02>2.39046557e-07</R02>
							<R10>-0.0559068173</R10>
							<R11>0.998436093</R11>
							<R12>2.48335959e-06</R12>
							<R20>-9.9836015e-08</R20>
							<R21>-2.49283949e-06</R21>
							<R22>1</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX6151AB780B3F4CA9A77EA11542C4E2A1">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-36.1200294</X>
							<Y>72.7200623</Y>
							<Z>-24.7299404</Z>
							<R00>0.998436093</R00>
							<R01>0.0559068173</R01>
							<R02>2.39046557e-07</R02>
							<R10>-0.0559068173</R10>
							<R11>0.998436093</R11>
							<R12>2.48335959e-06</R12>
							<R20>-9.9836015e-08</R20>
							<R21>-2.49283949e-06</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4291045404</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1.29999995</X>
							<Y>1.29999995</Y>
							<Z>2.4000001</Z>
						</Vector3>
					</Properties>
					<Item class="Sound" referent="RBX6F85BC43F97347F3818A974EFEF82610">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">CoilSound</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=99173388</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="SpecialMesh" referent="RBXFFFE9C44FE2842DABEBCA45842637DD6">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=211683386</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.899999976</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=211683308 </url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Script" referent="RBX7C33109640A94316A1B256629F305F50">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{C7F80435-509E-40CF-BD4A-1F639E92101C}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

local function Create_PrivImpl(objectType)
	if type(objectType) ~= 'string' then
		error("Argument of Create must be a string", 2)
	end
	--return the proxy function that gives us the nice Create'string'{data} syntax
	--The first function call is a function call using Lua's single-string-argument syntax
	--The second function call is using Lua's single-table-argument syntax
	--Both can be chained together for the nice effect.
	return function(dat)
		--default to nothing, to handle the no argument given case
		dat = dat or {}

		--make the object to mutate
		local obj = Instance.new(objectType)
		local parent = nil

		--stored constructor function to be called after other initialization
		local ctor = nil

		for k, v in pairs(dat) do
			--add property
			if type(k) == 'string' then
				if k == 'Parent' then
					-- Parent should always be set last, setting the Parent of a new object
					-- immediately makes performance worse for all subsequent property updates.
					parent = v
				else
					obj[k] = v
				end


			--add child
			elseif type(k) == 'number' then
				if type(v) ~= 'userdata' then
					error("Bad entry in Create body: Numeric keys must be paired with children, got a: "..type(v), 2)
				end
				v.Parent = obj


			--event connect
			elseif type(k) == 'table' and k.__eventname then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create.E\'"..k.__eventname.."\']` must have a function value\
							got: "..tostring(v), 2)
				end
				obj[k.__eventname]:connect(v)


			--define constructor function
			elseif k == t.Create then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create]` should be paired with a constructor function, \
							got: "..tostring(v), 2)
				elseif ctor then
					--ctor already exists, only one allowed
					error("Bad entry in Create body: Only one constructor function is allowed", 2)
				end
				ctor = v


			else
				error("Bad entry ("..tostring(k).." =&gt; "..tostring(v)..") in Create body", 2)
			end
		end

		--apply constructor function if it exists
		if ctor then
			ctor(obj)
		end

		if parent then
			obj.Parent = parent
		end

		--return the completed object
		return obj
	end
end

--now, create the functor:
Create = setmetatable({}, {__call = function(tb, ...) return Create_PrivImpl(...) end})

--and create the "Event.E" syntax stub. Really it's just a stub to construct a table which our Create
--function can recognize as special.
Create.E = function(eventName)
	return {__eventname = eventName}
end


BaseUrl = "http://wwww.roblox.com/asset/?id="

Sounds = {
	CoilSound = Handle:WaitForChild("CoilSound"),
}

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
	Anchored = false,
}

BaseEnchantmentCircle = BasePart:Clone()
BaseEnchantmentCircle.Name = "EnchantmentCircle"
BaseEnchantmentCircle.Transparency = 1
BaseEnchantmentCircle.Size = Vector3.new(9.8, 0.2, 9.8)
BaseEnchantmentCircle.CanCollide = false
for i, v in pairs({"Top", "Bottom"}) do
	local EnchantmentDecal = Create("Decal"){
		Name = "Decal",
		Transparency = 0,
		Texture = (BaseUrl .. "212259445"),
		Face = Enum.NormalId[v],
		Parent = BaseEnchantmentCircle,
	}
end

SpeedForSmoke = 10

ReloadTime = 3

Rate = (1 / 60)

MouseDown = false
ToolEquipped = false

Tool.Enabled = true

function SetUpCloak(CreateNew)
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("BasePart") and v ~= Handle then
			v:Destroy()
		end
	end
	if not CreateNew then
		return
	end
	SmokePart = BasePart:Clone()
	SmokePart.Name = "SmokePart"
	SmokePart.Transparency = 1
	SmokePart.CanCollide = false
	SmokeWeld = Create("Weld"){
		Name = "Weld",
		Part0 = Torso,
		Part1 = SmokePart,
		C0 = (CFrame.new(0, -3.5, 0) * CFrame.Angles((math.pi / 4), 0, 0)),
		C1 = CFrame.new(0, 0, 0),
		Parent = SmokePart,
	}
	Smoke = Create("Smoke"){
		Name = "Smoke",
		Enabled = (Torso.Velocity.magnitude &gt; SpeedForSmoke),
		RiseVelocity = 2,
		Opacity = 0.25,
		Color = Color3.new((255 / 255), (0 / 255), (50 / 255)),
		Size = 0.5,
		Parent = SmokePart,
	}
	Cloak = Handle:Clone()
	Cloak.Name = "Cloak"
	Cloak.Transparency = 0
	Cloak.CanCollide = false
	CloakWeld = Create("Weld"){
		Name = "Weld",
		Part0 = Torso,
		Part1 = Cloak,
		C0 = ((CFrame.new(0, -1, 0, 1, 0, -0, 0, 0, 1, 0, -1, -0) + Vector3.new(1.5, 1.5, -1.5)) * CFrame.Angles((math.pi / 2), 0, 0)),
		C1 = Tool.Grip,
		Parent = Cloak,
	}
	for i, v in pairs({Cloak, SmokePart}) do
		v.Parent = Tool
	end
	Spawn(function()
		EnchantmentCircle = BaseEnchantmentCircle:Clone()
		local SpinVelocity = Create("BodyAngularVelocity"){
			angularvelocity = Vector3.new(0, 1, 0),
			maxTorque = Vector3.new(0, math.huge, 0),
			Parent = EnchantmentCircle,
		}
		local SpinPosition = Create("BodyPosition"){
			maxForce = Vector3.new(math.huge, math.huge, math.huge),
			Parent = EnchantmentCircle,
		}
		local BodyGyro = Create("BodyGyro"){
			maxTorque = Vector3.new(math.huge, 0, math.huge),
			Parent = EnchantmentCircle,
			cframe = CFrame.new(0, 0, 0)
		}
		EnchantmentCircle.CFrame = (CFrame.new(Torso.Position) * CFrame.new(0, -3, 0))
		SpinPosition.position = EnchantmentCircle.CFrame.p
		EnchantmentCircle.Parent = Tool
		local StartTime = tick()
		while EnchantmentCircle and EnchantmentCircle.Parent and ToolEquipped and CheckIfAlive() do
			if math.abs(Torso.Velocity.Y) &lt; 15 and Humanoid:GetState().Name ~= "Freefall" then
				SpinPosition.position = (Torso.CFrame * CFrame.new(0, -3, 0)).p
			end
			Smoke.Enabled = (Torso.Velocity.Magnitude &gt; SpeedForSmoke)
			wait(Rate)
		end
		if EnchantmentCircle and EnchantmentCircle.Parent then
			EnchantmentCircle:Destroy()
		end
	end)
end
function Activated()
	if not Tool.Enabled or not CheckIfAlive() or not ToolEquipped or MouseDown then
		return
	end
	MouseDown = true
end

function CheckIfAlive()
	return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		Sounds.CoilSound:Play()
		Humanoid.WalkSpeed = (16 * 2)
		SetUpCloak(true)
		Handle.Transparency = 1
	end)
	ToolEquipped = true
end

function Unequipped()
	if CheckIfAlive() then
		Humanoid.WalkSpeed = 16
	end
	Spawn(function()
		SetUpCloak(false)
	end)
	Handle.Transparency = 0
	ToolEquipped = false
end

SetUpCloak(false)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX3D8EF2C5D51F44A8BCF5BBACEB0F4699">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MouseIcon</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{D2F61026-5E28-43A6-8870-6C8D64DC9496}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Camera" referent="RBX2245EC0F5FCD4B8E85AD13B522DEE348">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>-35.1449928</X>
							<Y>72.8780289</Y>
							<Z>-21.8256931</Z>
							<R00>0.952054858</R00>
							<R01>-0.034147203</R01>
							<R02>0.304015666</R02>
							<R10>-0</R10>
							<R11>0.993751168</R11>
							<R12>0.111618645</R12>
							<R20>-0.305927396</R20>
							<R21>-0.106267072</R21>
							<R22>0.946105599</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">75</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>-35.6802902</X>
							<Y>72.6814957</Y>
							<Z>-23.4915543</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX1AD02A4B6D034C8F813474053E60158C">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{E51B0C7E-06D7-44B1-9F22-D31D2BA0FFC6}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://wwww.roblox.com/asset/?id="

Animations = {
	Flying = {Animation = Tool:WaitForChild("Flying"), FadeTime = nil, Weight = nil, Speed = 0.5, Manual = true},
}

AnimationTracks = {}

Gravity = 196.20
JumpHeightPercentage = 0.25

Gliding = false
SpaceDown = false

LastTeleport = 0

BaseSpeed = 16
IncreasedSpeed = (BaseSpeed * 1.5)
FlightSpeed = (BaseSpeed * 3)

ToolEquipped = false

function CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.find(string.lower(String), string.lower(v)) then
			return true
		end
	end
	return false
end

function CheckIntangible(Hit)
	local ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Bullet"}
	if Hit and Hit.Parent then
		if ((not Hit.CanCollide or CheckTableForString(ProjectileNames, Hit.Name)) and not Hit.Parent:FindFirstChild("Humanoid")) then
			return true
		end
	end
	return false
end

function CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
	local Ignore = ((type(Ignore) == "table" and Ignore) or {Ignore})
	local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
	if RayHit and CheckIntangible(RayHit) then
		if DelayIfHit then
			wait()
		end
		RayHit, RayPos, RayNormal = CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
	end
	return RayHit, RayPos, RayNormal
end

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	local function StopAnimation(Animation)
		for i, v in pairs(AnimationTracks) do
			if v.Animation == Animation then
				v.AnimationTrack:Stop(value.EndFadeTime)
				if v.TrackStopped then
					v.TrackStopped:disconnect()
				end
				table.remove(AnimationTracks, i)
			end
		end
	end
	if mode == "PlayAnimation" then
		for i, v in pairs(AnimationTracks) do
			if v.Animation == value.Animation then
				if value.Speed then
					v.AnimationTrack:AdjustSpeed(value.Speed)
					return
				elseif value.Weight or value.FadeTime then
					v.AnimationTrack:AdjustWeight(value.Weight, value.FadeTime)
					return
				else
					StopAnimation(value.Animation, false)
				end
			end
		end
		local AnimationMonitor = Create("Model"){}
		local TrackEnded = Create("StringValue"){Name = "Ended"}
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		local TrackStopped
		if not value.Manual then
			TrackStopped = AnimationTrack.Stopped:connect(function()
				if TrackStopped then
					TrackStopped:disconnect()
				end
				StopAnimation(value.Animation, true)
				TrackEnded.Parent = AnimationMonitor
			end)
		end
		table.insert(AnimationTracks, {Animation = value.Animation, AnimationTrack = AnimationTrack, TrackStopped = TrackStopped})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
		if TrackStopped then
			AnimationMonitor:WaitForChild(TrackEnded.Name)
		end
		return TrackEnded.Name
	elseif mode == "StopAnimation" and value then
		StopAnimation(value.Animation)
	end
end

function GetAllConnectedParts(Object)
	local Parts = {}
	local function GetConnectedParts(Object)
		for i, v in pairs(Object:GetConnectedParts()) do
			local Ignore = false
			for ii, vv in pairs(Parts) do
				if v == vv then
					Ignore = true
				end
			end
			if not Ignore then
				table.insert(Parts, v)
				GetConnectedParts(v)
			end
		end
	end
	GetConnectedParts(Object)
	return Parts
end

function SetGravityEffect(Table)
	local Table = (Table or {})
	local Multiplier = (Table.Multiplier or 1)
	if not GravityEffect or not GravityEffect.Parent then
		GravityEffect = Create(Table.Class or "BodyForce"){
			Name = "GravityCoilEffect",
		}
		for i, v in pairs(Table.Properties or {}) do
			pcall(function()
				GravityEffect[i] = v
			end)
		end
	end
	local TotalMass = 0
	local ConnectedParts = GetAllConnectedParts(Torso)
	for i, v in pairs(ConnectedParts) do
		if v:IsA("BasePart") then
			TotalMass = (TotalMass + v:GetMass())
		end
	end
	local TotalMass = ((TotalMass * Gravity) * Multiplier)
	if GravityEffect:IsA("BodyVelocity") then
		GravityEffect.maxForce = Vector3.new(0, TotalMass, 0)
	elseif GravityEffect:IsA("BodyForce") then
		GravityEffect.force = Vector3.new(0, TotalMass, 0)
	end
	GravityEffect.Parent = Torso
	return GravityEffect
end

function HandleGravityEffect(Enabled, Table)
	if not CheckIfAlive() then
		return
	end
	for i, v in pairs(Torso:GetChildren()) do
		if v:IsA("BodyForce") or v:IsA("BodyVelocity") then
			Debris:AddItem(v, 0)
		end
	end
	for i, v in pairs({ToolUnequipped1, DescendantAdded, DescendantRemoving}) do
		if v then
			v:disconnect()
		end
	end
	if Enabled then
		CurrentlyEquipped = true
		ToolUnequipped1 = Tool.Unequipped:connect(function()
			CurrentlyEquipped = false
		end)
		SetGravityEffect(Table)
		DescendantAdded = Character.DescendantAdded:connect(function()
			if not CurrentlyEquipped or not CheckIfAlive() then
				return
			end
			SetGravityEffect(Table)
		end)
		DescendantRemoving = Character.DescendantRemoving:connect(function()
			if not CurrentlyEquipped or not CheckIfAlive() then
				return
			end
			SetGravityEffect(Table)
		end)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent and Player and Player.Parent) and true) or false)
end

function Activated()
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	local Time = tick()
	local Camera = game:GetService("Workspace").CurrentCamera
	if (Time - LastTeleport) &gt; 2 then
		local Dir = Camera.CoordinateFrame.p - Torso.CFrame.p
		Dir = Vector3.new(Dir.X, 0, Dir.Z).unit
		local BodyPosition = Create("BodyPosition"){
			maxForce = Vector3.new(math.huge, 0, math.huge),
			position = (Torso.CFrame.p - Dir * 40),
		}
		Debris:AddItem(BodyPosition, 0.5)
		BodyPosition.Parent = Torso
		LastTeleport = Time
	end
end

function IsFreeFalling()
	return (CheckIfAlive() and Humanoid:GetState() == Enum.HumanoidStateType.Freefall)
end

function KeyPressed(Key, Down)
	if Key == " " then
		SpaceDown = Down
		local CurrentState = Humanoid:GetState().Name
		local RayHit, RayPos, RayNormal = CastRay(Torso.Position, Vector3.new(0, -1, 0), (Torso.Size.Y * 2 + 0.2), {Character}, false)
		if SpaceDown and not Gliding and RayHit and CurrentState ~= "None" and CurrentState ~= "Freefall" and CurrentState ~= "FallingDown" and CurrentState ~= "GettingUp" then
			if BodyForce and BodyForce.Parent then
				Debris:AddItem(GravityEffect, 0)
			end
			BodyForce = SetGravityEffect({Multiplier = 3.5})
			Debris:AddItem(BodyForce, 0.2)
		elseif SpaceDown and not Gliding and IsFreeFalling() then
			Gliding = true
			HandleGravityEffect(true, {Class = "BodyVelocity", Properties = {P = 500, velocity = Vector3.new(0, -10, 0)}})
			for i, v in pairs({BodyForce, BodyGyro}) do
				if v and v.Parent then
					Debris:AddItem(v, 0)
				end
			end
			Torso.Velocity = Vector3.new(0, 0, 0)
			Torso.RotVelocity = Vector3.new(0, 0, 0)
			Humanoid.WalkSpeed = FlightSpeed
			Humanoid.AutoRotate = false
			BodyGyro = Create("BodyGyro"){
				maxTorque = Vector3.new(math.huge, math.huge, math.huge),
				P = (10 ^ 5),
				Parent = Torso,
			}
			SetAnimation("PlayAnimation", Animations.Flying)
			while IsFreeFalling() and SpaceDown and Gliding and ToolEquipped do
				local Camera = game:GetService("Workspace").CurrentCamera
				local Velocity = Torso.Velocity
				Velocity = Vector3.new(Velocity.X, 0, Velocity.Z)
				local FlightDirection = Camera.CoordinateFrame.lookVector
				if Velocity.Magnitude &gt; 10 then
					FlightDirection = Velocity.Unit
				end
				FlightDirection = (FlightDirection * Vector3.new(1, 0, 1))
				local FlightCFrame = (CFrame.new(Torso.Position, (Torso.CFrame + FlightDirection * 2).p) * CFrame.Angles(-(math.pi / 2), (math.pi * 2), 0))
				if tostring(FlightCFrame.p.X) ~= "-1.#IND" and FlightCFrame.p.Y ~= "-1.#IND" and FlightCFrame.p.Z ~= "-1.#IND" then
					BodyGyro.cframe = FlightCFrame
				end
				wait()
			end
			SetAnimation("StopAnimation", Animations.Flying)
			Humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
			Humanoid.AutoRotate = true
			if CheckIfAlive() then
				Humanoid.WalkSpeed = ((ToolEquipped and IncreasedSpeed) or BaseSpeed)
			end
			Gliding = false
			HandleGravityEffect(false)
			Debris:AddItem(BodyGyro, 0)
		end
	end
end

function Equipped(Mouse)
	Character = Tool.Parent
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	Player = Players:GetPlayerFromCharacter(Character)
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		Humanoid.WalkSpeed = IncreasedSpeed
		Mouse.KeyDown:connect(function(Key)
			KeyPressed(Key, true)
		end)
		Mouse.KeyUp:connect(function(Key)
			KeyPressed(Key, false)
		end)
		for i, v in pairs({HumanoidDied}) do
			if v then
				v:disconnect()
			end
		end
		HumanoidDied = Humanoid.Died:connect(function()
			if GravityEffect and GravityEffect.Parent then
				Debris:AddItem(GravityEffect, 0)
			end
		end)
		local CurrentlyEquipped = true
		if ToolUnequipped2 then
			ToolUnequipped2:disconnect()
		end
		ToolUnequipped2 = Tool.Unequipped:connect(function()
			CurrentlyEquipped = false
		end)
	end)
	ToolEquipped = true
end

function Unequipped()
	SpaceDown = false
	if CheckIfAlive() then
		Humanoid.WalkSpeed = BaseSpeed
		Humanoid.AutoRotate = true
		Humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
	end
	for i, v in pairs(AnimationTracks) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs({HumanoidDied, ToolUnequipped2, BodyForce, BodyGyro, ToolUnequipped1, DescendantAdded, DescendantRemoving}) do
		if tostring(v) == "Connection" then
			v:disconnect()
		elseif type(v) == "userdata" and v and v.Parent then
			Debris:AddItem(v, 0)
		end
	end
	HandleGravityEffect(false)
	ToolEquipped = false
end

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXBB23656CE74248BABEA74AAEBB91EDAC">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=257279573</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Flying</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
			</Item>
		</Item>
		