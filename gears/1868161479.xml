<Item class="Model" referent="RBXFCAAB6717B2D452A8CF56F1A0D24F773">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">1868161479</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBX545D17EF63374E4C8D182CC6987CE5CE">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>-1.25</X>
						<Y>-1</Y>
						<Z>0.100000001</Z>
						<R00>-0.823578298</R00>
						<R01>-0.031555742</R01>
						<R02>0.566324174</R02>
						<R10>-0.453762144</R10>
						<R11>-0.5624156</R11>
						<R12>-0.691222489</R12>
						<R20>0.34032163</R20>
						<R21>-0.826252341</R21>
						<R22>0.448874444</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">OrbitalViolinStrike</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=181327214</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>-0.00486700004</X>
							<Y>0.403710008</Y>
							<Z>-0.00200999994</Z>
							<R00>-0.858361006</R00>
							<R01>-0.513046265</R01>
							<R02>3.03151637e-06</R02>
							<R10>0.362776011</R10>
							<R11>-0.606952846</R11>
							<R12>-0.70710814</R12>
							<R20>0.362780988</R20>
							<R21>-0.606952846</R21>
							<R22>0.707105517</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX64F19D02D4864DF7B3E0A4DF0B324C00">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-0.00486700004</X>
							<Y>0.403710008</Y>
							<Z>-0.00200999994</Z>
							<R00>-0.858361006</R00>
							<R01>-0.513046265</R01>
							<R02>3.03151637e-06</R02>
							<R10>0.362776011</R10>
							<R11>-0.606952846</R11>
							<R12>-0.70710814</R12>
							<R20>0.362780988</R20>
							<R21>-0.606952846</R21>
							<R22>0.707105517</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1.5</X>
							<Y>3.5625</Y>
							<Z>0.75</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX9551FE7E963F42A9B6F53EA03E5F44F2">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>rbxassetid://1868179726</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.850000024</X>
								<Y>0.850000024</Y>
								<Z>0.850000024</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>rbxassetid://1868148119</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX1FF24307B4A2422599E388791723E6AD">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">ViolinSong</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset?id=183434101</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBX7EE986E2988C45868673E77C59CBDF3A">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{29FFE01C-AF4E-4A99-8CC3-F4930495C0C7}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
ContentProvider = game:GetService("ContentProvider")

Animations = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ClientControl.OnClientInvoke = (function(Mode, Value)
	if Mode == "PlayAnimation" and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
		table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
	elseif Mode == "StopAnimation" and Value then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	elseif Mode == "Preload" and Value then
		ContentProvider:Preload(Value)
	elseif Mode == "PlaySound" and Value then
		Value:Play()
	elseif Mode == "StopSound" and Value then
		Value:Stop()
	elseif Mode == "MousePosition" then
		return PlayerMouse.Hit.p
	elseif Mode == "DisableJump" then
		DisableJump(Value)
	end
end)

function InvokeServer(Mode, Value)
	pcall(function()
		local ServerReturn = ServerControl:InvokeServer(Mode, Value)
		return ServerReturn
	end)
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.Button1Down:connect(function()
		InvokeServer("MouseClick", {Down = true})
	end)
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	if PreventJump then
		PreventJump:disconnect()
	end
	Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX749AAB22D599446D85F6E292DA1E8E4F">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MouseIcon</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{349085FE-0B67-476C-9D5C-DF10E04DB7F0}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXFFAF08F07FF74B54AB6BF0B3325F9A41">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset?id=183428213</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">BowEquip</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX01B8CD3FE0BC4F569F9BE79DEBC9D11B">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset?id=183436589</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">StartPlaying</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXDCAE369F51AC446E822CC048E0AFD8F7">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset?id=183438463</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Playing</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Script" referent="RBXD73B7554D1BC4ADDA9032CB4EBEB8733">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{EBEB42B2-4B80-416B-8776-99E07F33B1FC}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")
Mesh = Handle:WaitForChild("Mesh")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

ViolinSong = Handle:WaitForChild("ViolinSong")

BasePart = Instance.new("Part")
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

Grips = {
	Equipped = CFrame.new(-1.25, -1, 0.100000001, -0.823578298, -0.031555742, 0.566324174, -0.453762144, -0.5624156, -0.691222489, 0.34032163, -0.826252341, 0.448874444),
	Default = CFrame.new(0, 0.5, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
}

Meshes = {
	ViolinWithBow = "http://www.roblox.com/asset?id=183439731",
	Violin = "http://www.roblox.com/asset?id=1868147478",
	Bow = "http://www.roblox.com/asset?id=181327174"
}

Animations = {
	BowEquip = {Animation = Tool:WaitForChild("BowEquip"), FadeTime = nil, Weight = nil, Speed = nil, Duration = 2},
	StartPlaying = {Animation = Tool:WaitForChild("StartPlaying"), FadeTime = nil, Weight = nil, Speed = nil, Duration = 1},
	Playing = {Animation = Tool:WaitForChild("Playing"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil}
}

Sounds = {
}


Bow = BasePart:Clone()
Bow.Name = "ViolinBow"
Bow.Size = Vector3.new(0.25, 4.5, 0.5)
BowMesh = Instance.new("SpecialMesh")
BowMesh.MeshType = Enum.MeshType.FileMesh
BowMesh.MeshId = Meshes.Bow
BowMesh.TextureId = Mesh.TextureId
BowMesh.Scale = Mesh.Scale
BowMesh.Parent = Bow

OrbitalViolinModel = Instance.new("Model")
OrbitalViolinModel.Name = "OrbitalViolin"
OrbitalViolin = BasePart:Clone()
OrbitalViolin.Name = "Violin"
OrbitalViolin.Size = Vector3.new(2, 4.75, 1)
ViolinMesh = Instance.new("SpecialMesh")
ViolinMesh.MeshType = Enum.MeshType.FileMesh
ViolinMesh.MeshId = Meshes.Violin
ViolinMesh.TextureId = Mesh.TextureId
ViolinMesh.Scale = Vector3.new(1, 1, 1)
ViolinMesh.Parent = OrbitalViolin
OrbitalViolin.Parent = OrbitalViolinModel
OrbitalBow = BasePart:Clone()
OrbitalBow.Name = "Bow"
OrbitalBow.Size = Vector3.new(2, 4.75, 1)
BowMesh = Instance.new("SpecialMesh")
BowMesh.MeshType = Enum.MeshType.FileMesh
BowMesh.MeshId = Meshes.Bow
BowMesh.TextureId = Mesh.TextureId
BowMesh.Scale = Vector3.new(1, 1, 1)
BowMesh.Parent = OrbitalBow
OrbitalBow.Parent = OrbitalViolinModel
OrbitalViolinWeld = Instance.new("Weld")
OrbitalViolinWeld.Part0 = OrbitalViolin
OrbitalViolinWeld.Part1 = OrbitalBow
OrbitalViolinWeld.C0 = CFrame.new(0.5, -0.5, -0.5) * CFrame.Angles(0, math.pi, (math.pi / 2.75))
OrbitalViolinWeld.Parent = OrbitalViolin

ServerControl = (Tool:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Tool

Mesh.MeshId = Meshes.Violin
Tool.Grip = Grips.Default
Tool.Enabled = true

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if player == Player then
		if Mode == "MouseClick" and Value.Down then
			Activated()
		elseif Mode == "KeyPress" then
			local Key = Value.Key
			local Down = Value.Down
		end
	end
end)

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

function TagHumanoid(humanoid, player)
	local Creator_Tag = Instance.new("ObjectValue")
	Creator_Tag.Name = "creator"
	Creator_Tag.Value = player
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

-- Create table of possible incoming vectors
for x = -1, 1 do
	for z = -1, 1 do
		table.insert(PossibleIncomingVectors, Vector3.new(x, 1, z).unit)
	end
end

function GetRandomFloat(Minimum, Maximum)
	local UnitRandom = math.random()
	local Interval = (Maximum - Minimum)
	-- there is potential overflow here if the interval is larger than max float
	if Interval &lt;= 0 then
		return --The range beween minimum and maximum is less than zero.
	end
	return ((UnitRandom * Interval) + Minimum)
end

function RandomPointInCircle(MinRadius, MaxRadius)
	local OutwardVector = Vector3.new(0, 0, GetRandomFloat(MinRadius, MaxRadius))
	local Rotation = (math.random() * math.pi * 2)
	return CFrame.Angles(0, Rotation, 0) * OutwardVector
end

function CheckTable(Table, String)
	for i, v in pairs(Table) do
		if string.lower(v) == string.lower(String) then
			return true
		end
	end
	return false
end

function RayIgnoreCheck(Hit)
	if not Hit or not Hit.Parent then
		return
	end
	local IgnoreNames = {"Water", "Effect", "Rocket", "Bullet", "Handle", "Projectile", "Arrow"}
	if Hit.Transparency &gt;= 1 or CheckTable(IgnoreNames, Hit.Name) then
		return true
	end
	return false
end

-- @preconditions: vec should be a unit vector, and 0 &lt; rayLength &lt;= 1000
function RayCast(StartPos, Vector, RayLength)
	local HitObject, HitPos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new((StartPos + (Vector * 0.01)), (Vector * RayLength)), {Character})
	if HitObject and HitPos then
		local Distance = (RayLength - (HitPos - StartPos).magnitude)
		if RayIgnoreCheck(HitObject) and Distance &gt; 0 then
			-- there is a chance here for potential infinite recursion
			return RayCast(HitPos, Vector, Distance)
		end
	end
	return HitObject, HitPos
end

function FindOptimalLaunchVector(Destination)
	local BestDistance = 0
	local BestVector = Vector3.new(0, 1, 0)
	local BestPosition = (Destination + BestVector)
	for i, v in pairs(PossibleIncomingVectors) do
		local HitObject, HitPos = RayCast(Destination, v, LaunchDistance)
		if (HitPos - Destination).magnitude &gt; BestDistance then
			BestVector = v
			BestDistance = (HitPos - Destination).magnitude
			BestPosition = HitPos
		end
	end
	return BestVector, BestPosition, BestDistance
end

function Activated()
	if not Tool.Enabled or not CheckIfAlive() then
		return
	end
	local LeftArm = Character:FindFirstChild("Left Arm")
	if not LeftArm then
		return
	end
	Tool.Enabled = false
	local CurrentlyEquipped = true
	ToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
	end)
	ViolinBow = Bow:Clone()
	local Weld = Instance.new("Weld")
	Weld.Part0 = Torso
	Weld.Part1 = ViolinBow
	Weld.C0 = CFrame.new(1.05, -1, 1) * CFrame.Angles((math.pi / 2),0,0)
	Weld.Parent = ViolinBow
	ViolinBow.Parent = Tool
	local BowEquip = Animations.BowEquip
	InvokeClient("PlayAnimation", BowEquip)
	wait(BowEquip.Duration / 2)
	if not CurrentlyEquipped then
		return
	end
	Weld.Part0 = LeftArm
	Weld.C0 = CFrame.new(0, -1, -2) * CFrame.Angles(-(math.pi / 2), 0, 0)
	Weld.C0 = Weld.C0 * CFrame.Angles(0, -(math.pi / 4), 0)
	wait(BowEquip.Duration / 2)
	if not CurrentlyEquipped then
		return
	end
	Tool.Grip = Grips.Equipped
	local StartPlaying = Animations.StartPlaying
	InvokeClient("PlayAnimation", StartPlaying)
	wait(StartPlaying.Duration)
	if not CurrentlyEquipped then
		return
	end
	local Playing = Animations.Playing
	InvokeClient("PlayAnimation", Playing)
	ViolinSong:Play()
	local StartTime = tick()
	local Creator = Player
	local CreatorCharacter = Character
	while (tick() - StartTime) &lt; Duration and CurrentlyEquipped do
		local ViolinOffset = RandomPointInCircle(20, 100)
		local MeteorViolinModel = OrbitalViolinModel:Clone()
		local MeteorViolin = MeteorViolinModel.Violin
		local MeteorBow = MeteorViolinModel.Bow
		local MeteorFire = Instance.new("Fire")
		MeteorFire.Heat = 20
		MeteorFire.Size = 18
		MeteorFire.Parent = MeteorViolin
		MeteorViolinModel.Parent = game:GetService("Workspace")
		local TargetPoint = Instance.new("Part")
		TargetPoint.Transparency = 1
		TargetPoint.CanCollide = false
		TargetPoint.Anchored = true
		TargetPoint.CFrame = CFrame.new(ViolinOffset) + Torso.CFrame.p
		Debris:AddItem(TargetPoint, 30)
		Debris:AddItem(MeteorViolinModel, 30)
		local ViolinPropulsion = Instance.new("RocketPropulsion")
		ViolinPropulsion.Target = TargetPoint
		ViolinPropulsion.MaxThrust = 100000
		ViolinPropulsion.MaxSpeed = 40
		ViolinPropulsion.Parent = MeteorViolin
		local MeteorHit = false
		for i, v in pairs(MeteorViolinModel:GetChildren()) do
			if v:IsA("BasePart") then
				v.Touched:connect(function(Hit)
					if Hit == MeteorViolin or Hit == MeteorBow or MeteorHit then
						return
					end
					local Explosion = Instance.new("Explosion")
					Explosion.BlastPressure = 0
					Explosion.BlastRadius = 15
					Explosion.Position = MeteorViolin.CFrame.p
					Explosion.Hit:connect(function(Hit2)
						if not Hit2 or not Hit2.Parent then
							return
						end
						local character = Hit2.Parent
						if character == CreatorCharacter then
							return
						end
						local humanoid = character:FindFirstChild("Humanoid")
						if humanoid then
							UntagHumanoid(humanoid)
							TagHumanoid(humanoid, Creator)
							humanoid:TakeDamage(StrikeDamage)
						end
					end)
					Explosion.Parent = MeteorViolinModel
					for ii, vv in pairs(MeteorViolinModel:GetChildren()) do
						if vv:IsA("BasePart") then
							vv.Anchored = true
							vv.Transparency = 1
						end
					end
					if MeteorFire and MeteorFire.Parent then
						MeteorFire.Enabled = false
					end
					Debris:AddItem(MeteorViolinModel, 2)
				end)
			end
		end
		local BestVector, BestPosition, BestDistance = FindOptimalLaunchVector(TargetPoint.CFrame.p)
		TargetPoint.Parent = MeteorViolinModel
		MeteorViolin.CFrame = CFrame.new(BestPosition)
		ViolinPropulsion:Fire()
		wait(2)
	end
	ViolinSong:Stop()
	InvokeClient("StopAnimation", Playing)
	Tool.Grip = Grips.Default
	if ViolinBow and ViolinBow.Parent then
		ViolinBow:Destroy()
	end
	wait(ReloadTime)
	Tool.Enabled = true
end

function CheckIfAlive()
	return (Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	if not CheckIfAlive() then
		return
	end
	Mesh.MeshId = Meshes.Violin
end

function Unequipped()
	Mesh.MeshId = Meshes.ViolinWithBow
	Tool.Grip = Grips.Default
	ViolinSong:Stop()
	if ViolinBow and ViolinBow.Parent then
		ViolinBow:Destroy()
	end
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	for i, v in pairs(Animations) do
		InvokeClient("StopAnimation", v)
	end
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Camera" referent="RBX93EA597BA01242E28233434558B0AFA4">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>0.771419942</X>
							<Y>2.38174248</Y>
							<Z>-2.44363117</Z>
							<R00>-0.952992678</R00>
							<R01>-0.185162768</R01>
							<R02>0.239833027</R02>
							<R10>-0</R10>
							<R11>0.791544914</R11>
							<R12>0.611111104</R12>
							<R20>-0.302993625</R20>
							<R21>0.582384408</R21>
							<R22>-0.754336357</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>-0.00486695766</X>
							<Y>0.403710008</Y>
							<Z>-0.00200998783</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		