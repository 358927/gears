<Item class="Model" referent="RBXF80CA0FB54F24472AB505D1054DCF295">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">129471121</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBX6113127589D942C08E95FE0F360317C2">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>1.5</X>
						<Y>0.649999976</Y>
						<Z>-1.89999998</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">TrololoCapeOfInvisibility</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=129414426</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>-0.239998996</X>
							<Y>17.2386608</Y>
							<Z>23.2437458</Z>
							<R00>1</R00>
							<R01>1.44189284e-14</R01>
							<R02>-2.26124191e-15</R02>
							<R10>-1.43675287e-14</R10>
							<R11>0.999773443</R11>
							<R12>0.0212856699</R12>
							<R20>2.56764634e-15</R20>
							<R21>-0.0212856699</R21>
							<R22>0.999773443</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX9BB55D4E3F934F65A49DEFABB62A4E88">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-0.239998996</X>
							<Y>17.2386608</Y>
							<Z>23.2437458</Z>
							<R00>1</R00>
							<R01>1.44189284e-14</R01>
							<R02>-2.26124191e-15</R02>
							<R10>-1.43675287e-14</R10>
							<R11>0.999773443</R11>
							<R12>0.0212856699</R12>
							<R20>2.56764634e-15</R20>
							<R21>-0.0212856699</R21>
							<R22>0.999773443</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1.29999995</X>
							<Y>1.29999995</Y>
							<Z>2.4000001</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX9ECDF9358AC1449EAF70021EBC2845AF">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=114046169</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1.29999995</X>
								<Y>1.29999995</Y>
								<Z>1.29999995</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=129317782 </url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX49247BF58F3E4BCA83E869A337FC730B">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">WooshStart</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=129425637</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBXF60F753729F34D63BF6857E79360418B">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">WooshEnd</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=129425664</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBX3655816EC8824E6EA510F6F625400118">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MouseIcon</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{B7C9783D-4D16-43B7-9B40-A493ABD97ABA}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Script" referent="RBXC1906F40E5154CEEAD6545F5FD51AD52">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{72941C4D-F420-4FE6-93CC-F377CE92E703}</string>
						<ProtectedString name="Source">--Rescripted by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

ConfusionScript = script:WaitForChild("ConfusionScript")

local function Create_PrivImpl(objectType)
	if type(objectType) ~= 'string' then
		error("Argument of Create must be a string", 2)
	end
	--return the proxy function that gives us the nice Create'string'{data} syntax
	--The first function call is a function call using Lua's single-string-argument syntax
	--The second function call is using Lua's single-table-argument syntax
	--Both can be chained together for the nice effect.
	return function(dat)
		--default to nothing, to handle the no argument given case
		dat = dat or {}

		--make the object to mutate
		local obj = Instance.new(objectType)
		local parent = nil

		--stored constructor function to be called after other initialization
		local ctor = nil

		for k, v in pairs(dat) do
			--add property
			if type(k) == 'string' then
				if k == 'Parent' then
					-- Parent should always be set last, setting the Parent of a new object
					-- immediately makes performance worse for all subsequent property updates.
					parent = v
				else
					obj[k] = v
				end


			--add child
			elseif type(k) == 'number' then
				if type(v) ~= 'userdata' then
					error("Bad entry in Create body: Numeric keys must be paired with children, got a: "..type(v), 2)
				end
				v.Parent = obj


			--event connect
			elseif type(k) == 'table' and k.__eventname then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create.E\'"..k.__eventname.."\']` must have a function value\
							got: "..tostring(v), 2)
				end
				obj[k.__eventname]:connect(v)


			--define constructor function
			elseif k == t.Create then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create]` should be paired with a constructor function, \
							got: "..tostring(v), 2)
				elseif ctor then
					--ctor already exists, only one allowed
					error("Bad entry in Create body: Only one constructor function is allowed", 2)
				end
				ctor = v


			else
				error("Bad entry ("..tostring(k).." =&gt; "..tostring(v)..") in Create body", 2)
			end
		end

		--apply constructor function if it exists
		if ctor then
			ctor(obj)
		end

		if parent then
			obj.Parent = parent
		end

		--return the completed object
		return obj
	end
end

--now, create the functor:
Create = setmetatable({}, {__call = function(tb, ...) return Create_PrivImpl(...) end})

--and create the "Event.E" syntax stub. Really it's just a stub to construct a table which our Create
--function can recognize as special.
Create.E = function(eventName)
	return {__eventname = eventName}
end


BaseUrl = "http://www.roblox.com/asset/?id="

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
	Anchored = false,
}

Sounds = {
	WooshStart = Handle:WaitForChild("WooshStart"),
	WooshEnd = Handle:WaitForChild("WooshEnd"),
}

Duration = 8
CoolDown = 3

TransparentObjects = {}

ToolEquipped = false

Handle.Transparency = 0
Tool.Enabled = true

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function GetTotalParts(MaxParts, PossibleParts, Parts)
	if MaxParts &lt; PossibleParts then
		return MaxParts
	elseif Parts &gt;= MaxParts then
		return 0
	elseif MaxParts &gt;= PossibleParts then
		local PartCount = (MaxParts - PossibleParts)
		if Parts &lt;= MaxParts then
			PartCount = (MaxParts - Parts)
			if PartCount &gt; PossibleParts then
				return PossibleParts
			else
				return PartCount
			end
		elseif PartCount &gt;= PossibleParts then
			return PossibleParts
		else
			return PartCount
		end
	end
end

function GetParts(Region, MaxParts, Ignore)
	local Parts = {}
	local RerunFailed = false
	while #Parts &lt; MaxParts and not RerunFailed do
		local Region = Region
		local PossibleParts = GetTotalParts(MaxParts, 100, #Parts)
		local PartsNearby = game:GetService("Workspace"):FindPartsInRegion3WithIgnoreList(Region, Ignore, PossibleParts)
		if #PartsNearby == 0 then
			RerunFailed = true
		else
			for i, v in pairs(PartsNearby) do
				table.insert(Parts, v)
				table.insert(Ignore, v)
			end
		end
	end
	return Parts
end

function CheckTableForInstance(Table, Instance)
	for i, v in pairs(Table) do
		if v == Instance then
			return true
		end
	end
	return false
end

function CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.lower(v) == string.lower(String) then
			return true
		end
	end
	return false
end

function GetPlayersNearby(Radius)
	local NegativeRegion = (Torso.Position - Vector3.new(Radius, Radius, Radius))
	local PositiveRegion = (Torso.Position + Vector3.new(Radius, Radius, Radius))
	local Region = Region3.new(NegativeRegion, PositiveRegion)
	local IgnoreList = {Character}
	for i, v in pairs(Players:GetChildren()) do
		if v:IsA("Player") and v ~= Player and v.Character and v.Character.Parent and IsTeamMate(Player, v) then
			table.insert(IgnoreList, v.Character)
		end
	end
	local Parts = GetParts(Region, 500, IgnoreList)
	local Humanoids = {}
	for i, v in pairs(Parts) do
		local character = v.Parent
		if character:IsA("Hat") then
			character = character.Parent
		end
		local humanoid = character:FindFirstChild("Humanoid")
		local torso = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
		if humanoid and humanoid.Health &gt; 0 and torso and not CheckTableForInstance(Humanoids, humanoid) then
			table.insert(Humanoids, humanoid)
		end
	end
	return Humanoids
end

function GetAllObjectsWithProperty(Parent, Property, Type)
	local Objects = {}
	local function GetObjects(Parent)
		for i, v in pairs(Parent:GetChildren()) do
			local PropertyExists = false
			pcall(function()
				local Property = v[Property]
				if type(Property) == Type then
					PropertyExists = true
				end
			end)
			if PropertyExists then
				table.insert(Objects, v)
			end
			GetObjects(v)
		end
	end
	GetObjects(Parent)
	return Objects
end

function GetTransparentObjects(Parent)
	local Objects = {}
	local IgnoreObjects = {"HumanoidRootPart"}
	for i, v in pairs(GetAllObjectsWithProperty(Parent, "Transparency", "number")) do
		table.insert(Objects, v)
	end
	for i, v in pairs(Objects) do
		if CheckTableForString(IgnoreObjects, v.Name) then
			table.remove(Objects, i)
		end
	end
	return Objects
end

function ResetTransparency(Object)
	local PartNames = {"Head", "Torso", "Left Arm", "Right Arm", "Left Leg", "Right Leg", "UpperTorso", "LowerTorso", "LowerLeftLeg", "LowerRightLeg", "UpperLeftLeg", "UpperRightLeg", "RightHand", "LeftHand", "LowerLeftArm", "LowerRightArm", "UpperRightArm", "UpperLeftArm", "RightFoot", "LeftFoot"}
	if not Object then
		for i, v in pairs({DescendantAdded, DescendantRemoving}) do
			if v then
				v:disconnect()
			end
		end
		for i, v in pairs(TransparentObjects) do
			v.Object.Transparency = ((CheckTableForString(PartNames, v.Object.Name) and 0) or v.Transparency)
		end
		TransparentObjects = {}
	else
		local Objects = GetAllObjectsWithProperty(Object, "Transparency", "number")
		for i, v in pairs(TransparentObjects) do
			for ii, vv in pairs(Objects) do
				if v.Object == vv then
					v.Object.Transparency = ((CheckTableForString(PartNames, v.Object.Name) and 0) or v.Transparency)
					table.remove(TransparentObjects, i)
					break
				end
			end
		end
	end
end

function SetTransparency(Parent, Invisible, Delay)
	local Objects = {}
	if type(Parent) == "table" then
		Objects = Parent
	else
		for i, v in pairs(GetTransparentObjects(Parent)) do
			table.insert(Objects, {Object = v, Transparency = v.Transparency})
		end
	end
	if ToolUnequipped1 then
		ToolUnequipped1:disconnect()
	end
	local CurrentlyEquipped = true
	ToolUnequipped1 = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
	end)
	Spawn(function()
		if Delay then
			local AllAltered = false
			while not AllAltered and ToolEquipped and CurrentlyEquipped and CheckIfAlive() do
				local AllCurrentlyAltered = true
				for i, v in pairs(Objects) do
					if ((Invisible and v.Object.Transparency &lt; 1) or (not Invisible and v.Object.Transparency &gt; v.Transparency)) then
						v.Object.Transparency = (v.Object.Transparency + (0.1 * ((Invisible and 1) or -1)))
						AllCurrentlyAltered = false
					end
				end
				if AllCurrentlyAltered then
					AllAltered = true
				end
				wait()
			end
			if ToolUnequipped1 then
				ToolUnequipped1:disconnect()
			end
		end
		if not ToolEquipped or not CurrentlyEquipped or not CheckIfAlive() then
			return
		end
		for i, v in pairs(Objects) do
			if Invisible then
				v.Object.Transparency = 1
			else
				ResetTransparency(v.Object)
			end
		end
	end)
	return Objects
end

function Activated()
	if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() then
		return
	end
	if Character:FindFirstChild("Invisible") then
		return
	end
	Tool.Enabled = false
	Invisible = Create("BoolValue"){
		Name = "Invisible",
		Value = true,
	}
	Debris:AddItem(Invisible, (Duration + 2))
	Invisible.Parent = Character
	for i, v in pairs({ToolUnequipped2, DescendantAdded, DescendantRemoving}) do
		if v then
			v:disconnect()
		end
	end
	local CurrentlyEquipped = true
	ToolUnequipped2 = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
	end)
	Humanoid.WalkSpeed = 26
	Sounds.WooshStart:Play()
	TransparentObjects = SetTransparency(Character, true, true)
	DescendantAdded = Character.ChildAdded:connect(function(Child)
		local Objects = SetTransparency(Child, true, false)
		for i, v in pairs(Objects) do
			table.insert(TransparentObjects, v)
		end
	end)
	DescendantRemoving = Character.ChildRemoved:connect(function(Child)
		ResetTransparency(Child)
	end)
	wait(Duration)
	Sounds.WooshEnd:Play()
	for i, v in pairs({ToolUnequipped2, DescendantAdded, DescendantRemoving}) do
		if v then
			v:disconnect()
		end
	end
	if CurrentlyEquipped then
		if CheckIfAlive() then
			Humanoid.WalkSpeed = 16
		end
		SetTransparency(TransparentObjects, false, true)
		TransparentObjects = {}
		local PlayersNearby = GetPlayersNearby(15)
		for i, v in pairs(PlayersNearby) do
			local character = v.Parent
			if character then
				local ConfusionScriptCopy = ConfusionScript:Clone()
				ConfusionScriptCopy.Disabled = false
				ConfusionScriptCopy.Parent = character
			end
		end
	end
	wait(CoolDown)
	Tool.Enabled = true
end

function MakeCape(MakeNew)
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("BasePart") and v ~= Handle then
			v:Destroy()
		end
	end
	if not MakeNew then
		return
	end
	Cape = Handle:Clone()
	Cape.Name = "Cape"
	Cape.Transparency = 0
	local Weld = Create("Weld"){
		Part0 = Torso,
		Part1 = Cape,
		C0 = CFrame.new(0, -0.15, 0.4),
		Parent = Cape,
	}
	Handle.Transparency = 1
	Cape.Parent = Tool
end

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso") or Character:FindFirstChild("UpperTorso")
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		MakeCape(true)
	end)
	ToolEquipped = true
end

function Unequipped()
	Spawn(function()
		for i, v in pairs(Sounds) do
			v:Stop()
		end
		for i, v in pairs({ToolUnequipped2, DescendantAdded, DescendantRemoving}) do
			if v then
				v:disconnect()
			end
		end
		if Invisible and Invisible.Parent then
			Invisible:Destroy()
		end
		if CheckIfAlive() then
			Humanoid.WalkSpeed = 16
		end
		Handle.Transparency = 0
		MakeCape(false)
		ResetTransparency()
		ToolEquipped = false
	end)
end

MakeCape(false)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
					<Item class="Script" referent="RBXAF3775D2FCCE4B589677D6A9B05680BC">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">ConfusionScript</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{880C9348-9F78-49C6-AB30-0EACBD896EFA}</string>
							<ProtectedString name="Source">--Rescripted by Luckymaxer

Character = script.Parent
Humanoid = Character:FindFirstChild("Humanoid")

Debris = game:GetService("Debris")

if Humanoid then
	Humanoid.WalkSpeed = (math.abs(Humanoid.WalkSpeed) * -1)
	wait(2.5)
	Humanoid.WalkSpeed = (math.abs(Humanoid.WalkSpeed) * 1)
end

Debris:AddItem(script, 0.5)
script:Destroy()</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
		