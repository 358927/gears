<Item class="Model" referent="RBXC735B331559F49F6B58687D98D7F1B81">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">125859385</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBX57CD2DD1671F4A4D9A3BB365D5DADA78">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>0</X>
						<Y>-1</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">AppleGun</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=125762514</url></Content>
					<string name="ToolTip">I BELIEVE YA, BUT MY APPLE GUN DONT</string>
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>-1.82500029</X>
							<Y>43.8200035</Y>
							<Z>-42.8600006</Z>
							<R00>0</R00>
							<R01>-0.613078952</R01>
							<R02>-0.790021777</R02>
							<R10>0</R10>
							<R11>0.790021777</R11>
							<R12>-0.613078952</R12>
							<R20>1</R20>
							<R21>0</R21>
							<R22>0</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBXF6A7EB6AAFCC47D08D8F3FCC1F42BF42">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">4</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-1.82500029</X>
							<Y>43.8200035</Y>
							<Z>-42.8600006</Z>
							<R00>0</R00>
							<R01>-0.613078952</R01>
							<R02>-0.790021777</R02>
							<R10>0</R10>
							<R11>0.790021777</R11>
							<R12>-0.613078952</R12>
							<R20>1</R20>
							<R21>0</R21>
							<R22>0</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">3</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>0.540003419</X>
							<Y>1.26000023</Y>
							<Z>5.67998886</Z>
						</Vector3>
					</Properties>
					<Item class="LocalScript" referent="RBX7AC9E1BF262541728B2A018BB86AEC63">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">false</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">LocalScript</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{93200A55-B060-469B-8A39-C32871A9A572}</string>
							<ProtectedString name="Source">------------------------
--[[UTIL Functions]]--
------------------------
--Global functions used by all classes are wrapped in UTIL
--deal with it.
local UTIL = {}

function UTIL.Class(tableIn,template)
        tableIn = tableIn or {}
        local mt = {
        __metatable = UTIL.DeepCopy(template);
        __index     = UTIL.DeepCopy(template);
        }
        return setmetatable(tableIn, mt)
end
function UTIL.MakeClass(...)
        local arg = {...}
        assert(#arg&gt;0, 'ERROR: class needs 1 argument or more')
        local members = arg[1]
        for i=2,#arg,1 do
                if type(arg[i])=='table' then
                        for key,val in pairs(arg[i]) do
                                if not members[key] then
                                        members[key] = val
                                end
                        end
                end
        end
        local function New(init)
                return UTIL.Class(init or {},members)
        end
        local function Copy(obj, ...)
                local newobj = obj:New(unpack(arg))
                for n,v in pairs(obj) do newobj[n] = v end
                return newobj
        end
        members.New  = New
        members.Copy = Copy
        return mt
end

function UTIL.DeepCopy(orig)
    local orig_type = type(orig)
    local copy
    if orig_type == 'table' then
        copy = {}
        for orig_key, orig_value in next, orig, nil do
            copy[UTIL.DeepCopy(orig_key)] = UTIL.DeepCopy(orig_value)
        end
        setmetatable(copy, UTIL.DeepCopy(getmetatable(orig)))
    else -- number, string, boolean, etc
        copy = orig
    end
    return copy
end

function UTIL.Instantiate(guiType)
	return function(data)
		local obj = Instance.new(guiType)
		for k, v in pairs(data) do
			if type(k) == 'number' then
				v.Parent = obj
			else
				obj[k] = v
			end
		end
		return obj
	end
end

function UTIL.RetroRegister(func,...)
	func()
	for _,i in ipairs({...}) do
		i:connect(func)
	end
end

-- Waits for a new character to be added if the current one is invalid
-- (Ensures that you don't have the old dead character after a respawn)
function UTIL.WaitForValidCharacter(player)
	local character = player.Character
	if not character or not character.Parent or not character:FindFirstChild('Humanoid') or character.Humanoid.Health &lt;= 0 then
		player.CharacterAdded:wait()
		wait(0) --NOTE: Necessary for server scripts executing on the same event
		character = player.Character
	end
	return character
end


-- Returns a character ancestor and its Humanoid, or nil
function UTIL.FindCharacterAncestor(subject)
	if subject and subject ~= Workspace then
		local humanoid = subject:FindFirstChild('Humanoid')
		if humanoid then
			return subject, humanoid
		else
			return UTIL.FindCharacterAncestor(subject.Parent)
		end
	end
	return nil
end

UTIL.AssetURL = 'http://www.roblox.com/asset/?id='


UTIL.TouchEnabled = game:GetService("UserInputService").TouchEnabled
do
	local suceeded,_ =pcall(function() game.Workspace.CurrentCamera:GetPanSpeed() end)
	UTIL.CanCheckPanSpeed = suceeded
end


local DebrisService = Game:GetService('Debris')
local DebugPrintOffset = 0
function UTIL.Dprint(...)
	local line = ''
	for _, segment in pairs({...}) do
		line = line .. (line and ' ' or '') .. tostring(segment)
	end
	local gui = Instance.new('ScreenGui')
	local label = Instance.new('TextLabel')
	label.Text = line
	label.Size = UDim2.new(0.25, 0, 0.05, 0)
	label.BackgroundTransparency = 0.5
	label.Position = UDim2.new(0, 0, 0, DebugPrintOffset)
	label.TextWrapped = true
	label.Parent = gui
	DebrisService:AddItem(gui, 30)
	gui.Parent = script.Parent
	DebugPrintOffset = (DebugPrintOffset &lt;= 600) and DebugPrintOffset + 30 or 0
end
--
--All Welding Related Utility functions should be put here
--
WeldUtil = {}


do


	function WeldUtil.WeldBetween(a, b)
		local weld = Instance.new("Weld")
		weld.Part0 = a
		weld.Part1 = b
		weld.C0 = CFrame.new()
		weld.C1 = b.CFrame:inverse() * a.CFrame

		weld.Parent = a
		return weld
	end

	function WeldUtil:PermaWeld(weld)
		local OriginalParent = weld.Parent
		weld.Changed:connect(function()
			Delay(0,function() weld.Parent = OriginalParent end)
		end)
	end

end

local InternalEvent =
{
	Listeners = nil,
}
do
	UTIL.MakeClass(InternalEvent)
	function InternalEvent:Connect(func)
		if not self.Listeners then self.Listeners = {} end
		table.insert(self.Listeners,func)
	end
	function InternalEvent:Fire(...)
		if not self.Listeners then return end
		local args = {...}
		for _,i in ipairs(self.Listeners) do
			Spawn(function() i(unpack(args)) end)
		end
	end
end
local PartProjectile =
{
	Damage = 5, -- Base output damage per shot.
	Range = 250, -- Max distance that the weapon can fire.
	Speed = 1,--how many studs per second to move
	DirectionRay=nil,
	Part = nil,
	StartPos = nil,
	LinearPosition = 0,
	IsAlive = true,
	IgnoreList = {},
	Arching = Vector3.new(0,1,0),--WARNING, if arching is 0, divide by 0 errors, used to arc bullets
	QuadraticA = 0,	--used for arching in equation y = A(x^2)+Bx
	QuadraticB = 0,
	EffectFunction = nil,
}
do
	UTIL.MakeClass(PartProjectile)
	function PartProjectile.New(base,ray)
		local init = nil
		--if base is a copy of this class, then copy over fields
		if type(base) == 'table' and base.Update then
			init = UTIL.DeepCopy(base)
			init.Part= base.Part:Clone()
		else
			init = UTIL.DeepCopy(PartProjectile)
			init.Part = base:Clone()
		end
		init.StartPos = CFrame.new(ray.Origin,ray.Origin+(ray.Direction.unit*math.min(ray.Direction.magnitude,init.Range)))
		init.Part.CFrame = init.StartPos
		init.Part.Parent = game.Workspace
		init.DirectionRay = Ray.new(ray.Origin,(ray.Direction.unit*math.min(ray.Direction.magnitude,init.Range)))
		init.QuadraticA = -((4*init.Arching)/math.pow(init.DirectionRay.Direction.magnitude,2))
		init.QuadraticB = ((4*init.Arching)/init.DirectionRay.Direction.magnitude)
		init.LinearPosition = 0
		table.insert(init.IgnoreList,init.Part)
		return init
	end

	function PartProjectile:Hit(part)
		local char,hum = UTIL.FindCharacterAncestor(part)

		if hum then
			hum:TakeDamage(self.Damage)
			if self.EffectFunction then
				self.EffectFunction(hum,part)
			end
		end
		self.IsAlive = false
	end

	function PartProjectile:Update(dt)
		if not self.IsAlive then return end

		self.LinearPosition = self.LinearPosition + ((self.Speed*dt)/(self.Arching.magnitude/(self.DirectionRay.Direction.magnitude*.5)))

		local oldPos = self.Part.CFrame

		self.Part.CFrame = (self.StartPos+(self.DirectionRay.Direction.unit*self.LinearPosition))+(self.QuadraticA*math.pow(self.LinearPosition,2))+(self.QuadraticB*self.LinearPosition)

		if (self.Part.CFrame.p-self.DirectionRay.Origin).magnitude&gt;self.Range then
			self.IsAlive = false
		end
		local obj = game.Workspace:FindPartOnRayWithIgnoreList( Ray.new(oldPos.p,self.Part.CFrame.p-oldPos.p), self.IgnoreList,false )
		if obj then
			self:Hit(obj)
		end

	end

	function PartProjectile:Destroy()
		self.Part.Anchored = false
		Delay(5,function()
			self.Part.Parent = nil
		end)

	end

end

--[[shooting Tool Class]]--

local ShootingTool =
{
	FireRate = .5, -- How often the weapon can fire.
	Automatic = false, -- hold down to continue firing
	Spread = 0, -- The bigger the spread, the more inaccurate the shots will be.
	ClipSize = 50, -- Shots in a clip
	ReloadTime = 3, -- Time it takes to reload the tool.
	StartingClips = -1,
	BarrelPos = CFrame.new(0, 0, - 1.2), -- L, F, U

	SourcePart = nil,
	TemplateProjectile = nil,
	Projectiles = {},
	IsFireing = false,

	OnFire = nil,
	OnReload = nil,

	BulletsLeft = 50,

	LastReload = 0,

	FireSound = nil,

}
do
	UTIL.MakeClass(ShootingTool)
	function ShootingTool.New(nSource,nProjectile)
		local init= UTIL.DeepCopy(ShootingTool)
		init.SourcePart= nSource
		init.TemplateProjectile = nProjectile
		init.OnFire = InternalEvent.New()
		init.OnReload = InternalEvent.New()
		return init
	end

	function ShootingTool:UpdateBullets(dt)
		for index,i in ipairs(self.Projectiles) do
			if i.IsAlive then
				i:Update(dt)
			else
				i:Destroy()
				table.remove(self.Projectiles, index)
			end
		end
	end

	function ShootingTool:StartFireing(mouse)
		if tick()-self.LastReload&lt;self.ReloadTime then return end
		while self.IsFireing do wait() end
		self.IsFireing = true
		repeat
			if tick()-self.LastReload&gt;self.ReloadTime then
				local startPos = self.SourcePart.CFrame:toWorldSpace(self.BarrelPos)
				local dir = CFrame.Angles((math.random()-.5)*2*self.Spread,(math.random()-.5)*2*self.Spread,(math.random()-.5)*2*self.Spread)*(mouse.Hit.p-startPos.p)
				local nprojectile = PartProjectile.New(self.TemplateProjectile, Ray.new(startPos.p,dir))

				table.insert(self.Projectiles,nprojectile)
				self.OnFire:Fire()
				if self.FireSound then
					self.FireSound:Play()
				end
				self.BulletsLeft = self.BulletsLeft -1
			end
			if self.BulletsLeft==0 then
				self.OnReload:Fire()
				self.BulletsLeft = self.ClipSize
				self.LastReload = tick()
			end
			wait(self.FireRate)
		until not self.IsFireing or not self.Automatic
	end

	function ShootingTool:EndFireing()
		self.IsFireing=false
	end

end
do
	local Handle = script.Parent
	local Tool = Handle.Parent


	local OrangeLight = Handle:WaitForChild('OrangeLight')
	local RedLight = Handle:WaitForChild('RedLight')
	local SpotLight = Handle:WaitForChild('SpotLight')


	local Player = game.Players.LocalPlayer
	local Character = UTIL.WaitForValidCharacter(Player)
	local HoldAni = UTIL.Instantiate"Animation"
	{AnimationId = "http://www.roblox.com/Asset?ID=116690317"}
	local ReloadAni = UTIL.Instantiate"Animation"
	{AnimationId = "http://www.roblox.com/Asset?ID=116695140"}

	local HoldAniTrack
	local ReloadAniTrack
	local ShellMesh = UTIL.Instantiate"SpecialMesh"
	{
		MeshId = UTIL.AssetURL..125755971,
		TextureId = UTIL.AssetURL..125755118,
		Scale = Vector3.new(1,1,1),
	}
	local Projectile
	do
		local tpart = UTIL.Instantiate"Part"
		{
			Anchored = true,
			CanCollide = true,
			Size = Vector3.new(.4,.4,.4),
			Shape = "Ball",
			ShellMesh:Clone(),
		}
		Projectile = PartProjectile.New(tpart,Ray.new())
	end
	table.insert(Projectile.IgnoreList,Handle)

	Projectile.Speed = 20
	Projectile.Arching = Vector3.new(0,5,0)
	Projectile.Damage = 20

	Projectile.EffectFunction = function(hum,part)
		local explo = Instance.new('Explosion')
		explo.BlastPressure=0
		explo.BlastRadius = 20
		explo.Position=part.CFrame.p
		explo.Parent = part
	end

	local Gun = ShootingTool.New(Handle,Projectile)
	Gun.Automatic = false
	Gun.BarrelPos = CFrame.new(0, 0, - 3.1)
	Gun.FireRate = .25
	Gun.Spread = .05
	Gun.FireSound  = Handle:WaitForChild('FireSound')

	Gun.OnFire:Connect(function()
		SpotLight.Enabled = true
		if(math.random()&gt;.5) then
			OrangeLight.Enabled =true
		else
			RedLight.Enabled =true
		end
		wait(.05)
		SpotLight.Enabled = false
		OrangeLight.Enabled =false
		RedLight.Enabled =false
	end)

	Gun.OnReload:Connect(function()
		if ReloadAniTrack then
			ReloadAniTrack:Play()
		end
		wait(3)

	end)

	Tool.Equipped:connect(function(mouse)

		Character = UTIL.WaitForValidCharacter(Player)
		local Humanoid = Character:FindFirstChild('Humanoid')
		table.insert(Projectile.IgnoreList,Character)
		HoldAniTrack = Humanoid:LoadAnimation(HoldAni)
		ReloadAniTrack = Humanoid:LoadAnimation(ReloadAni)
		--HoldAniTrack:Play()
		mouse.Button1Down:connect(function()
			Gun:StartFireing(mouse)
		end)
		mouse.Button1Up:connect(function()
			Gun:EndFireing()
		end)
	end)
	Tool.Unequipped:connect(function()
		--HoldAniTrack:Stop()
	end)
	while true do
		Gun:UpdateBullets(1/30)
		wait()
	end

end
</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
					<Item class="SpecialMesh" referent="RBX0075096170E64D21A84EFAD8A233ED2D">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=125754898</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=125755118</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="PointLight" referent="RBX10690058565D4347A2AAA6F1E321A7E6">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<float name="Brightness">4</float>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<Color3 name="Color">
								<R>0.886274576</R>
								<G>0.505882382</G>
								<B>0.121568635</B>
							</Color3>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">false</bool>
							<string name="Name">OrangeLight</string>
							<float name="Range">4</float>
							<bool name="Shadows">false</bool>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
					<Item class="PointLight" referent="RBX9AB9477DE7B74CFDBD35D059C357FE4B">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<float name="Brightness">4</float>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<Color3 name="Color">
								<R>1</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">false</bool>
							<string name="Name">RedLight</string>
							<float name="Range">4</float>
							<bool name="Shadows">false</bool>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
					<Item class="SpotLight" referent="RBX3DB75E48525D452CB2064A17BFD7BF90">
						<Properties>
							<float name="Angle">45</float>
							<BinaryString name="AttributesSerialize" />
							<float name="Brightness">8</float>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<Color3 name="Color">
								<R>1</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">false</bool>
							<token name="Face">5</token>
							<string name="Name">SpotLight</string>
							<float name="Range">16</float>
							<bool name="Shadows">false</bool>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX6AFCEA68EF6346BE9D80B5C74E97B92B">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">FireSound</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=125762586</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Camera" referent="RBX6EA340DAB41A47079C1EFE1141F1D98F">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>-3.07675982</X>
							<Y>44.5081863</Y>
							<Z>-38.9809608</Z>
							<R00>0.938487947</R00>
							<R01>0.078037113</R01>
							<R02>-0.336378634</R02>
							<R10>-0</R10>
							<R11>0.974129617</R11>
							<R12>0.225990176</R12>
							<R20>0.34531197</R20>
							<R21>-0.212089062</R21>
							<R22>0.914208889</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>-2.40400219</X>
							<Y>44.0562057</Y>
							<Z>-40.8093796</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		