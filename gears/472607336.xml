<Item class="Model" referent="RBX0F2D17503315423992BA778CB96794B1">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">472607336</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBXF187A7E697DE4111B57520DD6D9A6CE2">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>1.5</X>
						<Y>0.550000012</Y>
						<Z>-2.04999995</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">TurtleBackpack</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=471844699</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>0.088176392</X>
							<Y>4.01263618</Y>
							<Z>-0.001766189</Z>
							<R00>0.217967749</R00>
							<R01>0.0241221488</R01>
							<R02>-0.975657463</R02>
							<R10>-1.36483232e-14</R10>
							<R11>0.999694467</R11>
							<R12>0.0247164387</R12>
							<R20>0.975955546</R20>
							<R21>-0.00538738724</R21>
							<R22>0.217901185</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX3CD1A7400BD8408181594F8EE71C60FE">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>0.088176392</X>
							<Y>4.01263618</Y>
							<Z>-0.001766189</Z>
							<R00>0.217967749</R00>
							<R01>0.0241221488</R01>
							<R02>-0.975657463</R02>
							<R10>-1.36483232e-14</R10>
							<R11>0.999694467</R11>
							<R12>0.0247164387</R12>
							<R20>0.975955546</R20>
							<R21>-0.00538738724</R21>
							<R22>0.217901185</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>2</X>
							<Y>2</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX51B2CB986C7747C19BC8F21BE2AE99DB">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=471844509</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=471844626</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Script" referent="RBXE6B9F608094342BF8D74645B1FDD23E1">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{A960D8F1-BDDD-4DE5-83AE-C24DB66F2979}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")

BaseUrl = "http://www.roblox.com/asset/?id="

local function Create_PrivImpl(objectType)
	if type(objectType) ~= 'string' then
		error("Argument of Create must be a string", 2)
	end
	--return the proxy function that gives us the nice Create'string'{data} syntax
	--The first function call is a function call using Lua's single-string-argument syntax
	--The second function call is using Lua's single-table-argument syntax
	--Both can be chained together for the nice effect.
	return function(dat)
		--default to nothing, to handle the no argument given case
		dat = dat or {}

		--make the object to mutate
		local obj = Instance.new(objectType)
		local parent = nil

		--stored constructor function to be called after other initialization
		local ctor = nil

		for k, v in pairs(dat) do
			--add property
			if type(k) == 'string' then
				if k == 'Parent' then
					-- Parent should always be set last, setting the Parent of a new object
					-- immediately makes performance worse for all subsequent property updates.
					parent = v
				else
					obj[k] = v
				end


			--add child
			elseif type(k) == 'number' then
				if type(v) ~= 'userdata' then
					error("Bad entry in Create body: Numeric keys must be paired with children, got a: "..type(v), 2)
				end
				v.Parent = obj


			--event connect
			elseif type(k) == 'table' and k.__eventname then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create.E\'"..k.__eventname.."\']` must have a function value\
							got: "..tostring(v), 2)
				end
				obj[k.__eventname]:connect(v)


			--define constructor function
			elseif k == t.Create then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create]` should be paired with a constructor function, \
							got: "..tostring(v), 2)
				elseif ctor then
					--ctor already exists, only one allowed
					error("Bad entry in Create body: Only one constructor function is allowed", 2)
				end
				ctor = v


			else
				error("Bad entry ("..tostring(k).." =&gt; "..tostring(v)..") in Create body", 2)
			end
		end

		--apply constructor function if it exists
		if ctor then
			ctor(obj)
		end

		if parent then
			obj.Parent = parent
		end

		--return the completed object
		return obj
	end
end

--now, create the functor:
Create = setmetatable({}, {__call = function(tb, ...) return Create_PrivImpl(...) end})

--and create the "Event.E" syntax stub. Really it's just a stub to construct a table which our Create
--function can recognize as special.
Create.E = function(eventName)
	return {__eventname = eventName}
end


Animation = script:WaitForChild("Animation")

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Locked = true,
	CanCollide = true,
	Anchored = false,
}

ToolEquipped = false

Handle.Transparency = 0
Tool.Enabled = true

function CreateBackpack(MakeNew)
	for i, v in pairs(Tool:GetChildren()) do
		if (v:IsA("BasePart") or v:IsA("Model")) and v ~= Handle then
			v:Destroy()
		end
	end
	if ReduceDamage then
		ReduceDamage:disconnect()
	end
	Handle.Transparency = ((MakeNew and 1) or 0)
	if not MakeNew or not CheckIfAlive() then
		return
	end
	IgnoreHealthChange = false
	local CurrentHealth = Humanoid.Health
	ReduceDamage = Humanoid.Changed:connect(function(Property)
		local NewHealth = Humanoid.Health
		if not IgnoreHealthChange and NewHealth ~= Humanoid.MaxHealth then
			if NewHealth &lt; CurrentHealth then
				local DamageDealt = (CurrentHealth - NewHealth)
				IgnoreHealthChange = true
				Humanoid.Health = (Humanoid.Health + (DamageDealt * 0.6))
				IgnoreHealthChange = false
			end
		end
		CurrentHealth = NewHealth
	end)
	local TurtleBackpack = Create("Model"){
		Name = "TurtleBackpack",
	}
	local Shell = BasePart:Clone()
	Shell.Name = "Shell"
	Shell.Size = Vector3.new(2, 2, 1)
	Shell.CanCollide = false
	Create("SpecialMesh"){
		Name = "Mesh",
		MeshType = Enum.MeshType.FileMesh,
		MeshId = (BaseUrl .. "471843937"),
		TextureId = (BaseUrl .. "471844626"),
		VertexColor = Vector3.new(1, 1, 1),
		Scale = Vector3.new(1, 1, 1),
		Offset = Vector3.new(0, 0, 0),
		Parent = Shell,
	}
	Shell.Parent = TurtleBackpack
	local Fins = {
		{MeshId = 471844190, Name = "BottomLeftFin", C0 = CFrame.new(-0.703393877, -1.42692041, 0.260600388, -4.37113883e-008, 1, 0, -1, -4.37113883e-008, 0, 0, 0, 1), C1 = CFrame.new(0.349999964, 0.349998474, 0.0500000119, -4.37113883e-008, 1, 0, -1, -4.37113883e-008, 0, 0, 0, 1)},
		{MeshId = 471843792, Name = "BottomRightFin", C0 = CFrame.new(0.709276319, -1.42692041, 0.260600388, -4.37113883e-008, -1, 0, 1, -4.37113883e-008, 0, 0, 0, 1), C1 = CFrame.new(-0.350000024, 0.349998474, 0.0500000119, -4.37113883e-008, -1, 0, 1, -4.37113883e-008, 0, 0, 0, 1)},
		{MeshId = 471844430, Name = "TopLeftFin", C0 = CFrame.new(-0.832682014, 0.162908971, 0.250124335, -4.37113883e-008, 1, 0, -1, -4.37113883e-008, 0, 0, 0, 1), C1 = CFrame.new(0.449999928, 0.650001526, 0.25, -4.37113883e-008, 1, 0, -1, -4.37113883e-008, 0, 0, 0, 1)},
		{MeshId = 471844318, Name = "TopRightFin", C0 = CFrame.new(0.733196378, 0.212908924, 0.0482223518, -4.37113883e-008, -1, 0, 1, -4.37113883e-008, 0, 0, 0, 1), C1 = CFrame.new(-0.550000072, 0.700000763, 0.0500000007, -4.37113883e-008, -1, 0, 1, -4.37113883e-008, 0, 0, 0, 1)},
	}
	for i, v in pairs(Fins) do
		local Fin = Shell:Clone()
		Fin.Name = v.Name
		Fin.Size = Vector3.new(0.2, 0.2, 0.2)
		Fin.CanCollide = false
		Fin.Mesh.MeshId = (BaseUrl .. v.MeshId)
		Create("Motor6D"){
			Name = v.Name,
			Part0 = Shell,
			Part1 = Fin,
			C0 = v.C0,
			C1 = v.C1,
			MaxVelocity = 0.01,
			Parent = Shell,
		}
		local AnimationScript = Animation:Clone()
		AnimationScript.Disabled = false
		AnimationScript.Parent = TurtleBackpack
		Fin.Parent = TurtleBackpack
	end
	local ShellWeld = Create("Weld"){
		Name = "Weld",
		Part0 = Handle,
		Part1 = Shell,
		C0 = CFrame.new(0, 0.35, 0),
		C1 = CFrame.new(0, 0, 0),
		Parent = Shell,
	}
	TurtleBackpack.Parent = Tool
end

function Activated()
	if not Tool.Enabled then
		return
	end
end

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
	Spawn(function()
		CreateBackpack(true)
	end)
end

function Unequipped()
	ToolEquipped = false
	Spawn(function()
		CreateBackpack(false)
	end)
end

Delay(0, (function()
	if not ToolEquipped then
		CreateBackpack(false)
	end
end))

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
					<Item class="Script" referent="RBXC11686FA213D486F96422FD0A9D81407">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">Animation</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{977AB14F-7C3D-4D45-92E3-949069EA2418}</string>
							<ProtectedString name="Source">--Made by Luckymaxer

Figure = script.Parent

RunService = game:GetService("RunService")

Shell = Figure:WaitForChild("Shell")
LeftShoulder = Shell:WaitForChild("TopLeftFin")
RightShoulder = Shell:WaitForChild("TopRightFin")
LeftHip = Shell:WaitForChild("BottomLeftFin")
RightHip = Shell:WaitForChild("BottomRightFin")

for i, v in pairs({LeftShoulder, RightShoulder, LeftHip, RightHip}) do
	if v and v.Parent then
		v.DesiredAngle = 0
		v.CurrentAngle = 0
	end
end

function Move(Time)
	local LimbAmplitude = 0.1
	local LimbFrequency = 3.5
	local LimbDesiredAngle1 = (LimbAmplitude * math.sin(Time * LimbFrequency))
	local LimbDesiredAngle2 = -(LimbAmplitude * math.sin(Time * LimbFrequency))

	LeftShoulder.DesiredAngle = LimbDesiredAngle1
	RightShoulder.DesiredAngle = LimbDesiredAngle2
	LeftHip.DesiredAngle = LimbDesiredAngle2
	RightHip.DesiredAngle = LimbDesiredAngle1

end

RunService.Stepped:connect(function()
	local _, Time = wait(0.1)
	Move(Time)
end)</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
				</Item>
				<Item class="Camera" referent="RBXDF7C5C5C98924C158C80574D36EA4E4F">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>5.33500242</X>
							<Y>5.24580669</Y>
							<Z>3.39886856</Z>
							<R00>0.533081234</R00>
							<R01>-0.174115464</R01>
							<R02>0.827954173</R02>
							<R10>-0</R10>
							<R11>0.978595138</R11>
							<R12>0.205794662</R12>
							<R20>-0.846064031</R20>
							<R21>-0.109705269</R21>
							<R22>0.521670759</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">40</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>4.17586803</X>
							<Y>4.95769453</Y>
							<Z>2.66853046</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		