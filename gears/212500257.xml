<Item class="Model" referent="RBX3FFD6A2FF7014CF1A5D24273DA8C7698">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">212500257</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBX7B072E095E3244F1BCA0CDBA1B818D12">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>0</X>
						<Y>-2.375</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">RidiculousSharkSword</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=211684007</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>-36.7786713</X>
							<Y>38.1456299</Y>
							<Z>3.99694633</Z>
							<R00>0.612995982</R00>
							<R01>-0.547850013</R01>
							<R02>-0.569294631</R02>
							<R10>0.000133286536</R10>
							<R11>0.720619142</R11>
							<R12>-0.693330884</R12>
							<R20>0.790086031</R20>
							<R21>0.424933195</R21>
							<R22>0.441809684</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX2B880023947440B4BBD87B16A18FDD32">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-36.7786713</X>
							<Y>38.1456299</Y>
							<Z>3.99694633</Z>
							<R00>0.612995982</R00>
							<R01>-0.547850013</R01>
							<R02>-0.569294631</R02>
							<R10>0.000133286536</R10>
							<R11>0.720619142</R11>
							<R12>-0.693330884</R12>
							<R20>0.790086031</R20>
							<R21>0.424933195</R21>
							<R22>0.441809684</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>0.25</X>
							<Y>8</Y>
							<Z>0.75</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX05F8A53826A44DE58534E7F85AAC9E0B">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=211683906</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=211683941</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Fire" referent="RBXB440AD5DD8BB4FAB9BF0EC257E3320E5">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<Color3 name="Color">
								<R>0</R>
								<G>0.666666687</G>
								<B>1</B>
							</Color3>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">false</bool>
							<string name="Name">Fire</string>
							<Color3 name="SecondaryColor">
								<R>0</R>
								<G>0</G>
								<B>1</B>
							</Color3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<float name="TimeScale">1</float>
							<float name="heat_xml">25</float>
							<float name="size_xml">5</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX2627B6CE99E44DBB864E4A79248695B1">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Bite</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=212200200</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX06D031E6F8914B8E9DD5DD378AC80A69">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Slash</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>rbxasset://sounds/swordslash.wav</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.699999988</float>
						</Properties>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBXB677E69EA2454E1E8361926394685B56">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MouseIcon</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{FF6962CD-38E5-40B9-9E51-01B2B5AAEFED}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Script" referent="RBXE29DF0F4BD1C4743A0273F5EE20F3DB5">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{991546F6-D982-4976-B8FA-FF14C7EA277E}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")
Fire = Handle:WaitForChild("Fire")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
InsertService = game:GetService("InsertService")

BaseUrl = "http://www.roblox.com/asset/?id="

BasePart = Instance.new("Part")
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

TsunamiModel = InsertService:LoadAsset(212226090)
TsunamiWave = TsunamiModel:GetChildren()[1]:Clone()
if TsunamiModel and TsunamiModel.Parent then
	TsunamiModel:Destroy()
end

Animations = {
	LeftSlash = {Animation = Tool:WaitForChild("LeftSlash"), FadeTime = nil, Weight = nil, Speed = 1.5, Duration = 0.5, Damage = {Min = 15, Max = 20}},
	RightSlash = {Animation = Tool:WaitForChild("RightSlash"), FadeTime = nil, Weight = nil, Speed = 1.5, Duration = 0.5, Damage = {Min = 15, Max = 20}},
	Slash1 = {Animation = Tool:WaitForChild("Slash1"), FadeTime = nil, Weight = nil, Speed = 3, Duration = 0.5, Damage = {Min = 20, Max = 25}},
	Slash2 = {Animation = Tool:WaitForChild("Slash2"), FadeTime = nil, Weight = nil, Speed = 3, Duration = 0.5, Damage = {Min = 20, Max = 30}},
	Slash3 = {Animation = Tool:WaitForChild("Slash3"), FadeTime = nil, Weight = nil, Speed = 3, Duration = 0.5, Damage = {Min = 25, Max = 35}},
	Charge = {Animation = Tool:WaitForChild("Charge"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil}
}

Sounds = {
	Slash = Handle:WaitForChild("Slash"),
	Bite = Handle:WaitForChild("Bite")
}

TouchDamage = {Min = 10, Max = 10}

Shark = BasePart:Clone()
Shark.Name = "Shark"
Shark.Size = Vector3.new(1, 2.2, 7)
SharkMesh = Instance.new("SpecialMesh")
SharkMesh.MeshType = Enum.MeshType.FileMesh
SharkMesh.MeshId = (BaseUrl .. "82821384")
SharkMesh.TextureId = (BaseUrl .. "82844051")
SharkMesh.Scale = Vector3.new(5, 5, 5)
SharkMesh.Parent = Shark

ToolEquipped = false
MouseDown = false
FullyCharged = false
SpecialActive = false
SpecialReloadTime = 20

Clicks = 0
FirstClick = false

Gravity = 196.20
Rate = (1 / 60)

ServerControl = (Tool:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Tool

Fire.Enabled = false
Tool.Enabled = true

function RayCast(Position, Direction, MaxDistance, IgnoreList)
	local IgnoreList = ((type(IgnoreList) == "table" and IgnoreList) or {IgnoreList})
	return game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList)
end

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function TagHumanoid(humanoid, player)
	local Creator_Tag = Instance.new("ObjectValue")
	Creator_Tag.Name = "creator"
	Creator_Tag.Value = player
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function CheckTableForInstance(Table, Instance)
	for i, v in pairs(Table) do
		if v == Instance then
			return true
		end
	end
	return false
end

function Blow(Hit)
	if not Hit or not Hit.Parent or not CheckIfAlive() then
		return
	end

	local character = Hit.Parent

	local player = Players:GetPlayerFromCharacter(character)
	if player and IsTeamMate(Player, player) then
		return
	end

	local humanoid = character:FindFirstChild("Humanoid")
	if character == Character or not humanoid or humanoid.Health == 0 then
		return
	end

	local RightArm = Character:FindFirstChild("Right Arm")
	if not RightArm then
		return
	end
	local RightGrip = RightArm:FindFirstChild("RightGrip")
	if not RightGrip or (RightGrip.Part0 ~= RightArm and RightGrip.Part1 ~= RightArm) then
		return
	end

	UntagHumanoid(humanoid)
	TagHumanoid(humanoid, Player)

	local DamageValue = ((CurrentAnimation and CurrentAnimation.Damage) or TouchDamage)
	local DamageAmount = math.random(DamageValue.Min, DamageValue.Max)

	humanoid:TakeDamage(DamageAmount)

end

function Attack(PossibleAnims, PossibleSounds)
	if PossibleAnims and #PossibleAnims &gt; 0 then
		if PossibleSounds and #PossibleSounds &gt; 0 then
			PossibleSounds[math.random(1, #PossibleSounds)]:Play()
		end
		CurrentAnimation = PossibleAnims[math.random(1, #PossibleAnims)]
		InvokeClient("PlayAnimation", CurrentAnimation)
		if CurrentAnimation.Duration and CurrentAnimation.Duration &gt; 0 then
			wait(CurrentAnimation.Duration)
			CurrentAnimation = nil
		end
	end
end

function Activated()
	if not Tool.Enabled or not ToolEquipped then
		return
	end
	Clicks = (Clicks + 1)
	if not FirstClick then
		FirstClick = true
		local CurrentlyEquipped = true
		ToolUnequipped = Tool.Unequipped:connect(function()
			CurrentlyEquipped = false
		end)
		wait(0.15)
		if ToolUnequipped then
			ToolUnequipped:disconnect()
		end
		if not CurrentlyEquipped then
			return
		end
		Tool.Enabled = false
		local AttackAnims = {}
		local AttackSounds = {}
		if MouseDown and Clicks == 1 and not SpecialActive then
			AttackAnims = {Animations.Charge}
			Spawn(function()
				if not SpecialActive then
					local ChargeTick = tick()
					while MouseDown and ToolEquipped and CheckIfAlive() and not FullyCharged do
						if (tick() - ChargeTick) &gt;= 3 then
							FullyCharged = true
							Fire.Enabled = true
						end
						wait()
					end
				end
			end)
		else
			AttackSounds = {Sounds.Slash}
			AttackAnims = {Animations.LeftSlash, Animations.RightSlash, Animations.Slash1, Animations.Slash2, Animations.Slash3}
		end
		Attack(AttackAnims, AttackSounds)
		FirstClick = false
		Clicks = 0
		Tool.Enabled = true
	end
end

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	if not CheckIfAlive() then
		return
	end
	local CurrentlyEquipped = true
	EquippedToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
	end)
	if EquippedToolUnequipped then
		EquippedToolUnequipped:disconnect()
	end
	if not CurrentlyEquipped then
		return
	end
	ToolEquipped = true
end

function Unequipped()
	Clicks = 0
	FirstClick = false
	FullyCharged = true
	Fire.Enabled = false
	for i, v in pairs({EquippedToolUnequipped, ToolUnequipped}) do
		if v then
			v:disconnect()
		end
	end
	for i, v in pairs(Animations) do
		InvokeClient("StopAnimation", v)
	end
	ToolEquipped = false
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if player == Player and ToolEquipped and CheckIfAlive() then
		if Mode == "MouseClick" then
			local Down = Value.Down
			if Down and not MouseDown then
				MouseDown = true
				Activated()
			elseif not Down and MouseDown then
				MouseDown = false
				InvokeClient("StopAnimation", Animations.Charge)
				if FullyCharged and not SpecialActive then
					if CurrentAnimation == Animations.Charge and FullyCharged then
						SpecialActive = true
						FullyCharged = false
						Fire.Enabled = false
						local RayHit, RayPos, RayNormal = RayCast(Torso.Position, Vector3.new(0, -1, 0), (Torso.Size.Y * 2), {Character})
						if not RayHit then
							return
						end
						local Duration = 5
						Humanoid.WalkSpeed = 0
						InvokeClient("DisableJump", true)
						Character.Archivable = true
						local CharacterClone = Character:Clone()
						Character.Archivable = false
						for i, v in pairs(CharacterClone:GetChildren()) do
							if v:IsA("Tool") then
								v:Destroy()
							end
						end
						local AttackSounds = {}
						InvokeClient("StopAnimation", Animations.Charge)
						local AttackAnims = {}
						Attack(AttackAnims, AttackSounds)
						wait(0.125)
						if not ToolEquipped then
							return
						end
						local TsunamiWaveClone = TsunamiWave:Clone()
						TsunamiWaveClone.Touched:connect(function(Hit)
							if not Hit or not Hit.Parent then
								return
							end
							local character = Hit.Parent
							if character:IsA("Hat") then
								character = Hit.Parent
							end
							if character == Character then
								return
							end
							local player = Players:GetPlayerFromCharacter(character)
							if player and IsTeamMate(Player, player) then
								return
							end
							local humanoid = character:FindFirstChild("Humanoid")
							if humanoid and humanoid.Health &gt; 0 then
								UntagHumanoid(humanoid)
								TagHumanoid(humanoid, Player)
								humanoid:TakeDamage(30)
							end
						end)
						local Offset = (Torso.CFrame - Vector3.new(0, ((CharacterClone:GetModelSize().Y / 2) + (TsunamiWaveClone.Size.Y / 2) - 0), 0)) + Vector3.new(0, 1, 0)
						Offset = CFrame.new(Offset.p, (Torso.CFrame + Torso.CFrame.lookVector * 2).p) * CFrame.Angles((math.pi / 2), -(math.pi / 2), 0)
						local PX, PY, PZ, XX, XY, XZ, YX, YY, YZ, ZX, ZY, ZZ = Offset:components()
						Offset = CFrame.new(PX, PY, PZ, XX, XY, XZ, 0, YY, YZ, ZX, ZY, ZZ) * CFrame.Angles(math.pi, math.pi, 0)
						TsunamiWaveClone.CFrame = Offset
						local Weld = Instance.new("Weld")
						Weld.Part0 = Torso
						Weld.Part1 = TsunamiWaveClone
						Weld.C0 = CFrame.new(0, -((TsunamiWaveClone.Size.Y / 2) + (CharacterClone:GetModelSize().Y / 2) - 0), 6) * CFrame.Angles(0, -(math.pi / 2), 0)
						Weld.Parent = TsunamiWaveClone
						Debris:AddItem(TsunamiWaveClone, Duration)
						local BodyPosition = Instance.new("BodyPosition")
						BodyPosition.maxForce = Vector3.new(math.huge, math.huge, 0)
						BodyPosition.position = Offset.p
						BodyPosition.Parent = TsunamiWaveClone
						local BodyGyro = Instance.new("BodyGyro")
						BodyGyro.maxTorque = Vector3.new(0, math.huge, 0)
						BodyGyro.cframe = Offset * CFrame.Angles(0, 0, 0)
						local PlayerGyro = Instance.new("BodyGyro")
						PlayerGyro.maxTorque = Vector3.new(math.huge, 0, math.huge)
						Debris:AddItem(PlayerGyro, Duration)
						PlayerGyro.Parent = Torso
						BodyGyro.Parent = TsunamiWaveClone
						TsunamiWaveClone.CFrame = Offset
						TsunamiWaveClone.Anchored = false
						TsunamiWaveClone.Parent = game:GetService("Workspace")
						local SharksAvailable = 5
						local SharkRadius = {
							Min = Vector3.new((TsunamiWave.Size.X + 10), (TsunamiWave.Size.Y + 10), (TsunamiWave.Size.Z + 10)),
							Max = Vector3.new((TsunamiWave.Size.X + 10), (TsunamiWave.Size.Y / 2), (TsunamiWave.Size.Z + 10))
						}
						local Humanoids = {}
						local IgnoreObjects = {Character, TsunamiWaveClone}
						while TsunamiWaveClone and TsunamiWaveClone.Parent and ToolEquipped do
							if math.abs(TsunamiWaveClone.Position.Y - Offset.p.Y + 1.5) &lt; TsunamiWaveClone.Size.Y then
								TsunamiWaveClone.CFrame = TsunamiWaveClone.CFrame + Vector3.new(0, (0.01 / 5 / Rate), 0)
								BodyPosition.position = TsunamiWaveClone.Position
							end
							if SharksAvailable &gt; 0 then
								local Parts = game:GetService("Workspace"):FindPartsInRegion3WithIgnoreList(Region3.new((TsunamiWaveClone.Position - SharkRadius.Min), (TsunamiWaveClone.Position + SharkRadius.Max)), IgnoreObjects, 100)
								local CurrentHumanoids = {}
								for i, v in pairs(Parts) do
									if v and v.Parent then
										local character = v.Parent
										if character:IsA("Hat") then
											character = character.Parent
										end
										local player = Players:GetPlayerFromCharacter(character)
										if not player or (player and not IsTeamMate(Player, player)) then
											local humanoid = character:FindFirstChild("Humanoid")
											if humanoid and humanoid.Health &gt; 0 and not CheckTableForInstance(Humanoids, humanoid) then
												table.insert(CurrentHumanoids, humanoid)
												table.insert(Humanoids, humanoid)
											end
										end
									end
								end
								if #CurrentHumanoids &gt; 0 then
									for i = 1, #CurrentHumanoids do
										if SharksAvailable &lt;= 0 then
											break
										end
										local Index = math.random(1, #CurrentHumanoids)
										local humanoid = CurrentHumanoids[Index]
										if humanoid and humanoid.Parent and humanoid.Health &gt; 0 then
											local character = humanoid.Parent
											local head = character:FindFirstChild("Head")
											if head then
												SharksAvailable = (SharksAvailable - 1)
											end
											table.remove(CurrentHumanoids, Index)
											table.insert(IgnoreObjects, character)
											local SharkClone = Shark:Clone()
											SharkClone.CanCollide = false
											local Bite = Sounds.Bite:Clone()
											Bite.Parent = SharkClone
											SharkClone.CFrame = TsunamiWaveClone.CFrame
											local Direction = CFrame.new(SharkClone.Position, head.Position)
											SharkClone.CFrame = Direction
											local Velocity = Direction.lookVector * 100
											local Mass = (Shark:GetMass() * Gravity)
											local BodyGyro = Instance.new("BodyGyro")
											BodyGyro.maxTorque = Vector3.new(math.huge, math.huge, math.huge)
											BodyGyro.cframe = Direction
											BodyGyro.Parent = SharkClone
											local BodyVelocity = Instance.new("BodyVelocity")
											BodyVelocity.maxForce = Vector3.new(Mass, Mass, Mass)
											BodyVelocity.velocity = Velocity
											BodyVelocity.Parent = SharkClone
											SharkClone.Velocity = Velocity
											local Bitten = false
											SharkClone.Touched:connect(function(Hit)
												if not Hit or not Hit.Parent or Bitten then
													return
												end
												local character = Hit.Parent
												if character:IsA("Hat") then
													character = Hit.Parent
												end
												if character == Character then
													return
												end
												local player = Players:GetPlayerFromCharacter(character)
												if player and IsTeamMate(Player, player) then
													return
												end
												local humanoid = character:FindFirstChild("Humanoid")
												if humanoid and humanoid.Health &gt; 0 then
													Bitten = true
													UntagHumanoid(humanoid)
													TagHumanoid(humanoid, Player)
													humanoid:TakeDamage(50)
													if BodyVelocity and BodyVelocity.Parent then
														BodyVelocity:Destroy()
													end
													Bite:Play()
												end
											end)
											Debris:AddItem(SharkClone, 5)
											SharkClone.Parent = game:GetService("Workspace")
										end
									end
								end
							end
							local NewPosition = (TsunamiWaveClone.CFrame + (TsunamiWaveClone.CFrame * CFrame.Angles(0, (math.pi / 2), 0)).lookVector * 2)
							TsunamiWaveClone.CFrame = NewPosition
							BodyPosition.position = TsunamiWaveClone.Position
							wait(Rate)
						end
						if TsunamiWaveClone and TsunamiWaveClone.Parent then
							TsunamiWaveClone:Destroy()
						end
						Humanoid.WalkSpeed = 16
						InvokeClient("DisableJump", false)
						wait(SpecialReloadTime)
						SpecialActive = false
					end
				end
			end
		end
	end
end)

Handle.Touched:connect(Blow)

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX4D8BEF566A724F6197932D7DB7025933">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=212175593</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Charge</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX8B45A5AF71144EE8BFF2260011805867">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=212177755</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Slash3</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX43295A87F21A4272887239DA97937599">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{DD477DB4-693F-458C-BDA5-125D8C2ADC5B}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")

Camera = game:GetService("Workspace").CurrentCamera

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ToolEquipped = false

function SetAnimation(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	end
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.Button1Down:connect(function()
		InvokeServer("MouseClick", {Down = true})
	end)
	Mouse.Button1Up:connect(function()
		InvokeServer("MouseClick", {Down = false})
	end)
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
	Mouse.Move:connect(function()
		InvokeServer("MouseMove", {Position = Mouse.Hit.p, Target = Mouse.Target})
	end)
end

function Unequipped()
	ToolEquipped = false
	LocalObjects = {}
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end	Animations = {}
end

function InvokeServer(mode, value)
	pcall(function()
		local ServerReturn = ServerControl:InvokeServer(mode, value)
		return ServerReturn
	end)
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MousePosition" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	elseif mode == "DisableJump" then
		DisableJump(value)
	elseif mode == "SetLocalTransparencyModifier" and value and ToolEquipped then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							local CurrentTransparency = v.Object.LocalTransparencyModifier
							if ((not v.AutoUpdate and (CurrentTransparency == 1 or  CurrentTransparency == 0)) or v.AutoUpdate) then
								v.Object.LocalTransparencyModifier = v.Transparency
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX184C9A59C9B542F395F337907394DE4B">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=74894663</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">LeftSlash</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX03C0E750B82F44F796D360BEC6D7AA82">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=74813494</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">RightSlash</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXDD2F1165C0E64C55A2A5B325FC9C6208">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=212099530</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Slash2</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX2317E63725BB48ABACF57B570E9071EA">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=212068929</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Slash1</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Camera" referent="RBX7157D35B66F9462B84576707B8DC251D">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>-39.8240509</X>
							<Y>38.5576897</Y>
							<Z>0.56616658</Z>
							<R00>-0.757876217</R00>
							<R01>0.0340708941</R01>
							<R02>-0.651508152</R02>
							<R10>-1.86264537e-09</R10>
							<R11>0.998635411</R11>
							<R12>0.0522240587</R12>
							<R20>0.652398467</R20>
							<R21>0.0395793729</R21>
							<R22>-0.756841898</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">5</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>-37.6349907</X>
							<Y>38.3822174</Y>
							<Z>3.10914707</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		