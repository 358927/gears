<Item class="Model" referent="RBX1F98B1E7704243AE8EC9FD2DE7A1FF30">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">189910262</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBXC6ED5F524796487694533BB388173ABF">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">false</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>1.39999998</X>
						<Y>2</Y>
						<Z>-1.25</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>-3.9340253e-07</R12>
						<R20>0</R20>
						<R21>3.9340253e-07</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">Bike</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=189754022</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>14.5424986</X>
							<Y>4.25051594</Y>
							<Z>4.46839333</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBXFB28E35239C14F4E92B8157398E69CB9">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>14.5424986</X>
							<Y>4.25051594</Y>
							<Z>4.46839333</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>true</CustomPhysics>
							<Density>0.699999988</Density>
							<Friction>0</Friction>
							<Elasticity>0</Elasticity>
							<FrictionWeight>1</FrictionWeight>
							<ElasticityWeight>1</ElasticityWeight>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>3.5</Y>
							<Z>7</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBXFF2877ADD94F4E98985C75EEACC05932">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=189852118</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>2</X>
								<Y>2</Y>
								<Z>2</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=189753994</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBXE49ED872B4FE4659902D0B5D6A27477F">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Bell</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset?id=189797299</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Script" referent="RBX0B830DD91955458384CC2DBA9EC1CA17">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{B8AB3154-464F-464C-B60E-49D38AD68718}</string>
						<ProtectedString name="Source">--Made by Luckymaxer
--Updated for R15 avatars by StarWars

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

VehicleModule = require(Tool:WaitForChild("VehicleModule"))

Controls = {
	Forward = false,
	Backward = false,
	Left = false,
	Right = false,
	Up = false,
	Down = false
}

LastSpace = 0

Animations = {
	Hold = {Animation = Tool:WaitForChild("Hold"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
	R15Hold = {Animation = Tool:WaitForChild("R15Hold"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil}
}

Sounds = {
	--EngineSound = Handle:WaitForChild("Running"),
	Bell = Handle:WaitForChild("Bell")
}

BasePercentageIncrease = 1 --Determins the percentage difference from the base speed

Accelerations = {
	Acceleration = {
		Normal = (10 * BasePercentageIncrease),
		Boost = (30 * BasePercentageIncrease),
	},
	Deceleration = {
		Normal = (10 * BasePercentageIncrease),
		Boost = (30 * BasePercentageIncrease)
	}
}

MaxSpeed = {
	Normal = (100 * BasePercentageIncrease),
}

CurrentMaxSpeed = MaxSpeed.Normal

Acceleration = Accelerations.Acceleration.Normal
Deceleration = Accelerations.Deceleration.Normal

TurnAlpha = (0.30 * BasePercentageIncrease)
AlphaDampening = (0.2 * BasePercentageIncrease)
CurrentSpeed = 0
TurnSpeed = 0

Gravity = 196.20

ToolEquipped = false

ServerControl = (Tool:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Tool

for i, v in pairs(Tool:GetChildren()) do
	if v:IsA("BasePart") and v ~= Handle then
		v:Destroy()
	end
end

ServerControl.OnServerInvoke = (function(Player, Mode, Value)
	if Mode == "KeyPress" and Value then
		local Key = string.lower(Value.Key)
		local ByteKey = string.byte(Key)
		local Down = Value.Down
		if Key == "w" or ByteKey == 17 then
			Controls.Forward = Down
			while Controls.Forward and ToolEquipped do
				CurrentSpeed = math.min(CurrentMaxSpeed, (CurrentSpeed + (Acceleration * (1 / 30))))
				wait(1 / 30)
			end
		elseif Key == "a" or ByteKey == 20 then
			Controls.Left = Down
			while Controls.Left and ToolEquipped do
				TurnSpeed = math.min(5, (TurnSpeed + (TurnAlpha)))
				wait(1 / 30)
			end
		elseif Key == "s" or ByteKey == 18 then
			Controls.Backward = Down
			while Controls.Backward and ToolEquipped do
				if CurrentSpeed &gt; 0 then
					CurrentSpeed = math.max(-20, (CurrentSpeed - (Deceleration * 2.8 * (1 / 30))))
				else
					CurrentSpeed = math.max(-20, (CurrentSpeed - (Deceleration * (1 / 30))))
				end
				wait(1 / 30)
			end
		elseif Key == "d" or ByteKey == 19 then
			Controls.Right = Down
			while Controls.Right and ToolEquipped do
				TurnSpeed = math.max(-5, (TurnSpeed - (TurnAlpha)))
				wait(1 / 30)
			end
		elseif Key == " " and Down then
			if (LastSpace == 0 or (tick() - LastSpace) &gt; 1.9) then
				LastSpace = tick()
				local BodyForce = Instance.new("BodyForce")
				BodyForce.force = Vector3.new(0, (((GetTotalMass(Character) * Gravity) * 4) * 4), 0)
				Debris:AddItem(BodyForce, 0.1)
				BodyForce.Parent = FakeHandle
			end
		elseif Key == "h" and Down then
			Sounds.Bell:Play()
		end
	end
end)

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

function RayCast(Position, Direction, MaxDistance, IgnoreList)
	return game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList)
end

function GetTotalMass(Parent)
	local TotalMass = 0
	for i, v in pairs(Parent:GetChildren()) do
		if v:IsA("BasePart") then
			TotalMass = TotalMass + v:GetMass()
		end
		GetTotalMass(v)
	end
	return TotalMass
end

function ThrustUpdater()
	--Sounds.EngineSound:Play()
	while ToolEquipped and FakeHandle and FakeHandle.Parent do
		local Direction = Torso.CFrame.lookVector
		Direction = Vector3.new(Direction.x, 0, Direction.z).unit
		ThrustForce.velocity = (Direction * CurrentSpeed)
		--Sounds.EngineSound.Pitch = (1 + (math.abs(CurrentSpeed / 50) * 1))

		local DesiredAngle = (999999999 * (-CurrentSpeed / math.abs(CurrentSpeed)))
		local MaxVelocity = (CurrentSpeed / 250)
		if FrontMotor and FrontMotor.Parent then
			FrontMotor.DesiredAngle = DesiredAngle
			FrontMotor.MaxVelocity = MaxVelocity
		end
		if BackMotor and BackMotor.Parent then
			BackMotor.DesiredAngle = DesiredAngle
			BackMotor.MaxVelocity = MaxVelocity
		end

		RotationForce.angularvelocity = Vector3.new(0, TurnSpeed, 0)
		if math.abs(TurnSpeed) &gt; AlphaDampening	 then
			TurnSpeed = (TurnSpeed - (AlphaDampening * (math.abs(TurnSpeed) / TurnSpeed)))
		else
			TurnSpeed = 0
		end
		local LeanAmount = (-TurnSpeed * (math.pi / 6) / 4)

		if not Controls.Forward or Controls.Backward then
			CurrentSpeed = (CurrentSpeed * 0.99)
		end

		local XZAngle = math.atan2(Torso.CFrame.lookVector.z, 0, Torso.CFrame.lookVector.x)
--		TurnGyro.cframe = CFrame.Angles((LeanAmount * Direction.x), 0, (LeanAmount * Direction.z))
		if LastPosition then
			local NPos = Vector3.new(Torso.CFrame.p.x, 0, Torso.CFrame.p.z)
			local MySpeed = Vector3.new(FakeHandle.Velocity.X, 0, FakeHandle.Velocity.Z).magnitude
			local VelocityDifference = math.abs((MySpeed - (ThrustForce.velocity.magnitude)))
			if MySpeed &gt; 3 and ThrustForce.velocity.magnitude &gt; 3 and VelocityDifference &gt; (0.7 * ThrustForce.velocity.magnitude) then
				CurrentSpeed = (CurrentSpeed * 0.9)
			end
		end
		LastPosition = Vector3.new(Torso.CFrame.p.x, 0, Torso.CFrame.p.z)
		wait(1 / 60)
	end
end

function CheckIfAlive()
	return (Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped()
	local CurrentlyEquipped = true
	ToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
		ToolUnequipped:disconnect()
	end)
	wait(0.3)
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	if not CurrentlyEquipped then
		return
	end
	ToolEquipped = true
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso") or Character:FindFirstChild("UpperTorso")
	if not CheckIfAlive() then
		return
	end

	Spawn(function()
		if Humanoid and Humanoid.RigType == Enum.HumanoidRigType.R15 then
			InvokeClient("PlayAnimation", Animations.R15Hold)
		else
			InvokeClient("PlayAnimation", Animations.Hold)
		end

		Handle.Velocity = Vector3.new(0, 0, 0)

		Torso.Velocity = Vector3.new(0, 0, 0)

		local Hit, EndPosition = RayCast(Torso.Position, Vector3.new(0, -1, 0), (Torso.Size.Y * 2), {Character})
		if Hit then
			Torso.CFrame = Torso.CFrame + Vector3.new(0, ((Torso.Size.Y * 2) + Handle.Size.Y), 0)
		end

		if FakeHandle and FakeHandle.Parent then
			FakeHandle:Destroy()
		end

		Handle.Transparency = 1

		FakeHandle = VehicleModule:Clone()
		FrontMotor = FakeHandle:FindFirstChild("FrontMotor")
		BackMotor = FakeHandle:FindFirstChild("BackMotor")

		Handle.CFrame = Torso.CFrame
		Humanoid.WalkSpeed = 0
		Humanoid.PlatformStand = true

		RotationForce = Instance.new("BodyAngularVelocity")
		RotationForce.maxTorque = Vector3.new(0, math.huge, 0)
		RotationForce.angularvelocity = Vector3.new(0, 0, 0)
		RotationForce.Parent = FakeHandle

		ThrustForce = Instance.new("BodyVelocity")
		ThrustForce.maxForce = Vector3.new(math.huge, 0, math.huge)
		ThrustForce.velocity = Vector3.new(0, 0, 0)
		ThrustForce.P = 100
		ThrustForce.Parent = FakeHandle

		TurnGyro = Instance.new("BodyGyro")
		TurnGyro.maxTorque = Vector3.new(5000, 0, 5000)
		TurnGyro.P = 300
		TurnGyro.D = 100
		TurnGyro.Parent = FakeHandle

		Spawn(function()
			ThrustUpdater()
		end)

		LastSpace = tick()

		Spawn(function()
			if FakeHandle then
				TorsoWeld = Instance.new("Weld")
				TorsoWeld.C0 = CFrame.new(0, -1.75, -1.55) * CFrame.Angles((math.pi / 6), 0, 0)
				TorsoWeld.Part0 = Torso
				TorsoWeld.Part1 = FakeHandle
				TorsoWeld.Parent = FakeHandle
				FakeHandle.CanCollide = true
			end
		end)

		if CurrentlyEquipped then
			Torso.CFrame = Torso.CFrame + Vector3.new(0, 1, 0) * (Torso.Size.Y * 2)
			FakeHandle.Parent = Tool
			FakeHandle = Tool:FindFirstChild(FakeHandle.Name)
			for i, v in pairs({"FrontWheel", "BackWheel"}) do
				local Object = FakeHandle:FindFirstChild(v)
				if Object and Object:IsA("BasePart") then
					InvokeClient("SetLocalTransparencyModifier", {Object = Object, Transparency = 0, AutoUpdate = true})
				end
			end

			local Limbs = {"Left Arm", "Right Arm", "RightUpperArm", "RightLowerArm", "RightHand", "LeftHand", "LeftLowerArm", "LeftUpperArm"}
			for i, v in pairs(Limbs) do
				local Object = Character:FindFirstChild(v)
				if Object and Object:IsA("BasePart") then
					InvokeClient("SetLocalTransparencyModifier", {Object = Object, Transparency = 0, AutoUpdate = false})
				end
			end
		end

	end)

end

function Unequipped()
	local CurrentlyEquipped = ToolEquipped
	ToolEquipped = false
	CurrentSpeed = 0
	TurnSpeed = 0
	for i, v in pairs(Controls) do
		Controls[i] = false
	end
	for i, v in pairs({ToolUnequipped}) do
		if v then
			v:disconnect()
		end
	end
	if FakeHandle and FakeHandle.Parent then
		FakeHandle:Destroy()
	end
	for i, v in pairs(Animations) do
		InvokeClient("StopAnimation", v)
	end
	for i, v in pairs(Sounds) do
		v:Stop()
		InvokeClient("StopSound", v)
	end
	Handle.Transparency = 0
	Handle.Velocity = Vector3.new(0, 0, 0)
	Handle.RotVelocity = Vector3.new(0, 0, 0)
	if Torso then
		Torso.Velocity = Vector3.new(0, -10, 0)
	end
	if Humanoid and Humanoid.Parent and CurrentlyEquipped then
		Humanoid.WalkSpeed = 16
		Humanoid.PlatformStand = false
		Humanoid.Jump = true
	end
end

Tool.Unequipped:connect(Unequipped)
Tool.Equipped:connect(Equipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX14AF9404DFBF4934B6BD7EC104970CB7">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset?id=189854234</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Hold</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXFF0A625840354FDF8E5FE5A747F57581">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{92FCA2BC-CC39-4E9B-B813-A093E1299C26}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
ContentProvider = game:GetService("ContentProvider")
RunService = game:GetService("RunService")

Camera = game:GetService("Workspace").CurrentCamera

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ToolEquipped = false

ClientControl.OnClientInvoke = (function(Mode, Value)
	if Mode == "PlayAnimation" and Value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", Value)
	elseif Mode == "StopAnimation" and Value then
		SetAnimation("StopAnimation", Value)
	elseif Mode == "Preload" and Value then
		ContentProvider:Preload(Value)
	elseif Mode == "PlaySound" and Value then
		Value:Play()
	elseif Mode == "StopSound" and Value then
		Value:Stop()
	elseif Mode == "MousePosition" then
		return PlayerMouse.Hit.p
	elseif Mode == "DisableJump" then
		DisableJump(Value)
	elseif Mode == "SetMouseIcon" and Value then
		PlayerMouse.Icon = Value
	elseif Mode == "SetLocalTransparencyModifier" and Value and ToolEquipped then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == Value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, Value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent and ((not v.AutoUpdate and (v.Object.LocalTransparencyModifier == 1 or  v.Object.LocalTransparencyModifier == 0)) or v.AutoUpdate) then
							v.Object.LocalTransparencyModifier = v.Transparency
						end
					end
				end)
			end
		end)
	elseif Mode == "GetCamera" and Value then
		local PropertyValue = nil
		if Value.Property then
			pcall(function()
				PropertyValue = Camera[Value.Property]
			end)
		end
		return PropertyValue
	elseif Mode == "SetCamera" and Value then
		if Value.Property and Value.Value then
			pcall(function()
				Camera[Value.Property] = Value.Value
			end)
		end
	elseif Mode == "SetMouseSensitivity" and Value then
		if Value.Sensitivity == 1 then
			if MouseSensivityConnection then
				MouseSensivityConnection:disconnect()
			end
		else
			SetMouseSensitivity(Value.Sensitivity)
		end
	end
end)

function InvokeServer(Mode, Value)
	pcall(function()
		local ServerReturn = ServerControl:InvokeServer(Mode, Value)
		return ServerReturn
	end)
end

function SetAnimation(Mode, Value)
	if Mode == "PlayAnimation" and Value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
		table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
	elseif Mode == "StopAnimation" and Value then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	end
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function SetMouseSensitivity(Sensitivity)

	if MouseSensivityConnection then
		MouseSensivityConnection:disconnect()
	end

	local function EulerAnglesYX(cframe)
		local X, Y, Z, R00, R01, R02, R10, R11, R12, R20, R21, R22 = cframe:components(cframe)
		return -math.asin(R12), ((math.abs(R12) &gt; 0.99999 and -math.atan2(-R20, R00)) or -math.atan2(-R02, R22))
	end

	local DirectionX, DirectionY = EulerAnglesYX(Camera.CoordinateFrame)

	local function UpdateSensitivity()
		local CFrameX, CFrameY = EulerAnglesYX(Camera.CoordinateFrame)
		DirectionX = (DirectionX * (1 - Sensitivity) + (CFrameX + (math.pi * 2) * math.floor((DirectionX - CFrameX) / (math.pi * 2) + 0.5)) * Sensitivity)
		DirectionY = (DirectionY * (1 - Sensitivity) + (CFrameY + (math.pi * 2) * math.floor((DirectionY - CFrameY) / (math.pi * 2) + 0.5)) * Sensitivity)
		Camera.CoordinateFrame = CFrame.Angles(0, DirectionY, 0) * CFrame.Angles(DirectionX, 0, 0) * CFrame.new(0, 0, 0.5) + Camera.Focus.p
	end

	MouseSensivityConnection = RunService.RenderStepped:connect(UpdateSensitivity)

end

function CheckIfAlive()
	return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.Button1Down:connect(function()
		InvokeServer("MouseClick", {Down = true})
	end)
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
	Mouse.WheelForward:connect(function()
		InvokeServer("WheelMoved", {Forward = true})
	end)
	Mouse.WheelBackward:connect(function()
		InvokeServer("WheelMoved", {Forward = false})
	end)
end

function Unequipped()
	ToolEquipped = false
	LocalObjects = {}
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs({PreventJump, MouseSensivityConnection, ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end
	PlayerMouse.Icon = ""
	Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXAD199E7C53224A63B23DA98BCB584E42">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">VehicleModule</string>
						<string name="ScriptGuid">{430A4610-BCAE-445B-80B0-19C150681C40}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

BasePart = Instance.new("Part")
BasePart.Material = Enum.Material.Plastic
BasePart.Shape = Enum.PartType.Block
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true

MeshData = {
	TextureId = "http://www.roblox.com/asset/?id=189753994",
	Meshes = {
		Body = "http://www.roblox.com/asset/?id=189852085",
		FrontWheel = "http://www.roblox.com/asset/?id=189753965",
		BackWheel = "http://www.roblox.com/asset/?id=189753981",
	},
	Scale = Vector3.new(2, 2, 2)
}

Body = BasePart:Clone()
Body.Name = "FakeHandle"
Body.Size = Vector3.new(1, 5, 6)
Body.CanCollide = false
BodyMesh = Instance.new("SpecialMesh")
BodyMesh.MeshType = Enum.MeshType.FileMesh
BodyMesh.MeshId = MeshData.Meshes.Body
BodyMesh.TextureId = MeshData.TextureId
BodyMesh.Scale = MeshData.Scale
BodyMesh.Parent = Body

Wheel = BasePart:Clone()
Wheel.CanCollide = false
WheelMesh = Instance.new("SpecialMesh")
WheelMesh.MeshType = Enum.MeshType.FileMesh
WheelMesh.TextureId = MeshData.TextureId
WheelMesh.Scale = MeshData.Scale
WheelMesh.Parent = Wheel
FrontWheel = Wheel:Clone()
FrontWheel.Name = "FrontWheel"
FrontWheel.Mesh.MeshId = MeshData.Meshes.FrontWheel
BackWheel = Wheel:Clone()
BackWheel.Name = "BackWheel"
BackWheel.Mesh.MeshId = MeshData.Meshes.BackWheel

FakeHandle = Body:Clone()
FakeHandle.CanCollide = false

FrontWheelClone = FrontWheel:Clone()
FrontMotor = Instance.new("Motor6D")
FrontMotor.Name = "FrontMotor"
FrontMotor.Part0 = FakeHandle
FrontMotor.Part1 = FrontWheelClone
FrontMotor.C0 = CFrame.Angles(0, (math.pi / 2), 0) + Vector3.new(0, -1.125, -2.1)
FrontMotor.C1 = CFrame.Angles(0, -(math.pi / 2), 0)
FrontMotor.Parent = FakeHandle
FrontWheelClone.Parent = FakeHandle

BackWheelClone = BackWheel:Clone()
BackMotor = Instance.new("Motor6D")
BackMotor.Name = "BackMotor"
BackMotor.Part0 = FakeHandle
BackMotor.Part1 = BackWheelClone
BackMotor.C0 = CFrame.Angles(0, (math.pi / 2), 0) + Vector3.new(0, -1.125, 2.125)
BackMotor.C1 = CFrame.Angles(0, -(math.pi / 2), 0)
BackMotor.Parent = FakeHandle
BackWheelClone.Parent = FakeHandle

return FakeHandle:Clone()</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX44662FACFA544339904C41674D144764">
					<Properties>
						<Content name="AnimationId"><url>rbxassetid://518688140</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">R15Hold</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
			</Item>
		</Item>
		