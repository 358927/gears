<Item class="Model" referent="RBX91F44FF6B63248ABACCBF8CC04B5C274">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">181356054</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBX84D6550D7D784CC48584425F5871D9D7">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>0</X>
						<Y>-2</Y>
						<Z>0.125</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">HalloweenSword</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=179155073</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>1.69238377</X>
							<Y>9.42896175</Y>
							<Z>1.99373126</Z>
							<R00>-0.589818358</R00>
							<R01>0.241481557</R01>
							<R02>-0.770584941</R02>
							<R10>-3.96370524e-07</R10>
							<R11>0.954242051</R11>
							<R12>0.299035192</R12>
							<R20>0.807536125</R20>
							<R21>0.17637676</R21>
							<R22>-0.562829435</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX4E0A9E146D814A11B4B24679957E3F33">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>1.69238377</X>
							<Y>9.42896175</Y>
							<Z>1.99373126</Z>
							<R00>-0.589818358</R00>
							<R01>0.241481557</R01>
							<R02>-0.770584941</R02>
							<R10>-3.96370524e-07</R10>
							<R11>0.954242051</R11>
							<R12>0.299035192</R12>
							<R20>0.807536125</R20>
							<R21>0.17637676</R21>
							<R22>-0.562829435</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>0.5</X>
							<Y>5.5</Y>
							<Z>1.5</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX479C846DE4594618A53B2334FA4FE209">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset?id=179155055</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset?id=179155105</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBXFEFA6EAB41BC4CB59C16849EEBAC3B24">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Unsheath</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>rbxasset://sounds/unsheath.wav</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX72A3F3EFA8674FFFB62AFF699CB67E31">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Slash</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>rbxasset://sounds/swordslash.wav</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.699999988</float>
						</Properties>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBXB10D166EA07F42A292BD95332D9E1715">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{3943D7E7-3076-4D6C-A3CE-39E71E23CD7B}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
CAS = game:GetService'ContextActionService'
UIS = game:GetService'UserInputService'

Animations = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ClientControl.OnClientInvoke = (function(Mode, Value)
	if Mode == "PlayAnimation" and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
		table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
	elseif Mode == "StopAnimation" and Value then
		for i, v in pairs(Animations) do
			if v.Animation == Value then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	elseif Mode == "PlaySound" and Value then
		Value:Play()
	elseif Mode == "StopSound" and Value then
		Value:Stop()
	end
end)

function InvokeServer(Mode, Value)
	pcall(function()
		local ServerReturn = ServerControl:InvokeServer(Mode, Value)
		return ServerReturn
	end)
end

function CheckIfAlive()
	return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)

	if UIS.TouchEnabled then
		CAS:BindActionToInputTypes('AllHallowsSword_Snare', function()
			spawn(function() InvokeServer('KeyPress', {Key = 'q', Down = true}) end)
		end, true, '')
		CAS:SetTitle('AllHallowsSword_Snare', 'Vine Snare')
		CAS:BindActionToInputTypes('AllHallowsSword_Wall', function()
			spawn(function() InvokeServer('KeyPress', {Key = 'e', Down = true}) end)
		end, true, '')
		CAS:SetTitle('AllHallowsSword_Wall', 'Vine Wall')
		CAS:BindActionToInputTypes('AllHallowsSword_Shield', function()
			spawn(function() InvokeServer('KeyPress', {Key = 'x', Down = true}) end)
		end, true, '')
		CAS:SetTitle('AllHallowsSword_Shield', 'Vine Shield')
	end
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}

	if UIS.TouchEnabled then
		CAS:UnbindAction'AllHallowsSword_Snare'
		CAS:UnbindAction'AllHallowsSword_Wall'
		CAS:UnbindAction'AllHallowsSword_Shield'
	end
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXC0DD5822B496449BA60F015BDEFEC392">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MouseIcon</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{D4077D56-6B62-445E-A2F6-A13D5F356D8C}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Script" referent="RBX29B811E1FE284CBAA2DF96FFCA15CAEE">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{5CC42B34-048C-482E-96A7-9FCC64597731}</string>
						<ProtectedString name="Source">--Made by Luckymaxer.  Fixed by ArceusInator.
local GLib = require(206209239) -- Function library

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

BasePart = Instance.new("Part")
BasePart.Material = Enum.Material.Plastic
BasePart.Shape = Enum.PartType.Block
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.Anchored = true
BasePart.CanCollide = false
BasePart.Locked = true

Animations = {
	Equip = {Animation = Tool:WaitForChild("Equip"), FadeTime = nil, Weight = nil, Speed = 1, Duration = 1},
	LeftSlash = {Animation = Tool:WaitForChild("LeftSlash"), FadeTime = nil, Weight = nil, Speed = 1.5, Duration = 0.5},
	RightSlash = {Animation = Tool:WaitForChild("RightSlash"), FadeTime = nil, Weight = nil, Speed = 1.5, Duration = 0.5}
}

Sounds = {
	Unsheath = Handle:WaitForChild("Unsheath"),
	Slash = Handle:WaitForChild("Slash")
}

Damage = {
	Touch = 10,
	Slash = 15
}

SpecialAttacks = {
	Enabled = true,
	Active = false,
	ReloadTime = 1,
	VineGrab = {
		MaxDistance = 15,
		Duration = 10,
		ReloadTime = 5,
		Enabled = true,
		Active = false
	},
	VineShot = {
		Damage = 12,
		Duration = 10,
		ReloadTime = 7.5,
		Enabled = true,
		Active = false
	},
	VineShield = {
		Damage = 20,
		Duration = 10,
		ReloadTime = 10,
		Enabled = true,
		Active = false
	}
}

Equipped = false
Active = false

ServerControl = (Tool:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Tool

Tool.Enabled = true

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if player == Player and Equipped and Humanoid.Health &gt; 0 then
		local SpecialSuccessful = false
		if Mode == "KeyPress" and SpecialAttacks.Enabled and not SpecialAttacks.Active then
			local Key = Value.Key
			local Down = Value.Down
			SpecialAttacks.Enabled = false
			SpecialAttacks.Active = true
			if Key == "q" and Down then
				local SpecialAttack = SpecialAttacks.VineGrab
				if SpecialAttack.Enabled and not SpecialAttack.Active then
					SpecialAttack.Enabled = false
					SpecialAttack.Active = true
					local PlayersTrapped = {}
					local CharactersInRange = {}
					local PartsInRegion = workspace:FindPartsInRegion3(
						Region3.new(
							Torso.Position - Vector3.new(1,1,1)*SpecialAttack.MaxDistance/2,
							Torso.Position + Vector3.new(1,1,1)*SpecialAttack.MaxDistance/2
						),
						Torso.Parent
					)
					for i, p in next, PartsInRegion do
						if (p.Position - Torso.Position).magnitude &lt;= SpecialAttack.MaxDistance then
							local char = GLib.GetCharacterFromPart(p)
							if char then
								CharactersInRange[char] = true
							end
						end
					end
					for character in next, CharactersInRange do
						if character ~= Player.Character then
							local humanoid = GLib.GetHumanoid(character)
							local torso = character:FindFirstChild'HumanoidRootPart'
							local canHurt = GLib.IsTeammate(Player, GLib.GetPlayerFromPart(character))~=true
							if humanoid and humanoid.Health &gt; 0 and torso and (Torso.Position - torso.Position).magnitude &lt;= SpecialAttack.MaxDistance and canHurt then
								local RayHit, RayPos = RayCast(torso.Position, Vector3.new(0, -1, 0), (torso.Size.Y * 2), {character, Character})
								if RayHit then
									table.insert(PlayersTrapped, RayHit)
									local Vine = CreateVine(3)
									Debris:AddItem(Vine, SpecialAttack.Duration)
									local VineSize = Vine:GetModelSize()
									local VineCFrame = (torso.CFrame + Vector3.new(0, ((VineSize.Y / 2) - (character:GetModelSize().Y / 2) - 1), 0))
									VineCFrame = (VineCFrame + VineCFrame.lookVector * 0.5) * CFrame.Angles(0, math.random(-360, 360), 0)
									local VineOrigin = VineCFrame - Vector3.new(0, VineSize.Y, 0)
									local TorsoCFrame = Torso.CFrame
									local TempPart = BasePart:Clone()
									TempPart.Transparency = 1
									local BP = Instance.new'BodyPosition'
									BP.position = torso.Position
									BP.maxForce = Vector3.new(1,1,1)*1000000000
									BP.Parent = torso
									Debris:AddItem(BP, SpecialAttack.Duration)
									Debris:AddItem(TempPart, (SpecialAttack.Duration + 3))
									TempPart.Parent = character
									TempPart.CFrame = TorsoCFrame
									for i, v in pairs(Vine:GetChildren()) do
										if v:IsA("BasePart") then
											v.Transparency = 1
										end
									end
									Vine.Parent = game:GetService("Workspace")
									Spawn(function()
										for i = 1, 25 do
											if Vine and Vine.Parent then
												TransformModel(Vine, Vine:GetModelCFrame(), (VineOrigin + Vector3.new(0, ((VineSize.Y / 25) * i), 0)), true)
												if i == 1 then
													for ii, vv in pairs(Vine:GetChildren()) do
														if vv:IsA("BasePart") then
															vv.Transparency = 0
														end
													end
												end
												wait(0.01)
											end
										end
										if character and character.Parent then
											for i, v in pairs(Vine:GetChildren()) do
												if v:IsA("BasePart") then
													for ii, vv in pairs(character:GetChildren()) do
														if vv:IsA("BasePart") and vv.Name=='HumanoidRootPart' then
															local Weld = WeldTo(v, vv)
														end
													end
												end
											end
										end
										if TempPart and TempPart.Parent then
											TempPart:Destroy()
										end
										TransformModel(Vine, Vine:GetModelCFrame(), VineCFrame, true)
									end)
								end
							end
						end
					end

					if #PlayersTrapped &gt; 0 then
						SpecialSuccessful = true
						wait(SpecialAttack.Duration)
					end
					SpecialAttack.Active = false
					Spawn(function()
						if #PlayersTrapped &gt; 0 then
							wait(SpecialAttack.ReloadTime)
						end
						SpecialAttack.Enabled = true
					end)
				end
			elseif Key == "e" and Down then
				local SpecialAttack = SpecialAttacks.VineShot
				if SpecialAttack.Enabled and not SpecialAttack.Active then
					SpecialSuccessful = true
					SpecialAttack.Enabled = false
					SpecialAttack.Active = true
					local Vines = {}
					local VineModel = Instance.new("Model")
					VineModel.Name = "VineModel"
					Debris:AddItem(VineModel, SpecialAttack.Duration)
					VineModel.Parent = game:GetService("Workspace")
					local CharacterSize = Character:GetModelSize()
					local TorsoCFrame = Torso.CFrame
					for i = 1, 10 do
						if VineModel and VineModel.Parent then
							local Vine = CreateVine(3)
							for i, v in pairs(Vine:GetChildren()) do
								if v:IsA("BasePart") then
									v.Touched:connect(function(Hit)
										if not Hit or not Hit.Parent then
											return
										end
										local character = Hit.Parent
										local humanoid = character:FindFirstChild("Humanoid")
										local canHurt = GLib.IsTeammate(Player, GLib.GetPlayerFromPart(character))~=true
										if character ~= Character and humanoid and humanoid.Health &gt; 0 and canHurt then
											UntagHumanoid(humanoid)
											TagHumanoid(humanoid, Player)
											humanoid:TakeDamage(SpecialAttack.Damage)
										end
									end)
								end
							end
							Debris:AddItem(Vine, (SpecialAttack.Duration + 3))
							for i, v in pairs(Vine:GetChildren()) do
								if v:IsA("BasePart") then
									v.Transparency = 1
								end
							end
							Vine.Parent = VineModel
							local VineSize = Vine:GetModelSize()
							local VineCFrame = (TorsoCFrame + Vector3.new(0, ((VineSize.Y / 2) - (CharacterSize.Y / 2) - 1), 0))
							VineCFrame = (VineCFrame + VineCFrame.lookVector * 0.5) * CFrame.Angles(0, math.random(-360, 360), 0)
							local VineOrigin = VineCFrame - Vector3.new(0, VineSize.Y, 0)
							TransformModel(Vine, Vine:GetModelCFrame(), VineOrigin, true)
							local LookVector = CFrame.new(TorsoCFrame.p, Vector3.new(VineOrigin.p.X, TorsoCFrame.p.Y, VineOrigin.p.Z)).lookVector
							Spawn(function()
								for ii = 1, 25 do
									if VineModel and VineModel.Parent then
										TransformModel(Vine, Vine:GetModelCFrame(), (VineOrigin + Vector3.new(0, ((VineSize.Y / 25) * ii), 0)) + LookVector * ((20 / VineSize.Z) * i), true)
										if ii == 1 then
											for iii, vvv in pairs(VineModel:GetChildren()) do
												if vvv:IsA("Model") then
													for iiii, vvvv in pairs(vvv:GetChildren()) do
														if vvvv:IsA("BasePart") then
															vvvv.Transparency = 0
														end
													end
												end
											end
										end
										wait(0.01)
									end
								end
							end)
							wait(0.25)
						end
					end
					wait(SpecialAttack.Duration)
					SpecialAttack.Active = false
					Spawn(function()
						wait(SpecialAttack.ReloadTime)
						SpecialAttack.Enabled = true
					end)
				end
			elseif Key == "x" and Down then
				local SpecialAttack = SpecialAttacks.VineShield
				if SpecialAttack.Enabled and not SpecialAttack.Active then

					local RayHit, RayPos = RayCast(Torso.Position, Vector3.new(0, -1, 0), (Torso.Size.Y * 4), {Character})

					if RayHit then

						SpecialSuccessful = true
						SpecialAttack.Enabled = false
						SpecialAttack.Active = true

						local VineModel = Instance.new("Model")
						VineModel.Name = "VineShield"
						Debris:AddItem(VineModel, SpecialAttack.Duration)

						local Center = RayPos

						local NumberOfVines = 16
						local Increment = ((math.pi * 2) / NumberOfVines)
						local LookVector = CFrame.new(Center).lookVector
						local PosX = (12.5 * LookVector.x)
						local PosZ = (12.5 * LookVector.z)
						local Pos = Vector3.new((Center.x + PosX), Center.y, (Center.z + PosZ))
						local Vines = {}

						for i = 1, NumberOfVines do
							local Vine = CreateVine(9)
							for i, v in pairs(Vine:GetChildren()) do
								if v:IsA("BasePart") then
									v.Transparency = 1
								end
							end
							for ii, v in pairs(Vine:GetChildren()) do
								if v:IsA("BasePart") then
									v.CanCollide = true
									v.Touched:connect(function(Hit)
										if not Hit or not Hit.Parent then
											return
										end
										local character = Hit.Parent
										local humanoid = character:FindFirstChild("Humanoid")
										local canHurt = GLib.IsTeammate(Player, GLib.GetPlayerFromPart(character))~=true
										if character ~= Character and humanoid and humanoid.Health &gt; 0 and canHurt then
											UntagHumanoid(humanoid)
											TagHumanoid(humanoid, Player)
											humanoid:TakeDamage(SpecialAttack.Damage)
										end
									end)
								end
							end
							local VineClone = Vine:Clone()
							Pos = CFrame.new(CFrame.new(Pos).p, Center) * CFrame.Angles(0, (math.pi / 2), 0)
							Pos = Pos + Vector3.new(0, ((VineClone:GetModelSize().Y / 2) - (Torso.Size.Y * 1.5)), 0)
							local Angle = (Increment * i)
							table.insert(Vines, {Vine = Vine, Position = Pos})
							Pos = Vector3.new(((Pos.x - Center.x) * math.cos(Angle)) - ((Pos.z - Center.z) * math.sin(Angle)) + Center.x, Center.y, ((Pos.x - Center.x) * math.sin(Angle)) + ((Pos.z - Center.z) * math.cos(Angle)) + Center.z)
						end

						for i, v in pairs(Vines) do
							if v.Vine then
								v.Vine.Parent = VineModel
								TransformModel(v.Vine, v.Vine:GetModelCFrame(), v.Position, true)
							end
						end

						local VineModelCFrame = VineModel:GetModelCFrame()
						TransformModel(VineModel, VineModelCFrame, (VineModelCFrame - Vector3.new(0, VineModel:GetModelSize().Y, 0)), true)
						VineModel.Parent = game:GetService("Workspace")

						for i = 1, 50 do
							local VineCFrame = VineModel:GetModelCFrame()
							TransformModel(VineModel, VineCFrame, (VineCFrame + Vector3.new(0, (VineModel:GetModelSize().Y / 50), 0)), true)
							if i == 1 then
								for ii, vv in pairs(VineModel:GetChildren()) do
									if vv:IsA("Model") then
										for iii, vvv in pairs(vv:GetChildren()) do
											if vvv:IsA("BasePart") then
												vvv.Transparency = 0
											end
										end
									end
								end
							end
							wait(0.01)
						end

						wait(SpecialAttack.Duration)
						SpecialAttack.Active = false
						Spawn(function()
							wait(SpecialAttack.ReloadTime)
							SpecialAttack.Enabled = true
						end)
					end
				end
			end
			if SpecialSuccessful then
				wait(SpecialAttacks.ReloadTime)
			end
			SpecialAttacks.Active = false
			SpecialAttacks.Enabled = true
		end
	end
end)

function InvokeClient(Mode, Value)
	local ReturnValue = nil
	pcall(function()
		ReturnValue = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ReturnValue
end

function RayCast(Position, Direction, MaxDistance, IgnoreList)
	return game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList)
end

function TagHumanoid(humanoid, player)
	local Creator_Tag = Instance.new("ObjectValue")
	Creator_Tag.Name = "creator"
	Creator_Tag.Value = player
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function Blow(Part)
	Part.Touched:connect(function(Hit)
		if not Hit or not Hit.Parent or not Equipped or not Character or not Character.Parent then
			return
		end
		local RightArm = Character:FindFirstChild("Right Arm")
		if not RightArm then
			return
		end
		local RightGrip = RightArm:FindFirstChild("RightGrip")
		if not RightGrip or (RightGrip.Part0 ~= Handle and RightGrip.Part1 ~= Handle) then
			return
		end
		local character = Hit.Parent
		local humanoid = character:FindFirstChild("Humanoid")
		local canHurt = GLib.IsTeammate(Player, GLib.GetPlayerFromPart(character)) ~= true
		if character ~= Character and humanoid and humanoid.Health &gt; 0 and canHurt then
			UntagHumanoid(humanoid)
			TagHumanoid(humanoid, Player)
			humanoid:TakeDamage((Active and Damage.Slash) or Damage.Touch)
		end
	end)
end

function TransformModel(Objects, Center, NewCFrame, Recurse)
	Objects = ((type(Objects) ~= "table" and {Objects}) or Objects)
	for i, v in pairs(Objects) do
		if v:IsA("BasePart") then
			v.CFrame = NewCFrame:toWorldSpace(Center:toObjectSpace(v.CFrame))
		end
		if Recurse then
			TransformModel(v:GetChildren(), Center, NewCFrame, true)
		end
	end
end

function WeldTo(PrimaryPart, SecondaryPart)
	if not PrimaryPart or not SecondaryPart then
		return
	end
	local Weld = Instance.new("Weld")
	Weld.Name = "Weld"
	Weld.Part0 = PrimaryPart
	Weld.Part1 = SecondaryPart
	Weld.C0 = PrimaryPart.CFrame:inverse()
	Weld.C1 = SecondaryPart.CFrame:inverse()
	Weld.Parent = PrimaryPart
	return Weld
end

function CreateVine(Length)
	local VineModel = Instance.new("Model")
	VineModel.Name = "Vines"
	local Vine = BasePart:Clone()
	Vine.Name = "Vine"
	Vine.Size = Vector3.new(3, 2.4, 3)
	local VineMesh = Instance.new("SpecialMesh")
	VineMesh.MeshType = Enum.MeshType.FileMesh
	VineMesh.MeshId = "http://www.roblox.com/asset/?id=178186804"
	VineMesh.TextureId = "http://www.roblox.com/asset/?id=17585271"
	VineMesh.Scale = Vector3.new(2, 2, 2)
	VineMesh.VertexColor = Vector3.new(1, (math.random() / 2), 0)
	VineMesh.Parent = Vine
	for i = 1, Length do
		local VinePart = Vine:Clone()
		VinePart.Parent = VineModel
		VinePart.CFrame = VinePart.CFrame + Vector3.new(0, (VinePart.Size.Y * i), 0)
	end
	return VineModel
end

function Activated()
	if not Tool.Enabled or not Equipped then
		return
	end
	Tool.Enabled = false
	Active = true
	local SlashAnims = {Animations.LeftSlash, Animations.RightSlash}
	local SlashAnim = SlashAnims[math.random(1, #SlashAnims)]
	InvokeClient("PlayAnimation", SlashAnim)
	InvokeClient("PlaySound", Sounds.Slash)
	wait(SlashAnim.Duration)
	InvokeClient("StopAnimation", SlashAnim)
	Active = false
	Tool.Enabled = true
end

function Equipped(Mouse)
	Equipped = false
	Active = false
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	if not Player or not Humanoid or Humanoid.Health == 0 or not Torso then
		return
	end
	InvokeClient("PlaySound", Sounds.Unsheath)
	local EquipAnim = Animations.Equip
	local CurrentlyEquipped = true
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	ToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
		if ToolUnequipped then
			ToolUnequipped:disconnect()
		end
	end)
	InvokeClient("PlayAnimation", EquipAnim)
	wait(EquipAnim.Duration)
	if CurrentlyEquipped then
		InvokeClient("StopAnimation", EquipAnim)
		Equipped = true
	end
end

function Unequipped()
	Equipped = false
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	for i, v in pairs(Animations) do
		if v and v.Parent then
			InvokeClient("StopAnimation", v)
		end
	end
	for i, v in pairs(Sounds) do
		if v and v.Parent then
			InvokeClient("StopSound", v)
		end
	end
end

Blow(Handle)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXB9D289497C644CF2BA8CA5E463DA1FDE">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=94160581</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Equip</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXEF3D909289EE40C0B2CFF26C6C9B99EB">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=180646771</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">LeftSlash</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX757AC2FE7AA54EAA8051B30AB913AAAF">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=181167590</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">RightSlash</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Camera" referent="RBX5F651A1ADDD24431A19BAD2086360D03">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>-1.30521989</X>
							<Y>10.1657715</Y>
							<Z>5.23147011</Z>
							<R00>0.761538744</R00>
							<R01>0.0643755719</R01>
							<R02>-0.644914389</R02>
							<R10>-0</R10>
							<R11>0.995054901</R11>
							<R12>0.0993267149</R12>
							<R20>0.64811939</R20>
							<R21>-0.0756411403</R21>
							<R22>0.757772863</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>0.0813462734</X>
							<Y>9.95221901</Y>
							<Z>3.60225821</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		