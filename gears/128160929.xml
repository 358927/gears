<Item class="Model" referent="RBX49CB10F099FB4678ABB914C9DA62818F">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">128160929</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBX0D447D76D62D443598F113AEBE23D8C6">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">false</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>0.200000003</X>
						<Y>-0.300000012</Y>
						<Z>-0.5</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">BookWorm</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=128220241</url></Content>
					<string name="ToolTip">Book Worm</string>
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>5.65097523</X>
							<Y>2.27800202</Y>
							<Z>0.52009201</Z>
							<R00>-0.584387481</R00>
							<R01>-0.0177955162</R01>
							<R02>0.811279535</R02>
							<R10>-1.4232737e-14</R10>
							<R11>0.999759495</R11>
							<R12>0.0219298471</R12>
							<R20>-0.811474681</R20>
							<R21>0.0128155285</R21>
							<R22>-0.584246933</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBXCE379D176AA24D2E9474ADE8DD301A22">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>5.65097523</X>
							<Y>2.27800202</Y>
							<Z>0.52009201</Z>
							<R00>-0.584387481</R00>
							<R01>-0.0177955162</R01>
							<R02>0.811279535</R02>
							<R10>-1.4232737e-14</R10>
							<R11>0.999759495</R11>
							<R12>0.0219298471</R12>
							<R20>-0.811474681</R20>
							<R21>0.0128155285</R21>
							<R22>-0.584246933</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1.02999997</X>
							<Y>1.67999995</Y>
							<Z>1.5</Z>
						</Vector3>
					</Properties>
					<Item class="Sound" referent="RBXE1A1D730A7E8477698AEC60BC5B59761">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Reload</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=94132726</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBXA21992B2DB7B44FFB3203BC559BA26BF">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Equip</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1.33000004</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=97103817</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX88898BC862404A8FB9DAC95C6ABFD3A6">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">true</bool>
							<string name="Name">Swoosh</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=128217767</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
					<Item class="SpecialMesh" referent="RBX883BC874779D4741B4CC98A450EA42C9">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=128149461</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.699999988</X>
								<Y>0.699999988</Y>
								<Z>0.699999988</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=128149527</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Script" referent="RBXDE84645A9A52418BB622852AB1AA93E8">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Launcher</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{3DAB2AD8-B8AE-42CE-91DA-907CB3F2B277}</string>
						<ProtectedString name="Source">--Rescripted by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

local function Create_PrivImpl(objectType)
	if type(objectType) ~= 'string' then
		error("Argument of Create must be a string", 2)
	end
	--return the proxy function that gives us the nice Create'string'{data} syntax
	--The first function call is a function call using Lua's single-string-argument syntax
	--The second function call is using Lua's single-table-argument syntax
	--Both can be chained together for the nice effect.
	return function(dat)
		--default to nothing, to handle the no argument given case
		dat = dat or {}

		--make the object to mutate
		local obj = Instance.new(objectType)
		local parent = nil

		--stored constructor function to be called after other initialization
		local ctor = nil

		for k, v in pairs(dat) do
			--add property
			if type(k) == 'string' then
				if k == 'Parent' then
					-- Parent should always be set last, setting the Parent of a new object
					-- immediately makes performance worse for all subsequent property updates.
					parent = v
				else
					obj[k] = v
				end


			--add child
			elseif type(k) == 'number' then
				if type(v) ~= 'userdata' then
					error("Bad entry in Create body: Numeric keys must be paired with children, got a: "..type(v), 2)
				end
				v.Parent = obj


			--event connect
			elseif type(k) == 'table' and k.__eventname then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create.E\'"..k.__eventname.."\']` must have a function value\
							got: "..tostring(v), 2)
				end
				obj[k.__eventname]:connect(v)


			--define constructor function
			elseif k == t.Create then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create]` should be paired with a constructor function, \
							got: "..tostring(v), 2)
				elseif ctor then
					--ctor already exists, only one allowed
					error("Bad entry in Create body: Only one constructor function is allowed", 2)
				end
				ctor = v


			else
				error("Bad entry ("..tostring(k).." =&gt; "..tostring(v)..") in Create body", 2)
			end
		end

		--apply constructor function if it exists
		if ctor then
			ctor(obj)
		end

		if parent then
			obj.Parent = parent
		end

		--return the completed object
		return obj
	end
end

--now, create the functor:
Create = setmetatable({}, {__call = function(tb, ...) return Create_PrivImpl(...) end})

--and create the "Event.E" syntax stub. Really it's just a stub to construct a table which our Create
--function can recognize as special.
Create.E = function(eventName)
	return {__eventname = eventName}
end


BaseUrl = "http://www.roblox.com/asset/?id="

ProjectileScript = script:WaitForChild("ProjectileScript")

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
}

Velocity = 110
VelocitySquared = (Velocity ^ 2)
VelocityToFourth = (Velocity ^ 4)

Sounds = {
	Equip = Handle:WaitForChild("Equip"),
	Reload = Handle:WaitForChild("Reload"),
	Swoosh = Handle:WaitForChild("Swoosh"),
}

BaseProjectile = BasePart:Clone()
BaseProjectile.Name = "Projectile"
BaseProjectile.Size = Vector3.new(0.84, 1.59, 1.2)
BaseProjectile.CanCollide = false
ProjectileMesh = Create("SpecialMesh"){
	MeshType = Enum.MeshType.FileMesh,
	MeshId = (BaseUrl .. "128149461"),
	TextureId = (BaseUrl .. "128149527"),
	Scale = Vector3.new(1, 1, 1),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = BaseProjectile
}

Gravity = 196.20

CoolDown = 4

ToolEquipped = false

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

Handle.Transparency = 0
Tool.Enabled = true

function ComputeLaunchAngle(dx, dy) --http://en.wikipedia.org/wiki/Trajectory_of_a_projectile
	local g = math.abs(Gravity)
	local inRoot = (VelocityToFourth) - (g * ((g*dx*dx) + (2*dy*VelocitySquared)))
	if inRoot &lt;= 0 then
		return .25 * math.pi
	end
	local root = math.sqrt(inRoot)
	local inATan1 = ((VelocitySquared) + root) / (g*dx)
	local inATan2 = ((VelocitySquared) - root) / (g*dx)
	local answer1 = math.atan(inATan1)
	local answer2 = math.atan(inATan2)
	return math.min(answer1,answer2)
end

function MakeProjectile()

	local Projectile = BaseProjectile:Clone()

	local Fire = Create("Fire"){
		Name = "Fire",
		Color = Color3.new((236 / 255), (139 / 255), (70 / 255)),
		SecondaryColor = Color3.new((139 / 255), (80 / 255), (55 / 255)),
		Heat = 9,
		Size = 5,
		Enabled = true,
		Parent = Projectile,
	}

	local Spin = Create("BodyAngularVelocity"){
		maxTorque = Vector3.new(999999, 999999, 999999),
		angularvelocity = Vector3.new((math.random() * 30 - 15), (math.random() * 30 - 15), (math.random() * 30 - 15)),
		Parent = Projectile,
	}

	local Creator = Create("ObjectValue"){
		Name = "Creator",
		Value = Player,
		Parent = Projectile,
	}

	local ProjectileScriptCopy = ProjectileScript:Clone()
	ProjectileScriptCopy.Disabled = false
	ProjectileScriptCopy.Parent = Projectile

	return Projectile

end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0) and true) or false)
end

function Activated()
	local MousePosition = InvokeClient("MousePosition")
	if not MousePosition or not Tool.Enabled or not ToolEquipped or not CheckIfAlive() then
		return
	end
	Tool.Enabled = false
	local TargetPosition = MousePosition.Position
	local SpawnPosition = (Handle.Position + (Handle.CFrame.lookVector * (Handle.Size.z / 2)))

	local ProjectileClone = MakeProjectile()

	ProjectileClone.CFrame = CFrame.new(SpawnPosition, TargetPosition)

	local Direction = (TargetPosition - SpawnPosition).Unit
	local Launch = (SpawnPosition + 3 * Direction)
	local Delta = (TargetPosition - Launch)
	local DY = Delta.Y
	Delta = (Delta * Vector3.new(1, 0, 1))
	local DX = Delta.magnitude
	local UnitDelta = Delta.Unit
	local Theta = ComputeLaunchAngle(DX, DY)
	local XZ = math.cos(Theta)
	local VY = math.sin(Theta)
	local VX = (UnitDelta.X * XZ)
	local VZ = (UnitDelta.Z * XZ)

	ProjectileClone.Velocity = (Vector3.new(VX, VY, VZ) * Velocity)

	local SwooshSound = Sounds.Swoosh:Clone()
	SwooshSound.Parent = ProjectileClone

	Debris:AddItem(ProjectileClone, 10)
	ProjectileClone.Parent = game:GetService("Workspace")

	SwooshSound:Play()

	Sounds.Reload:Play()

	wait(CoolDown)

	Sounds.Reload:Stop()

	Tool.Enabled = true
end

function Equipped()
	Character = Tool.Parent
	Humanoid = Character:FindFirstChild("Humanoid")
	Player = Players:GetPlayerFromCharacter(Character)
	if not CheckIfAlive() then
		return
	end
	Sounds.Equip:Play()
	ToolEquipped = true
end

function Unequipped()
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not ToolEquipped or not mode or not value or not CheckIfAlive() then
		return
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
					<Item class="Script" referent="RBX3A142238E83A43E3900DB1EBE2FC8AE5">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">ProjectileScript</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{D2CD793F-966D-4ED4-BA30-DF0DAD2D1119}</string>
							<ProtectedString name="Source">--Rescripted by Luckymaxer

Projectile = script.Parent

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

Creator = Projectile:WaitForChild("Creator")

ProjectileManager = script:WaitForChild("ProjectileManager")

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
}

TemplateHole = BasePart:Clone()
TemplateHole.Name = "GroundhogHole"
TemplateHole.Transparency = 1
TemplateHole.Size = Vector3.new(5.5, 0.2, 5.5)
TemplateHole.CanCollide = false
Decal = Create("Decal"){
	Name = "Decal",
	Shiny = 20,
	Specular = 0,
	Texture = (BaseUrl .. "96622746"),
}
for i, v in pairs({"Top", "Bottom"}) do
	local Image = Decal:Clone()
	Image.Face = Enum.NormalId[v]
	Image.Parent = TemplateHole
end

function GetCreator()
	local CreatorValue = Creator.Value
	return (((CreatorValue and CreatorValue.Parent and CreatorValue:IsA("Player")) and CreatorValue) or nil)
end

function GetProjectileManager()
	local CreatorPlayer = GetCreator()
	if CreatorPlayer then
		local ProjectileModelName = (CreatorPlayer.Name .. "'sPortals")
		local ProjectileModel = game:GetService("Workspace"):FindFirstChild(ProjectileModelName)
		if not ProjectileModel then
			local Values = {
				{Name = "Creator", Class = "ObjectValue", Value = CreatorPlayer},
			}
			ProjectileModel = Create("Model"){
				Name = ProjectileModelName,
			}
			local ProjectileManagerCopy = ProjectileManager:Clone()
			for i, v in pairs(Values) do
				local Value = Create(v.Class){
					Name = v.Name,
					Value = v.Value,
					Parent = ProjectileManagerCopy,
				}
			end
			ProjectileManagerCopy.Disabled = false
			ProjectileManagerCopy.Parent = ProjectileModel
			ProjectileModel.Parent = game:GetService("Workspace")
		end
		return ProjectileModel
	else
		return nil
	end
end

function FindCharacterAncestor(Object)
	if Object and Object ~= game:GetService("Workspace") then
		local Humanoid = Object:FindFirstChild("Humanoid")
		if Humanoid then
			return Object, Humanoid
		else
			return FindCharacterAncestor(Object.Parent)
		end
	end
	return nil
end

function CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.find(string.lower(String), string.lower(v)) then
			return true
		end
	end
	return false
end

function CheckIntangible(Hit)
	local ProjectileNames = {"Water", "Part", "Projectile", "Effect", "Rail", "Laser", "Bullet"}
	if Hit and Hit.Parent then
		if ((not Hit.CanCollide or CheckTableForString(ProjectileNames, Hit.Name)) and not Hit.Parent:FindFirstChild("Humanoid")) then
			return true
		end
	end
	return false
end

function CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
	local Ignore = ((type(Ignore) == "table" and Ignore) or {Ignore})
	local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
	if RayHit and CheckIntangible(RayHit) then
		if DelayIfHit then
			wait()
		end
		RayHit, RayPos, RayNormal = CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
	end
	return RayHit, RayPos, RayNormal
end

function FlyProjectile(Part)
	local AlreadyHit = false
	local function PartHit(Hit)
		if not Hit or not Hit.Parent then
			return
		end
		local character, humanoid = FindCharacterAncestor(Hit)
		if humanoid then
			return
		end
		local player = Players:GetPlayerFromCharacter(character)
		if player then
			return
		end
		AlreadyHit = true
		return true
	end
	local function CheckForContact(Hit)
		local Directions = {{Vector = Part.Velocity.Unit, Length = (TemplateHole.Size.Z + 2)}, {Vector = Part.CFrame.lookVector, Length = (TemplateHole.Size.Z + 2)}, {Vector = Vector3.new(0, -1, 0), Length = (TemplateHole.Size.Y * 1.25)}, ((Hit and {Vector = CFrame.new(Part.Position, Hit.Position).lookVector, Length = (TemplateHole.Size.Z + 2)}) or nil)}
		local ClosestRay = {DistanceApart = math.huge}
		local IgnoreList = {Part}
		for i, v in pairs(Players:GetPlayers()) do
			if v:IsA("Player") and v.Character then
				table.insert(IgnoreList, v.Character)
			end
		end
		for i, v in pairs(Directions) do
			if v then
				local Direction = CFrame.new(Part.Position, (Part.CFrame + v.Vector * 2).p).lookVector
				local RayHit, RayPos, RayNormal = CastRay((Part.Position + Vector3.new(0, 0, 0)), Direction, v.Length, IgnoreList, false)
				if RayHit then
					local DistanceApart = (Part.Position - RayPos).Magnitude
					if DistanceApart &lt; ClosestRay.DistanceApart then
						ClosestRay = {Hit = RayHit, Pos = RayPos, Normal = RayNormal, DistanceApart = DistanceApart}
					end
				end
			end
		end
		return ((ClosestRay.Hit and ClosestRay) or nil)
	end
	local function ConnectPart(Hit)
		if AlreadyHit then
			return
		end
		local ClosestRay = CheckForContact(Hit)
		if not ClosestRay then
			return
		end
		AlreadyHit = true
		local SuccessfullyHit = PartHit(ClosestRay.Hit)
		if SuccessfullyHit then
			local Hit = ClosestRay.Hit
			if Hit then
				local Hole = TemplateHole:Clone()
				Hole.Name = "Effect"
				Part.Size = Vector3.new(0.2, 0.2, 0.2)
				Part.Transparency = 1
				Part.CanCollide = false
				Part.Anchored = true
				for i, v in pairs(Part:GetChildren()) do
					if v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Smoke") or v:IsA("Light") or v:IsA("Sparkles") then
						v.Enabled = false
					elseif string.find(string.lower(v.ClassName), string.lower("Body")) then
						v:Destroy()
					elseif v:IsA("Sound") then
						v:Stop()
					end
				end
				local ProjectilePosition = ClosestRay.Pos
				local StickCFrame = CFrame.new(ClosestRay.Pos, (CFrame.new(ClosestRay.Pos) + ClosestRay.Normal * 2).p) * CFrame.Angles(-(math.pi / 2), 0, 0)
				StickCFrame = (StickCFrame * CFrame.new(0, 0, (-(TemplateHole.Size.Z / 2) + 0)) * CFrame.Angles(0, math.pi, 0))
				Hole.CFrame = StickCFrame
				local Weld = Create("Motor6D"){
					Part0 = Hit,
					Part1 = Hole,
					C0 = CFrame.new(0, 0, 0),
					C1 = (StickCFrame:inverse() * Hit.CFrame),
					Parent = Hole,
				}
				Part.Name = "Effect"
				Debris:AddItem(Hole, 60)
				Hole.Parent = GetProjectileManager()
			end
		end
	end
	Part.Touched:connect(function(Hit)
		if not Hit or not Hit.Parent or AlreadyHit then
			return
		end
		ConnectPart(Hit)
	end)
	Spawn(function()
		while Part and Part.Parent and Part.Name ~= "Effect" and not AlreadyHit do
			ConnectPart()
			wait()
		end
	end)
end

FlyProjectile(Projectile)</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
						<Item class="Script" referent="RBXA04BA46E8D0B4A08B723443C42094960">
							<Properties>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null /></Content>
								<string name="Name">ProjectileManager</string>
								<token name="RunContext">0</token>
								<string name="ScriptGuid">{CECD7EC0-2FBC-4B43-B1E9-258116DB06CF}</string>
								<ProtectedString name="Source">--Made by Luckymaxer

Model = script.Parent

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Effects = {}
Removing = false

Values = {}
for i, v in pairs(script:GetChildren()) do
	if string.find(string.lower(v.ClassName), string.lower("Value")) then
		Values[v.Name] = v
	end
end

function EnableTeleport(Portal)
	local TouchedConnection
	local Debounce = false
	TouchedConnection = Portal.Touched:connect(function(Hit)
		if not Hit or not Hit.Parent or #Effects &lt; 2 or Debounce then
			return
		end
		local character = Hit.Parent
		local PortalTag = character:FindFirstChild("PortalDebounce")
		if PortalTag then
			return
		end
		local player = Players:GetPlayerFromCharacter(character)
		if player and player ~= Values.Creator.Value then
			for i, v in pairs(character:GetChildren()) do
				if v:IsA("ForceField") then
					return
				end
			end
		end
		local humanoid = character:FindFirstChild("Humanoid")
		local torso = character:FindFirstChild("Torso")
		if not humanoid or humanoid.Health == 0 then
			return
		end
		Debounce = true
		local Portals = {}
		for i, v in pairs(Effects) do
			if v ~= Portal then
				table.insert(Portals, v)
			end
		end
		local TeleportTag = Create("BoolValue"){
			Name = "PortalDebounce",
			Value = true,
		}
		Debris:AddItem(TeleportTag, 2)
		TeleportTag.Parent = character
		local PortalSelected = Portals[math.random(1, #Portals)]
		torso.CFrame = (PortalSelected.CFrame * CFrame.new(0, ((torso.Size.Y * 2) + (Portal.Size.Y / 2)), 0))
		wait(0.5)
		Debounce = false
	end)
	return TouchedConnection
end

function RemoveModel()
	if Removing then
		return
	end
	local Parts = {}
	for i, v in pairs(Model:GetChildren()) do
		if v:IsA("BasePart") then
			table.insert(Parts, v)
		end
	end
	if #Parts == 0 then
		Removing = true
		Model.Name = ""
		Debris:AddItem(Model, 0.5)
	end
end

if not Values.Creator then
	RemoveModel()
	return
end

Model.ChildAdded:connect(function(Child)
	if Child.Name == "Effect" then
		if #Effects &gt;= 5 then
			local EffectNumber = 1
			local CurrentEffect = Effects[EffectNumber]
			if CurrentEffect then
				if CurrentEffect.Parent then
					CurrentEffect:Destroy()
				end
			end
			table.remove(Effects, 1)
		end
		table.insert(Effects, Child)
		EnableTeleport(Child)
	end
end)

Model.ChildRemoved:connect(function(Child)
	for i, v in pairs(Effects) do
		if v == Child then
			table.remove(Effects, i)
			break
		end
	end
	RemoveModel()
end)

wait(1)

RemoveModel()</ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBXF442E54B68DB45B097843C5C2D7735E4">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{B0350DC9-5AD7-42C0-AB60-E818754A8423}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")
ContentProvider = game:GetService("ContentProvider")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

Rate = (1 / 60)

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	local function StopAnimation(Animation)
		for i, v in pairs(Animations) do
			if v.Animation == Animation then
				v.AnimationTrack:Stop(value.EndFadeTime)
				if v.TrackStopped then
					v.TrackStopped:disconnect()
				end
				table.remove(Animations, i)
			end
		end
	end
	if mode == "PlayAnimation" then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				if value.Speed then
					v.AnimationTrack:AdjustSpeed(value.Speed)
					return
				elseif value.Weight or value.FadeTime then
					v.AnimationTrack:AdjustWeight(value.Weight, value.FadeTime)
					return
				else
					StopAnimation(value.Animation, false)
				end
			end
		end
		local AnimationMonitor = Create("Model"){}
		local TrackEnded = Create("StringValue"){Name = "Ended"}
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		local TrackStopped
		if not value.Manual then
			TrackStopped = AnimationTrack.Stopped:connect(function()
				if TrackStopped then
					TrackStopped:disconnect()
				end
				StopAnimation(value.Animation, true)
				TrackEnded.Parent = AnimationMonitor
			end)
		end
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack, TrackStopped = TrackStopped})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
		if TrackStopped then
			AnimationMonitor:WaitForChild(TrackEnded.Name)
		end
		return TrackEnded.Name
	elseif mode == "StopAnimation" and value then
		StopAnimation(value.Animation)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		PlayerMouse = Player:GetMouse()
		Mouse.Button1Down:connect(function()
			InvokeServer("Button1Click", {Down = true})
		end)
		Mouse.Button1Up:connect(function()
			InvokeServer("Button1Click", {Down = false})
		end)
		Mouse.KeyDown:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = true})
		end)
		Mouse.KeyUp:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = false})
		end)
		for i, v in pairs(Tool:GetChildren()) do
			if v:IsA("Animation") then
				ContentProvider:Preload(v.AnimationId)
			end
		end
	end)
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	if ObjectLocalTransparencyModifier then
		ObjectLocalTransparencyModifier:disconnect()
	end
	LocalObjects = {}
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	local ServerReturn = nil
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" and value then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MousePosition" then
		return ((PlayerMouse and {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}) or nil)
	elseif Mode == "SetLocalTransparencyModifier" and value and ToolEquipped then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							if ((not v.AutoUpdate and (v.Object.LocalTransparencyModifier == 1 or  v.Object.LocalTransparencyModifier == 0)) or v.AutoUpdate) then
								v.Object.LocalTransparencyModifier = v.Transparency
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX1DE8A96B6EF64BD3A90BAC1F8CA8FEFC">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MouseIcon</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{BF0D59F6-2324-4486-A261-D1B584A6C535}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Camera" referent="RBX44CA81CDF8A24610B3467DEAD79F9550">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>4.29495907</X>
							<Y>2.79588103</Y>
							<Z>2.70020533</Z>
							<R00>0.849629462</R00>
							<R01>0.120140135</R01>
							<R02>-0.513513505</R02>
							<R10>-0</R10>
							<R11>0.973706603</R11>
							<R12>0.227805585</R12>
							<R20>0.527380109</R20>
							<R21>-0.193550333</R21>
							<R22>0.82728982</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>5.3219862</X>
							<Y>2.3402698</Y>
							<Z>1.04562545</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		