<Item class="Model" referent="RBX5AA9FB6AE41544B09BB2FB24334C94A9">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">201756469</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBXCEB1FF7C18604F5EA74DEDD97D073157">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>0</X>
						<Y>0.300000012</Y>
						<Z>-0.0500000007</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>1.97913341e-05</R12>
						<R20>0</R20>
						<R21>-1.97913341e-05</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">SmashingGuitar</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=193467179</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>-0.540000021</X>
							<Y>6.15999985</Y>
							<Z>5.48000002</Z>
							<R00>-0.425151944</R00>
							<R01>0.680544734</R01>
							<R02>0.596745074</R02>
							<R10>0.394881934</R10>
							<R11>0.732706606</R11>
							<R12>-0.554264665</R12>
							<R20>-0.814440906</R20>
							<R21>-2.83985196e-06</R21>
							<R22>-0.580246449</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Folder" referent="RBX866CF25E6CED456E8E88D12EF0176ED2">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Folders</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
					<Item class="Folder" referent="RBX1F9064FA0D254D218F0B819D872508B6">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">Remotes</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
						<Item class="RemoteFunction" referent="RBX71EECAE3915E4E9CB195E653F12FF374">
							<Properties>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">ServerControl</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
							</Properties>
						</Item>
						<Item class="RemoteFunction" referent="RBX61B5D51C1AE74B7C99263B40B394C6E8">
							<Properties>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">ClientControl</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBXB8612EA49E334F028C63E8165CEC26F3">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">Animations</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
						<Item class="Animation" referent="RBXE16284601F174963A44BAFFED630D921">
							<Properties>
								<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=192906348</url></Content>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">Hold</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
							</Properties>
						</Item>
						<Item class="Animation" referent="RBX5B6ACB9A644B4754BEA75F8AC979B177">
							<Properties>
								<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=192900081</url></Content>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">Pluck</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
							</Properties>
						</Item>
						<Item class="Animation" referent="RBX1A8809C3D38641A3A3963E9A1E31C48B">
							<Properties>
								<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=193829250</url></Content>
								<BinaryString name="AttributesSerialize" />
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">Smash</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags" />
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBXC1AEE89436424261B6CD1021F332A581">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{ADF0CC6D-AD42-4C8F-8DC5-89F39C453219}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
UserInputService = game:GetService("UserInputService")

Folders = Tool:WaitForChild("Folders")
RemotesFolder = Folders:WaitForChild("Remotes")
ServerControl = RemotesFolder:WaitForChild("ServerControl")
ClientControl = RemotesFolder:WaitForChild("ClientControl")

Animations = {}

ToolEquipped = false

function SetAnimation(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Mouse
	Mouse.Button1Down:connect(function()
		InvokeServer("MouseClick", {Down = true})
	end)
	Mouse.Button1Up:connect(function()
		InvokeServer("MouseClick", {Down = false})
	end)
	for i, v in pairs({KeyDown, KeyUp}) do
		if v then
			v:disconnect()
		end
	end
	KeyDown = UserInputService.InputBegan:connect(function(InputObject)
		local InputType = InputObject.UserInputType
		local KeyCode = InputObject.KeyCode
		if InputType == Enum.UserInputType.Keyboard then
			InvokeServer("KeyPressed", {Key = KeyCode.Name, Down = true})
		end
	end)
	KeyUp = UserInputService.InputEnded:connect(function(InputObject)
		local InputType = InputObject.UserInputType
		local KeyCode = InputObject.KeyCode
		if InputType == Enum.UserInputType.Keyboard then
			InvokeServer("KeyPressed", {Key = KeyCode.Name, Down = false})
		end
	end)
end

function Unequipped()
	for i, v in pairs({KeyDown, KeyUp}) do
		if v then
			v:disconnect()
		end
	end
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	local ServerReturn
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MousePosition" then
		return ((PlayerMouse and {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}) or nil)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Script" referent="RBX27F626D6D1F044E0B9A9B97518B1EF4E">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{18B9251F-55BE-45D4-99FA-1837F54D88C2}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

local function Create_PrivImpl(objectType)
	if type(objectType) ~= 'string' then
		error("Argument of Create must be a string", 2)
	end
	--return the proxy function that gives us the nice Create'string'{data} syntax
	--The first function call is a function call using Lua's single-string-argument syntax
	--The second function call is using Lua's single-table-argument syntax
	--Both can be chained together for the nice effect.
	return function(dat)
		--default to nothing, to handle the no argument given case
		dat = dat or {}

		--make the object to mutate
		local obj = Instance.new(objectType)
		local parent = nil

		--stored constructor function to be called after other initialization
		local ctor = nil

		for k, v in pairs(dat) do
			--add property
			if type(k) == 'string' then
				if k == 'Parent' then
					-- Parent should always be set last, setting the Parent of a new object
					-- immediately makes performance worse for all subsequent property updates.
					parent = v
				else
					obj[k] = v
				end


			--add child
			elseif type(k) == 'number' then
				if type(v) ~= 'userdata' then
					error("Bad entry in Create body: Numeric keys must be paired with children, got a: "..type(v), 2)
				end
				v.Parent = obj


			--event connect
			elseif type(k) == 'table' and k.__eventname then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create.E\'"..k.__eventname.."\']` must have a function value\
							got: "..tostring(v), 2)
				end
				obj[k.__eventname]:connect(v)


			--define constructor function
			elseif k == t.Create then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create]` should be paired with a constructor function, \
							got: "..tostring(v), 2)
				elseif ctor then
					--ctor already exists, only one allowed
					error("Bad entry in Create body: Only one constructor function is allowed", 2)
				end
				ctor = v


			else
				error("Bad entry ("..tostring(k).." =&gt; "..tostring(v)..") in Create body", 2)
			end
		end

		--apply constructor function if it exists
		if ctor then
			ctor(obj)
		end

		if parent then
			obj.Parent = parent
		end

		--return the completed object
		return obj
	end
end

--now, create the functor:
Create = setmetatable({}, {__call = function(tb, ...) return Create_PrivImpl(...) end})

--and create the "Event.E" syntax stub. Really it's just a stub to construct a table which our Create
--function can recognize as special.
Create.E = function(eventName)
	return {__eventname = eventName}
end


Folders = Tool:WaitForChild("Folders")
AnimationsFolder = Folders:WaitForChild("Animations")
RemoteFolder = Folders:WaitForChild("Remotes")

Grips = {
	Hold = CFrame.new(0, 0.3, -0.05, 1, 0, -0, 0, 1, 1.97913341e-005, 0, -1.97913341e-005, 1),
	Play = CFrame.new(0, 1.25, -0.1, 0.90927124, 0.381022066, 0.167475626, -0.138348684, 0.6562047, -0.741791666, -0.392537355, 0.651319802, 0.649381936),
	Unequipped = CFrame.new(-0.8, -1.25, 0.7, -0.699250817, 8.10044512e-005, 0.714876533, 0.714876533, 1.1920929e-007, 0.699250817, 5.65572336e-005, 1, -5.79915431e-005),
	Smash = CFrame.new(0, 1.25, -0.1, 0.862269044, 0.497923523, 0.092543155, -0.505507767, 0.85731715, 0.0973098949, -0.030885946, -0.130688593, 0.990942299),
}

Animations = {
	Hold = {Animation = AnimationsFolder:WaitForChild("Hold"), FadeTime = nil, Weight = nil, Speed = nil},
	Pluck = {Animation = AnimationsFolder:WaitForChild("Pluck"), FadeTime = nil, Weight = nil, Speed = 6},
	Smash = {Animation = AnimationsFolder:WaitForChild("Smash"), FadeTime = nil, Weight = nil, Speed = 3, Duration = 0.6},
}

Sounds = {
	GuitarSmash = Handle:WaitForChild("GuitarSmash"),
}

NoteData = {
	Chords = {
		{Key = "Z", Sound = {Normal = 99170172, Sharp = 99189531}},
		{Key = "X", Sound = {Normal = 99170311, Sharp = 99189711}},
		{Key = "C", Sound = {Normal = 99170354, Sharp = 99189785}},
		{Key = "V", Sound = {Normal = 99170403, Sharp = 99190216}},
		{Key = "B", Sound = {Normal = 99170481, Sharp = 99189905}},
		{Key = "N", Sound = {Normal = 99170537, Sharp = 99190021}},
		{Key = "M", Sound = {Normal = 99170583, Sharp = 99190550}},
	},
	Pitches = {
		{Key = "G", Pitch = 0.5},
		{Key = "H", Pitch = 0.75},
		{Key = "J", Pitch = 1},
		{Key = "K", Pitch = 1.25},
		{Key = "L", Pitch = 1.5},
	},
}

Sound = {
	Volume = 0.75,
	Pitch = NoteData.Pitches[3].Pitch,
}

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
	Anchored = false,
}

Clicks = 0
FirstClick = false
Broken = false

IsPlaying = false
ShiftDown = false
ToolEquipped = false

ServerControl = (RemoteFolder:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = RemoteFolder,
})

ClientControl = (RemoteFolder:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = RemoteFolder,
})

GuitarModule = require(191816425)
GuitarTable = GuitarModule.GetTable({Key = "Guitars"})
GuitarFunctions = GuitarTable.GetData({
	Tool = Tool,
	Communication = {Server = ServerControl, Client = ClientControl},
	KeyData = NoteData,
	SpecialEnabled = {Enabled = false, AcceptedRatio = 0.75},
})

SmashingGuitar = require(script:WaitForChild("GuitarParts"))

Handle.Transparency = 0
Tool.Grip = Grips.Hold
Tool.Enabled = true

function RayCast(Position, Direction, MaxDistance, IgnoreList)
	return game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList)
end

function Activated()
	if not Tool.Enabled or not CheckIfAlive() or Broken then
		return
	end
	Clicks = (Clicks + 1)
	if not FirstClick then
		FirstClick = true
		local CurrentlyEquipped = true
		if ToolUnequipped then
			ToolUnequipped:disconnect()
		end
		ToolUnequipped = Tool.Unequipped:connect(function()
			CurrentlyEquipped = false
		end)
		wait(0.15)
		if not CurrentlyEquipped then
			return
		end
		Tool.Enabled = false
		if IsPlaying and Clicks &gt; 1 then
			Broken = true
			local humanoid = Humanoid
			humanoid.WalkSpeed = 0
			Tool.Grip = Grips.Smash
			local Animation = Animations.Smash
			InvokeClient("PlayAnimation", Animation)
			wait(Animation.Duration)
			if CurrentlyEquipped then
				local RayHit, RayPos, RayNormal = RayCast(Handle.Position, Vector3.new(0, -1, 0), (Torso.Size.Y * 2), {Character})
				if RayHit then
					local Duration = 10
					local FirePart = BasePart:Clone()
					FirePart.Name = "FirePart"
					FirePart.Transparency = 1
					FirePart.Size = Vector3.new(0.2, 0.2, 0.2)
					FirePart.Anchored = true
					FirePart.CanCollide = false
					FirePart.Locked = true
					local Fire = Create("Fire"){
						Color = Color3.new((236 / 255), (139 / 255), (70 / 255)),
						SecondaryColor = Color3.new((139 / 255), (80 / 255), (55 / 255)),
						Heat = 25,
						Size = 15,
						Enabled = true,
						Parent = FirePart,
					}
					FirePart.CFrame = (CFrame.new(RayPos) * CFrame.Angles(0, (math.random(-360, 360) * 0.01), 0))
					Handle.Transparency = 1
					Sounds.GuitarSmash:Play()
					local SmashedGuitar = SmashingGuitar()
					table.sort(SmashedGuitar.Welds, (function(a, b)
						return a.Part1.Position.Y &lt; b.Part1.Position.Y
					end))
					Debris:AddItem(SmashedGuitar.GuitarModel, (Duration + 5))
					local Weld = Create("Weld"){
						Part0 = Handle,
						Part1 = SmashedGuitar.CenterPart,
						C0 = CFrame.new(0, 0, 0),
						C1 = CFrame.new(0, 0, 0),
						Parent = SmashedGuitar.CenterPart,
					}
					SmashedGuitar.GuitarModel.Parent = game:GetService("Workspace")
					for i, v in pairs(SmashedGuitar.Welds) do
						if v and v.Parent then
							v:Destroy()
						end
						for i, v in pairs(SmashedGuitar.Parts) do
							if v and v.Parent and v.Velocity.Y &gt; 2 then
								v.Velocity = Vector3.new(0, 0, 0)
								v.RotVelocity = Vector3.new(0, 0, 0)
							end
						end
					end
					Debris:AddItem(FirePart, Duration)
					FirePart.Parent = game:GetService("Workspace")
				else
					Broken = false
				end
			else
				Broken = false
			end
			humanoid.WalkSpeed = 16
			if Broken then
				humanoid:UnequipTools()
				Tool:Destroy()
			else
				Tool.Grip = Grips.Play
			end
		else
			IsPlaying = not IsPlaying
			if IsPlaying then
				Tool.Grip = Grips.Play
				Spawn(function()
					InvokeClient("PlayAnimation", Animations.Hold)
				end)
			else
				Tool.Grip = Grips.Hold
				for i, v in pairs(Animations) do
					Spawn(function()
						InvokeClient("StopAnimation", v)
					end)
				end
			end
		end
		if ToolUnequipped then
			ToolUnequipped:disconnect()
		end
		FirstClick = false
		Clicks = 0
		Tool.Enabled = true
	end
end

function CheckIfAlive()
	return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	if not CheckIfAlive() then
		return
	end
	Tool.Grip = Grips.Hold
	IsPlaying = false
	ShiftDown = false
	ToolEquipped = true
end

function Unequipped()
	IsPlaying = false
	ShiftDown = false
	ToolEquipped = false
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

function OnServerInvoke(player, Mode, Value)
	if player ~= Player then
		return
	end
	if Mode == "KeyPressed" and Value then
		local Key = Value.Key
		local Down = Value.Down
		if Key == "LeftShift" or Key == "RightShift" then
			ShiftDown = Down
		elseif IsPlaying and Down then
			if NoteData.Chords then
				for i, v in pairs(NoteData.Chords) do
					if string.lower(v.Key) == string.lower(Key) then
						GuitarFunctions.PlaySound({
							Object = Handle,
							Sound = {SoundId = v, ShiftDown = ShiftDown},
							Pitch = (Sound.Pitch or v.Pitch or nil),
							Volume = (Sound.Volume or v.Volume or nil),
						})
						Spawn(function()
							InvokeClient("PlayAnimation", Animations.Pluck)
						end)
						return
					end
				end
			end
			if NoteData.Pitches then
				for i, v in pairs(NoteData.Pitches) do
					if string.lower(v.Key) == string.lower(Key) then
						Sound.Pitch = v.Pitch
						return
					end
				end
			end
		end
	elseif Mode == "IsPlaying" then
		return IsPlaying
	elseif Mode == "SpecialCompleted" and Value then
		local Success = Value.Success
		local SuccessRatio = Value.SuccessRatio
		if Success then
		end
	end
end

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
					<Item class="ModuleScript" referent="RBX3C3B688E44C84272A6AAB94B6ADE2803">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="LinkedSource"><null /></Content>
							<string name="Name">GuitarParts</string>
							<string name="ScriptGuid">{6D34D372-7F30-413D-9972-6F78F826FA52}</string>
							<ProtectedString name="Source">--Made by Luckymaxer

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
	Anchored = false,
}

GuitarParts = {
	Name = "BrokenGuitar",
	PartTable = {
		{
			Offset = Vector3.new(0.35441744327545, 2.1486256122589, -0.046207413077354),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466797"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Tuner",
			Size = Vector3.new(0.20000000298023, 0.20000000298023, 0.20000000298023),
		},
		{
			Offset = Vector3.new(-0.10443341732025, 2.087189912796, -0.080135330557823),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466867"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Nut",
			Size = Vector3.new(0.20000000298023, 0.20000000298023, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.18197023868561, -0.15179038047791, -0.058132156729698),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193467108"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Fret",
			Size = Vector3.new(0.20000000298023, 4.4500002861023, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.59062349796295, -2.6264264583588, 0.062152877449989),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466280"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "BodyPart",
			Size = Vector3.new(1, 1, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.074586510658264, -1.9251782894135, 0.062152877449989),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466249"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "BodyPart",
			Size = Vector3.new(1.8000000715256, 2.5, 0.20000000298023),
		},
		{
			Offset = Vector3.new(-0.73439252376556, -0.57831931114197, 0.062152877449989),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466326"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "BodyPart",
			Size = Vector3.new(0.34999999403954, 0.45000001788139, 0.20000000298023),
		},
		{
			Offset = Vector3.new(-0.64062345027924, -2.0864980220795, 0.062152877449989),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466346"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "BodyPart",
			Size = Vector3.new(0.90000003576279, 1.3000000715256, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.4929062128067, -1.3552625179291, 0.062152877449989),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466409"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "BodyPart",
			Size = Vector3.new(0.65000003576279, 0.80000001192093, 0.20000000298023),
		},
		{
			Offset = Vector3.new(-0.64465939998627, -2.6709477901459, -0.070133194327354),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466376"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Control",
			Size = Vector3.new(0.20000000298023, 0.20000000298023, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.031049370765686, 0.84480404853821, -0.050441727042198),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466710"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "FretBoard",
			Size = Vector3.new(0.30000001192093, 2.0499999523163, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.0020538568496704, 0.065448999404907, -0.058135971426964),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193467042"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Fret",
			Size = Vector3.new(0.20000000298023, 4.875, 0.20000000298023),
		},
		{
			Offset = Vector3.new(-0.11534345149994, -0.15503668785095, -0.058132156729698),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466955"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Fret",
			Size = Vector3.new(0.20000000298023, 4.4250001907349, 0.20000000298023),
		},
		{
			Offset = Vector3.new(-0.061342597007751, -0.035159826278687, -0.058132156729698),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193467005"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Fret",
			Size = Vector3.new(0.20000000298023, 4.6750001907349, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.030316948890686, -0.44991660118103, 1.4901161193848e-008),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466685"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Neck",
			Size = Vector3.new(0.40000000596046, 0.40000000596046, 0.40000000596046),
		},
		{
			Offset = Vector3.new(0.32841646671295, 2.3026401996613, -0.046207413077354),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466797"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Tuner",
			Size = Vector3.new(0.20000000298023, 0.20000000298023, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.30641710758209, 2.4806644916534, -0.032207474112511),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466797"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Tuner",
			Size = Vector3.new(0.20000000298023, 0.20000000298023, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.30641710758209, 2.6626789569855, -0.038207992911339),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466797"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Tuner",
			Size = Vector3.new(0.20000000298023, 0.20000000298023, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.057222008705139, 0.063347101211548, -0.058135971426964),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193467070"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Fret",
			Size = Vector3.new(0.20000000298023, 4.875, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.32023394107819, 2.9977104663849, -0.050136551260948),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466797"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Tuner",
			Size = Vector3.new(0.20000000298023, 0.20000000298023, 0.20000000298023),
		},
		{
			Offset = Vector3.new(-0.067495703697205, 2.3188679218292, -0.080135330557823),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466867"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Nut",
			Size = Vector3.new(0.20000000298023, 0.20000000298023, 0.20000000298023),
		},
		{
			Offset = Vector3.new(-0.0035156011581421, 2.5215694904327, -0.080051407217979),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466867"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Nut",
			Size = Vector3.new(0.20000000298023, 0.20000000298023, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.042165398597717, 2.5214397907257, -0.080051407217979),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466867"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Nut",
			Size = Vector3.new(0.20000000298023, 0.20000000298023, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.10354387760162, 2.3188908100128, -0.080051407217979),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466867"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Nut",
			Size = Vector3.new(0.20000000298023, 0.20000000298023, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.15790331363678, 2.0876896381378, -0.080051407217979),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466867"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Nut",
			Size = Vector3.new(0.20000000298023, 0.20000000298023, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.024621605873108, 2.525178194046, -0.024135574698448),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466546"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Head",
			Size = Vector3.new(0.75, 1.3000000715256, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.049668908119202, -1.5579106807709, 0.062152877449989),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466311"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "BodyPart",
			Size = Vector3.new(2, 3.1500000953674, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.014390587806702, -2.2679355144501, -0.058135971426964),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466628"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Bridge",
			Size = Vector3.new(0.40000000596046, 0.20000000298023, 0.20000000298023),
		},
		{
			Offset = Vector3.new(-0.026308417320251, -1.8050572872162, 0.062152877449989),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466613"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "BodyPart",
			Size = Vector3.new(0.55000001192093, 1.1499999761581, 0.20000000298023),
		},
		{
			Offset = Vector3.new(-0.70003736019135, -2.2976825237274, -0.070133194327354),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466395"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Control",
			Size = Vector3.new(0.20000000298023, 0.20000000298023, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.0022331476211548, -2.0219533443451, -0.042926773428917),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466644"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Saddle",
			Size = Vector3.new(0.5, 0.25, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.12274324893951, -0.039355993270874, -0.057849869132042),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193467088"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Fret",
			Size = Vector3.new(0.20000000298023, 4.6750001907349, 0.20000000298023),
		},
		{
			Offset = Vector3.new(0.30662310123444, 2.8451797962189, -0.050136551260948),
			MeshData = {
				Scale = Vector3.new(1, 1, 1),
				MeshId = (BaseUrl .. "193466797"),
				TextureId = (BaseUrl .. "193467142"),
			},
			Name = "Tuner",
			Size = Vector3.new(0.20000000298023, 0.20000000298023, 0.20000000298023),
		},
	},
}

function WeldTo(PrimaryPart, SecondaryPart)
	if not PrimaryPart or not SecondaryPart then
		return
	end
	local Weld = Instance.new("Weld")
	Weld.Name = "Weld"
	Weld.Part0 = PrimaryPart
	Weld.Part1 = SecondaryPart
	Weld.C0 = PrimaryPart.CFrame:inverse()
	Weld.C1 = SecondaryPart.CFrame:inverse()
	Weld.Parent = PrimaryPart
	return Weld
end

function MakeGuitar()
	local Parts = {}
	local Welds = {}
	local GuitarModel = Create("Model"){
		Name = GuitarParts.Name,
	}
	local CenterPart = BasePart:Clone()
	CenterPart.Name = "CenterPart"
	CenterPart.Transparency = 1
	CenterPart.CanCollide = false
	CenterPart.CFrame = CFrame.new(CenterPart.Position)
	CenterPart.Parent = GuitarModel
	for i, v in pairs(GuitarParts.PartTable) do
		local MeshData = v.MeshData
		local Part = BasePart:Clone()
		Part.Name = v.Name
		Part.Size = v.Size
		Part.Friction = 2
		Part.Elasticity = 0
		local Mesh = Create("SpecialMesh"){
			MeshType = Enum.MeshType.FileMesh,
			MeshId = MeshData.MeshId,
			TextureId = MeshData.TextureId,
			Scale = MeshData.Scale,
			VertexColor = Vector3.new(1, 1, 1),
			Offset = Vector3.new(0, 0, 0),
			Parent = Part,
		}
		Part.Parent = GuitarModel
		Part.CFrame = CenterPart.CFrame + v.Offset
		local Weld = WeldTo(CenterPart, Part)
		table.insert(Parts, Part)
		table.insert(Welds, Weld)
	end
	return {
		GuitarModel = GuitarModel,
		CenterPart = CenterPart,
		Parts = Parts,
		Welds = Welds,
	}
end

return MakeGuitar</ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX8AC43BD5502341F4B7ABB6436FC1A2CD">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-0.540000021</X>
							<Y>6.15999985</Y>
							<Z>5.48000002</Z>
							<R00>-0.425151944</R00>
							<R01>0.680544734</R01>
							<R02>0.596745074</R02>
							<R10>0.394881934</R10>
							<R11>0.732706606</R11>
							<R12>-0.554264665</R12>
							<R20>-0.814440906</R20>
							<R21>-2.83985196e-06</R21>
							<R22>-0.580246449</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>2</X>
							<Y>6.5</Y>
							<Z>0.25</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBXA9A63746E4144FF185FD7DB32D3DAF04">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=193466236</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=193467142</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX8F04966F5BE14BE28F83B30F39BFFFC3">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">GuitarSmash</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=193801284</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Camera" referent="RBXBAB090D76904433A8711191050075CAC">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>-1.77227378</X>
							<Y>8.95956326</Y>
							<Z>10.2790146</Z>
							<R00>0.968578577</R00>
							<R01>0.122348212</R01>
							<R02>-0.216533229</R02>
							<R10>-0</R10>
							<R11>0.870632052</R11>
							<R12>0.491934925</R12>
							<R20>0.248708129</R20>
							<R21>-0.476477623</R21>
							<R22>0.843275368</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">0</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>-0.539999962</X>
							<Y>6.15999985</Y>
							<Z>5.48000002</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		