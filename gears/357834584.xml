<Item class="Model" referent="RBX88B03319C59E41DF9D180370102BDD4D">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">357834584</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBX614567D3767F46A69AFE86EA2375F482">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>0</X>
						<Y>0</Y>
						<Z>0.5</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">WizardEnergyBall</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=356221189</url></Content>
					<string name="ToolTip" />
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>-0.0194809996</X>
							<Y>6.03259468</Y>
							<Z>-0.0515239984</Z>
							<R00>-0.945614874</R00>
							<R01>-0.00769212795</R01>
							<R02>0.325197577</R02>
							<R10>4.75229026e-05</R10>
							<R11>0.999717116</R11>
							<R12>0.0237852074</R12>
							<R20>-0.325288504</R20>
							<R21>0.0225070976</R21>
							<R22>-0.945347011</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX3C954C84C02C4C94973F55DB2DAE6FEC">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-0.0194809996</X>
							<Y>6.03259468</Y>
							<Z>-0.0515239984</Z>
							<R00>-0.945614874</R00>
							<R01>-0.00769212795</R01>
							<R02>0.325197577</R02>
							<R10>4.75229026e-05</R10>
							<R11>0.999717116</R11>
							<R12>0.0237852074</R12>
							<R20>-0.325288504</R20>
							<R21>0.0225070976</R21>
							<R22>-0.945347011</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4278255615</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">288</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1.25</X>
							<Y>1.25</Y>
							<Z>1.25</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX4E69D3D62300445889459422E8679087">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=356220491</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1.25</X>
								<Y>1.25</Y>
								<Z>1.25</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=356220608</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="SurfaceLight" referent="RBX1FAF53CA85F04D87B1E02605AE4BA611">
						<Properties>
							<float name="Angle">90</float>
							<BinaryString name="AttributesSerialize" />
							<float name="Brightness">100</float>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<Color3 name="Color">
								<R>0</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">true</bool>
							<token name="Face">1</token>
							<string name="Name">SurfaceLight</string>
							<float name="Range">4</float>
							<bool name="Shadows">false</bool>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
					<Item class="SurfaceLight" referent="RBX131A03F789A74B548E6309AFBE77D703">
						<Properties>
							<float name="Angle">90</float>
							<BinaryString name="AttributesSerialize" />
							<float name="Brightness">100</float>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<Color3 name="Color">
								<R>0</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">true</bool>
							<token name="Face">4</token>
							<string name="Name">SurfaceLight</string>
							<float name="Range">4</float>
							<bool name="Shadows">false</bool>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
					<Item class="SurfaceLight" referent="RBXA65AA8663E034BD585A8DD008EEB028E">
						<Properties>
							<float name="Angle">90</float>
							<BinaryString name="AttributesSerialize" />
							<float name="Brightness">100</float>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<Color3 name="Color">
								<R>0</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">true</bool>
							<token name="Face">3</token>
							<string name="Name">SurfaceLight</string>
							<float name="Range">4</float>
							<bool name="Shadows">false</bool>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
					<Item class="SurfaceLight" referent="RBXC5456A1518974026AD3ACC633EB84E67">
						<Properties>
							<float name="Angle">90</float>
							<BinaryString name="AttributesSerialize" />
							<float name="Brightness">100</float>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<Color3 name="Color">
								<R>0</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">true</bool>
							<token name="Face">0</token>
							<string name="Name">SurfaceLight</string>
							<float name="Range">4</float>
							<bool name="Shadows">false</bool>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
					<Item class="SurfaceLight" referent="RBXC54FA57F059F4A598BFDCDD60BFB9001">
						<Properties>
							<float name="Angle">90</float>
							<BinaryString name="AttributesSerialize" />
							<float name="Brightness">100</float>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<Color3 name="Color">
								<R>0</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">true</bool>
							<token name="Face">2</token>
							<string name="Name">SurfaceLight</string>
							<float name="Range">4</float>
							<bool name="Shadows">false</bool>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
					<Item class="SurfaceLight" referent="RBX906D8E689DF343B6B3C6383E272B9C2A">
						<Properties>
							<float name="Angle">90</float>
							<BinaryString name="AttributesSerialize" />
							<float name="Brightness">100</float>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<Color3 name="Color">
								<R>0</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">true</bool>
							<token name="Face">5</token>
							<string name="Name">SurfaceLight</string>
							<float name="Range">4</float>
							<bool name="Shadows">false</bool>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
						</Properties>
					</Item>
					<Item class="Fire" referent="RBX5FEA9D8F83284508979C9BA8EF3D9C21">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<Color3 name="Color">
								<R>0</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">true</bool>
							<string name="Name">Fire</string>
							<Color3 name="SecondaryColor">
								<R>0</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<float name="TimeScale">1</float>
							<float name="heat_xml">0</float>
							<float name="size_xml">2.5</float>
						</Properties>
					</Item>
					<Item class="ParticleEmitter" referent="RBX28DA40B2B8374DD38C6B5FF2D7E734C1">
						<Properties>
							<Vector3 name="Acceleration">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<BinaryString name="AttributesSerialize" />
							<float name="Brightness">1</float>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<ColorSequence name="Color">0 0 1 1 0 1 0 1 1 0 </ColorSequence>
							<bool name="DefinesCapabilities">false</bool>
							<float name="Drag">0</float>
							<token name="EmissionDirection">1</token>
							<bool name="Enabled">true</bool>
							<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
							<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
							<token name="FlipbookLayout">0</token>
							<token name="FlipbookMode">0</token>
							<bool name="FlipbookStartRandom">false</bool>
							<NumberRange name="Lifetime">1 1 </NumberRange>
							<float name="LightEmission">0.75</float>
							<float name="LightInfluence">0</float>
							<bool name="LockedToPart">false</bool>
							<string name="Name">TinySparks</string>
							<token name="Orientation">0</token>
							<float name="Rate">30</float>
							<NumberRange name="RotSpeed">-5 5 </NumberRange>
							<NumberRange name="Rotation">-360 360 </NumberRange>
							<token name="Shape">0</token>
							<token name="ShapeInOut">0</token>
							<float name="ShapePartial">1</float>
							<token name="ShapeStyle">0</token>
							<NumberSequence name="Size">0 0.05 0 1 0.05 0 </NumberSequence>
							<int64 name="SourceAssetId">-1</int64>
							<NumberRange name="Speed">2.5 2.5 </NumberRange>
							<Vector2 name="SpreadAngle">
								<X>250</X>
								<Y>250</Y>
							</Vector2>
							<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
							<BinaryString name="Tags" />
							<Content name="Texture"><url>http://www.roblox.com/asset/?id=277951744</url></Content>
							<float name="TimeScale">1</float>
							<NumberSequence name="Transparency">0 0.5 0 1 0.5 0 </NumberSequence>
							<float name="VelocityInheritance">0</float>
							<bool name="WindAffectsDrag">false</bool>
							<float name="ZOffset">0</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX62A00C77389149EAA5D2A0DE65937B82">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Hit</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1.25</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">0</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=108553903</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX0FE1E430B8FA49EE8471E4F86680E550">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Blast</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">0</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=163284849</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBX32868A2AC3C540C9A7585D338ECE320E">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MouseIcon</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{119C12A6-89A1-4318-97FD-64637FD39B56}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX1DCFEA6121FB4DF398B94C8052FD05EE">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{D63EDC49-3B9A-46A6-A2F7-A11E79DE2D6D}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")

Animations = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

Rate = (1 / 60)

ToolEquipped = false

function SetAnimation(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Mouse
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	pcall(function()
		local ServerReturn = ServerControl:InvokeServer(mode, value)
		return ServerReturn
	end)
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MouseData" then
		return ((PlayerMouse and {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}) or nil)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Script" referent="RBXCAE4C213A97D45879CD8F4BEF9D77B5E">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{2B7D6FE8-3863-433C-9586-9BADA2FD1788}</string>
						<ProtectedString name="Source">--Made by Luckymaxer
--Updated for R15 avatar by StarWars

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

local function Create_PrivImpl(objectType)
	if type(objectType) ~= 'string' then
		error("Argument of Create must be a string", 2)
	end
	--return the proxy function that gives us the nice Create'string'{data} syntax
	--The first function call is a function call using Lua's single-string-argument syntax
	--The second function call is using Lua's single-table-argument syntax
	--Both can be chained together for the nice effect.
	return function(dat)
		--default to nothing, to handle the no argument given case
		dat = dat or {}

		--make the object to mutate
		local obj = Instance.new(objectType)
		local parent = nil

		--stored constructor function to be called after other initialization
		local ctor = nil

		for k, v in pairs(dat) do
			--add property
			if type(k) == 'string' then
				if k == 'Parent' then
					-- Parent should always be set last, setting the Parent of a new object
					-- immediately makes performance worse for all subsequent property updates.
					parent = v
				else
					obj[k] = v
				end


			--add child
			elseif type(k) == 'number' then
				if type(v) ~= 'userdata' then
					error("Bad entry in Create body: Numeric keys must be paired with children, got a: "..type(v), 2)
				end
				v.Parent = obj


			--event connect
			elseif type(k) == 'table' and k.__eventname then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create.E\'"..k.__eventname.."\']` must have a function value\
							got: "..tostring(v), 2)
				end
				obj[k.__eventname]:connect(v)


			--define constructor function
			elseif k == t.Create then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create]` should be paired with a constructor function, \
							got: "..tostring(v), 2)
				elseif ctor then
					--ctor already exists, only one allowed
					error("Bad entry in Create body: Only one constructor function is allowed", 2)
				end
				ctor = v


			else
				error("Bad entry ("..tostring(k).." =&gt; "..tostring(v)..") in Create body", 2)
			end
		end

		--apply constructor function if it exists
		if ctor then
			ctor(obj)
		end

		if parent then
			obj.Parent = parent
		end

		--return the completed object
		return obj
	end
end

--now, create the functor:
Create = setmetatable({}, {__call = function(tb, ...) return Create_PrivImpl(...) end})

--and create the "Event.E" syntax stub. Really it's just a stub to construct a table which our Create
--function can recognize as special.
Create.E = function(eventName)
	return {__eventname = eventName}
end


Rate = (1 / 60)
Gravity = 196.20

BaseUrl = "http://www.roblox.com/asset/?id="

BasePart = Instance.new("Part")
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

Animations = {}

Sounds = {
	Blast = Handle:WaitForChild("Blast"),
	Hit = Handle:WaitForChild("Hit"),
}

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

OrbMaxChargeTime = 10
OrbSize = {Min = 1.25, Max = 3}

OrbPresent = false
ControllingOrb = false
ToolEquipped = false

Tool.Enabled = true

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function ToggleHandleVisibility(Visible, Fade)
	if not Fade then
		Handle.Transparency = ((Visible and 0) or 1)
	else
		Spawn(function()
			TweenNumber(Handle, "Transparency", (Visible and 0 or 1), 1)
		end)
	end
	for i, v in pairs(Handle:GetChildren()) do
		if v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Smoke") or v:IsA("Sparkles") or v:IsA("Light") then
			v.Enabled = Visible
		end
	end
	if Visible then
		for i, v in pairs(Tool:GetChildren()) do
			if v:IsA("BasePart") and v ~= Handle then
				v:Destroy()
			end
		end
	end
end

function Clamp(Number, Min, Max)
	return math.max(math.min(Max, Number), Min)
end

function GetPercentage(Start, End, Number)
	return (((Number - Start) / (End - Start)) * 100)
end

function Round(Number, RoundDecimal)
	local WholeNumber, Decimal = math.modf(Number)
	return ((Decimal &gt;= RoundDecimal and math.ceil(Number)) or (Decimal &lt; RoundDecimal and math.floor(Number)))
end

function TweenNumber(Object, Property, Goal, Time)
	Time = (Time * 30)
	local Increment = ((Goal - Object[Property]) / Time)
	for i = 1, Time do
		Object[Property] = (Object[Property] + Increment)
		wait(Rate)
	end
	return true
end

function DecayOrb(CurrentOrb)
	for i, v in pairs(CurrentOrb:GetChildren()) do
		if v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Smoke") or v:IsA("Sparkles") or v:IsA("Light") then
			v.Enabled = false
		end
	end
	Spawn(function()
		TweenNumber(CurrentOrb, "Transparency", 1, 1)
	end)
end

function PoisonOrb(CurrentOrb)
	local HitDelay = false
	Orb.Touched:connect(function(Hit)
		if not Hit or not Hit.Parent or HitDelay then
			return
		end
		local character = Hit.Parent
		local humanoid = character:FindFirstChild("Humanoid")
		if not humanoid or humanoid.Health == 0 then
			return
		end
		local player = Players:GetPlayerFromCharacter(character)
		if player and (player == Player or IsTeamMate(Player, player)) then
			return
		end
		HitDelay = true
		UntagHumanoid(humanoid)
		TagHumanoid(humanoid, Player)
		if CurrentOrb:FindFirstChild("Powered") then
			local OrbDamage = {Min = 15, Max = 75}
			local OrbSizePercent = (Clamp(GetPercentage(OrbSize.Min, OrbSize.Max, Orb.Size.X), 0, 100) * 0.01)
			local OrbDamage = Clamp((OrbDamage.Max * OrbSizePercent), OrbDamage.Min, OrbDamage.Max)
			humanoid:TakeDamage(OrbDamage)
		else
			humanoid:TakeDamage(10)
		end
		wait(0.1)
		HitDelay = false
	end)
end

function Activated()
	if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() then
		return
	end
	Tool.Enabled = false
	if not OrbPresent then
		OrbPresent = true
		ControllingOrb = true
		local CurrentlyEquipped = true
		if ToolUnequipped then
			ToolUnequipped:disconnect()
		end
		ToolUnequipped = Tool.Unequipped:connect(function()
			CurrentlyEquipped = false
			ToolUnequipped:disconnect()
		end)
		ToggleHandleVisibility(true)
		Orb = BaseOrb:Clone()
		Orb.CFrame = Handle.CFrame
		PoisonOrb(Orb)
		local Mass = (Orb:GetMass() * Gravity * 100)
		BodyPosition = Create("BodyPosition"){
			maxForce = Vector3.new(Mass, Mass, Mass),
			position = Orb.CFrame.p,
			Parent = Orb,
		}
		BodyAngularVelocity = Create("BodyAngularVelocity"){
			maxTorque = Vector3.new(Mass, Mass, Mass),
			angularvelocity = Vector3.new((math.random() * 2), (math.random() * 2), (math.random() * 2)),
			Parent = Orb,
		}
		ToggleHandleVisibility(false)
		Orb.Parent = Tool
		Spawn(function()
			local OrbParticles = {}
			for i, v in pairs(Orb:GetChildren()) do
				if v:IsA("SpecialMesh") or v:IsA("Fire") or v:IsA("Smoke") or v:IsA("ParticleEmitter") then
					table.insert(OrbParticles, {Original = v:Clone(), Current = v})
				end
			end
			local StartTick = tick()
			while ControllingOrb and ToolEquipped and CurrentlyEquipped and CheckIfAlive() and Orb and Orb.Parent do
				local CalculatedCharge = Clamp((tick() - StartTick), 0, OrbMaxChargeTime)
				local ChargePercent = (Round((GetPercentage(0, OrbMaxChargeTime, CalculatedCharge)), 0.5) * 0.01)
				local ChargeSize = Clamp((OrbSize.Max * ChargePercent), OrbSize.Min, OrbSize.Max)
				if ChargeSize ~= Orb.Size.X then
					local OrbCF = Orb.CFrame
					Orb.Size = Vector3.new(ChargeSize, ChargeSize, ChargeSize)
					for i, v in pairs(OrbParticles) do
						if v.Original:IsA("SpecialMesh") and v.Current.MeshType == Enum.MeshType.FileMesh then
							v.Current.Scale = (v.Original.Scale * (ChargeSize * 0.75))
						elseif v.Original:IsA("Fire") or v.Original:IsA("Smoke") then
							v.Current.Size = (v.Original.Size * (ChargeSize * 1))
						elseif v.Original:IsA("ParticleEmitter") then
							local OriginalSize = v.Original.Size.Keypoints[1].Value
							v.Current.Size = NumberSequence.new((OriginalSize * (ChargeSize * 1)))
						end
					end
					local Mass = (Orb:GetMass() * Gravity * 100)
					BodyPosition.maxForce = Vector3.new(Mass, Mass, Mass)
					BodyAngularVelocity.maxTorque = Vector3.new(Mass, Mass, Mass)
					Orb.CFrame = OrbCF
				end
				Spawn(function()
					MouseData = InvokeClient("MouseData")
					if MouseData and MouseData.Position then
						local StartPos = Handle.Position
						local TargetPos = MouseData.Position
						local TargetDirection = CFrame.new(StartPos, TargetPos)
						local TargetDistance = (StartPos - TargetPos).Magnitude
						if TargetDistance &gt; 10 then
							TargetDistance = 10
						end
						local DesiredPos = (StartPos + TargetDirection.lookVector * TargetDistance)
						BodyPosition.position = DesiredPos
					end
				end)
				wait()
			end
			ControllingOrb = false
			if ToolUnequipped then
				ToolUnequipped:disconnect()
			end
			if not CheckIfAlive() or not ToolEquipped or not CurrentlyEquipped then
				DecayOrb(Orb)
				ToggleHandleVisibility(true, true)
			end
		end)
		wait(2)
	else
		if OrbPresent then
			ControllingOrb = false
			if Orb and Orb.Parent then
				if BodyPosition and BodyPosition.Parent then
					BodyPosition:Destroy()
				end
				if not MouseData then
					MouseData = InvokeClient("MouseData")
				end
				local ThisOrb = Orb
				if MouseData and MouseData.Position then
					local Powered = Create("StringValue"){
						Name = "Powered",
						Parent = Orb,
					}
					Sounds.Blast:Play()
					local Mass = (Orb:GetMass() * Gravity)
					local BodyVelocity = Create("BodyForce"){
						force = Vector3.new(0, Mass, 0),
						Parent = Orb,
					}
					local Force = 100
					local StartPos = Orb.Position
					local TargetPos = MouseData.Position
					local TargetDirection = CFrame.new(StartPos, TargetPos)
					local DesiredVelocity = (TargetDirection.lookVector * Force)
					local OrbCF = Orb.CFrame
					Debris:AddItem(Orb, 5)
					Delay(1, (function()
						DecayOrb(ThisOrb)
					end))
					Orb.Parent = game:GetService("Workspace")
					Orb.CFrame = OrbCF
					Orb.Velocity = DesiredVelocity
				else
					DecayOrb(ThisOrb)
				end
			end
			OrbPresent = false
		end
		wait(3)
		ToggleHandleVisibility(true, true)
		wait(2)
	end
	Tool.Enabled = true
end

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso") or Character:FindFirstChild("UpperTorso")
	if not CheckIfAlive() then
		return
	end
	OrbPresent = false
	ControllingOrb = false
	ToolEquipped = true
end

function Unequipped()
	OrbPresent = false
	ControllingOrb = false
	ToolEquipped = false
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

function OnServerInvoke(player, Mode, Value)
	if player ~= Player or not ToolEquipped or not CheckIfAlive() or not Mode or not Value then
		return
	end
end

ToggleHandleVisibility(true)

BaseOrb = Handle:Clone()
BaseOrb.Name = "Orb"
BaseOrb.CanCollide = false

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
			</Item>
		</Item>
		