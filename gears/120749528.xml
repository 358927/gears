<Item class="Model" referent="RBX135888F4EE3142A2BED31B013059ACB8">
			<Properties>
				<BinaryString name="AttributesSerialize" />
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">120749528</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags" />
				<OptionalCoordinateFrame name="WorldPivotData" />
			</Properties>
			<Item class="Tool" referent="RBXA7864305871D43D6A115B02C57B78540">
				<Properties>
					<BinaryString name="AttributesSerialize" />
					<bool name="CanBeDropped">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">true</bool>
					<CoordinateFrame name="Grip">
						<X>0.5</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>0.860230029</R00>
						<R01>0.41553843</R01>
						<R02>-0.295520216</R02>
						<R10>-0.509293437</R10>
						<R11>0.728590786</R11>
						<R12>-0.45801273</R12>
						<R20>0.024991408</R20>
						<R21>0.544502795</R21>
						<R22>0.838386655</R22>
					</CoordinateFrame>
					<token name="LevelOfDetail">0</token>
					<bool name="ManualActivationOnly">false</bool>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">ChiefjustusGavel</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="RequiresHandle">true</bool>
					<float name="ScaleFactor">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags" />
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=120607637</url></Content>
					<string name="ToolTip">For Justice!</string>
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>0.0264034271</X>
							<Y>66.1640549</Y>
							<Z>-0.0404586792</Z>
							<R00>-0.489459187</R00>
							<R01>-0.837605059</R01>
							<R02>0.242585033</R02>
							<R10>0.780070007</R10>
							<R11>-0.544902503</R11>
							<R12>-0.307524443</R12>
							<R20>0.389769644</R20>
							<R21>0.0387126654</R21>
							<R22>0.920098305</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Part" referent="RBX51CC81E2EA494DC7A2CF0692FC78D65C">
					<Properties>
						<bool name="Anchored">false</bool>
						<BinaryString name="AttributesSerialize" />
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>0.0264034271</X>
							<Y>66.1640549</Y>
							<Z>-0.0404586792</Z>
							<R00>-0.489459187</R00>
							<R01>-0.837605059</R01>
							<R02>0.242585033</R02>
							<R10>0.780070007</R10>
							<R11>-0.544902503</R11>
							<R12>-0.307524443</R12>
							<R20>0.389769644</R20>
							<R21>0.0387126654</R21>
							<R22>0.920098305</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized" />
						<string name="Name">Handle</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>7.59999657</X>
							<Y>0.600000024</Y>
							<Z>0.599999845</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBXB3C281C8B02A4CAFAFF5B08118B7A971">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=120607730</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>3.20000005</X>
								<Y>3.20000005</Y>
								<Z>3.20000005</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=120607792</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBXA42E38D634C04A4BB8E4557AB1D56795">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">true</bool>
							<string name="Name">Spin</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=120745021</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBXD026CD2E3FC9429D857D7E7E8DE9CF8F">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Swish</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=120745021</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBXFDD8FC799A6E4AE28050B3FC9BD58820">
						<Properties>
							<BinaryString name="AttributesSerialize" />
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">HitGround</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">0.100000001</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=116048294 </url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags" />
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
						</Properties>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBX7634446581C54BEF8C8CAB0818991729">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">LocalScript</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{24162339-0F5B-43C2-997D-8283E3AC0DE2}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")

Camera = game:GetService("Workspace").CurrentCamera

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ToolEquipped = false

function SetAnimation(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.Button1Down:connect(function()
		InvokeServer("MouseClick", {Down = true})
	end)
	Mouse.Button1Up:connect(function()
		InvokeServer("MouseClick", {Down = false})
	end)
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
	Mouse.Move:connect(function()
		InvokeServer("MouseMove", {Position = Mouse.Hit.p, Target = Mouse.Target})
	end)
	Humanoid:ChangeState(Enum.HumanoidStateType.None)
end

function Unequipped()
	ToolEquipped = false
	LocalObjects = {}
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end
	Humanoid:ChangeState(Enum.HumanoidStateType.Freefall) --Prevent the ability to fly by constantly equipping and unequipping the tool.
	Animations = {}
end

function InvokeServer(mode, value)
	pcall(function()
		local ServerReturn = ServerControl:InvokeServer(mode, value)
		return ServerReturn
	end)
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MousePosition" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	elseif mode == "DisableJump" then
		DisableJump(value)
	elseif mode == "SetLocalTransparencyModifier" and value and ToolEquipped then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							local CurrentTransparency = v.Object.LocalTransparencyModifier
							if ((not v.AutoUpdate and (CurrentTransparency == 1 or  CurrentTransparency == 0)) or v.AutoUpdate) then
								v.Object.LocalTransparencyModifier = v.Transparency
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXAA022F602090425F861ACA0FD6E002E9">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MouseIcon</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{C6679E06-D570-4029-9725-D48D9AE4150B}</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXE9BDBD918FDF49E5BB9856A9319E5F97">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=120735709</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">BeginSmash</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXF00895D81D1C48D0A42691CBB769B8E9">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=120735762</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">EndSmash</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXAE4435D807194A4F9397CC3AFA994EA7">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=120642286</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Equip</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXB81E9DAB56B8492693593488051D461E">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=120642355</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Idle</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX15E60FFD11DB47BB9F9456C922BF8608">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=120642404</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Run</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX8EE06C082B2D4E5890171A3C38AA3C43">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=120732433</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Spin</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX03D0D02259874FEBB41FCD19496B5F8F">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=120735631</url></Content>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">Swing</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Script" referent="RBXD042649E9BF34F1BBA1E33F12B06693D">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">MotorizeRightGrip</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{2EC1D84C-BBE9-46CF-96C0-C17E6674AFD9}</string>
						<ProtectedString name="Source">--Rescripted by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

ToolEquipped = false

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	local RightArm = Character:FindFirstChild("Right Arm")
	if RightArm then
		local RightGrip = RightArm:FindFirstChild("RightGrip")
		if RightGrip then
			RightGripMotor = Instance.new("Motor6D")
			RightGripMotor.Part0 = RightGrip.Part0
			RightGripMotor.Part1 = RightGrip.Part1
			RightGrip.Part0 = nil
			RightGrip.Part1 = nil
			RightGripMotor.Parent = RightGrip.Parent
			if RightGrip and RightGrip.Parent then
				RightGrip:Destroy()
				Debris:AddItem(RightGrip, 0)
			end
		end
	end
	ToolEquipped = true
end

function Unequipped()
	if RightGripMotor and RightGripMotor.Parent then
		RightGripMotor:Destroy()
		Debris:AddItem(RightGripMotor, 0)
	end
	ToolEquipped = false
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Script" referent="RBXE52D0673EA3B4A49980C916BA9C6F2BA">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null /></Content>
						<string name="Name">Script</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{95EB950C-8E46-47C5-AB84-708E7902E5D9}</string>
						<ProtectedString name="Source">--Rescripted by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

local function Create_PrivImpl(objectType)
	if type(objectType) ~= 'string' then
		error("Argument of Create must be a string", 2)
	end
	--return the proxy function that gives us the nice Create'string'{data} syntax
	--The first function call is a function call using Lua's single-string-argument syntax
	--The second function call is using Lua's single-table-argument syntax
	--Both can be chained together for the nice effect.
	return function(dat)
		--default to nothing, to handle the no argument given case
		dat = dat or {}

		--make the object to mutate
		local obj = Instance.new(objectType)
		local parent = nil

		--stored constructor function to be called after other initialization
		local ctor = nil

		for k, v in pairs(dat) do
			--add property
			if type(k) == 'string' then
				if k == 'Parent' then
					-- Parent should always be set last, setting the Parent of a new object
					-- immediately makes performance worse for all subsequent property updates.
					parent = v
				else
					obj[k] = v
				end


			--add child
			elseif type(k) == 'number' then
				if type(v) ~= 'userdata' then
					error("Bad entry in Create body: Numeric keys must be paired with children, got a: "..type(v), 2)
				end
				v.Parent = obj


			--event connect
			elseif type(k) == 'table' and k.__eventname then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create.E\'"..k.__eventname.."\']` must have a function value\
							got: "..tostring(v), 2)
				end
				obj[k.__eventname]:connect(v)


			--define constructor function
			elseif k == t.Create then
				if type(v) ~= 'function' then
					error("Bad entry in Create body: Key `[Create]` should be paired with a constructor function, \
							got: "..tostring(v), 2)
				elseif ctor then
					--ctor already exists, only one allowed
					error("Bad entry in Create body: Only one constructor function is allowed", 2)
				end
				ctor = v


			else
				error("Bad entry ("..tostring(k).." =&gt; "..tostring(v)..") in Create body", 2)
			end
		end

		--apply constructor function if it exists
		if ctor then
			ctor(obj)
		end

		if parent then
			obj.Parent = parent
		end

		--return the completed object
		return obj
	end
end

--now, create the functor:
Create = setmetatable({}, {__call = function(tb, ...) return Create_PrivImpl(...) end})

--and create the "Event.E" syntax stub. Really it's just a stub to construct a table which our Create
--function can recognize as special.
Create.E = function(eventName)
	return {__eventname = eventName}
end


BaseUrl = "http://www.roblox.com/asset/?id="

BasePart = Instance.new("Part")
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

BaseParticle = BasePart:Clone()
BaseParticle.Name = "Particle"
BaseParticle.Transparency = 1
BaseParticle.Size = Vector3.new(0.5, 0.5, 0.5)
BaseParticle.CanCollide = false
ParticleFire = Instance.new("Fire")
ParticleFire.Name = "Fire"
ParticleFire.Size = 2
ParticleFire.Heat = 9
ParticleFire.Color = Color3.new((236 / 255), (139 / 255), (70 / 255))
ParticleFire.SecondaryColor = Color3.new((139 / 255), (80 / 255), (55 / 255))
ParticleFire.Parent = BaseParticle

TrailEffectPart = BasePart:Clone()
TrailEffectPart.Name = "TrailEffectPart"
TrailEffectPart.Size = Vector3.new(1, 0.4, 1)
TrailEffectPart.Anchored = true
TrailEffectPart.CanCollide = false
TrailMesh = Instance.new("SpecialMesh", TrailEffectPart)
TrailMesh.MeshType = Enum.MeshType.FileMesh
TrailMesh.TextureId = (BaseUrl .. "120736941")
TrailMesh.MeshId = (BaseUrl .. "1078075")
TrailMesh.Scale = Vector3.new(1.5, 3, 1.5)

PossibleSplashColors = {
	Color3.new((255 / 255), (0 / 255), (0 / 255)),
	Color3.new((255 / 255), (255 / 255), (255 / 255)),
	Color3.new((0 / 255), (0 / 255), (255 / 255))
}

ColorVectors = {
	Vector3.new(0, 0, (255 / 255)),
	Vector3.new((255 / 255), 0, 0),
	Vector3.new((255 / 255), (255 / 255), (255 / 255))
}
CurrentColor = 1

Animations = {
	BeginSmash = {Animation = Tool:WaitForChild("BeginSmash"), FadeTime = nil, Weight = nil, Speed = nil},
	EndSmash = {Animation = Tool:WaitForChild("EndSmash"), FadeTime = nil, Weight = nil, Speed = nil},
	Spin = {Animation = Tool:WaitForChild("Spin"), FadeTime = nil, Weight = nil, Speed = nil},
	Swing = {Animation = Tool:WaitForChild("Swing"), FadeTime = nil, Weight = nil, Speed = nil},
	Equip = {Animation = Tool:WaitForChild("Equip"), FadeTime = nil, Weight = nil, Speed = nil},
	Run = {Animation = Tool:WaitForChild("Run"), FadeTime = nil, Weight = nil, Speed = nil},
	Idle = {Animation = Tool:WaitForChild("Idle"), FadeTime = nil, Weight = nil, Speed = nil}
}

Sounds = {
	Spin = Handle:WaitForChild("Spin"),
	Swish = Handle:WaitForChild("Swish"),
	HitGround = Handle:WaitForChild("HitGround")
}

Rate = (1 / 60)

LastClick = 0

HammerTrailOn = false
PlayingRunning = false
DoingSwing = false
DoingSmash = false
DoingSpin = false
TrailActive = false

ServerControl = (Tool:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Tool

ToolEquipped = false

ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Bullet", TrailEffectPart.Name, BaseParticle.Name}

function CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.lower(v) == string.lower(String) then
			return true
		end
	end
	return false
end

function CheckIntangible(Hit)
	if Hit and Hit.Parent then
		if Hit.Transparency &gt; 0.8 or CheckTableForString(ProjectileNames, Hit.Name) then
			return true
		end
	end
	return false
end

function CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
	local Ignore = ((type(Ignore) == "table" and Ignore) or {Ignore})
	local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
	if RayHit and CheckIntangible(RayHit) then
		if DelayIfHit then
			wait()
		end
		RayHit, RayPos, RayNormal = CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
	end
	return RayHit, RayPos, RayNormal
end

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function TagHumanoid(humanoid, player)
	local CreatorTag = Instance.new("ObjectValue")
	CreatorTag.Name = "creator"
	CreatorTag.Value = player
	Debris:AddItem(CreatorTag, 2)
	CreatorTag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function Frand(Low, High)
	return (Low + math.random() * (High - Low))
end

function CreateSplashEffect(Pos)
	local SplashParts = {}
	for i = 1, 20 do
		local Particle = BaseParticle:Clone()
		Particle.Fire.Color = PossibleSplashColors[math.random(1, #PossibleSplashColors)]
		local BodyVelocity = Instance.new("BodyVelocity")
		BodyVelocity.P = 100000
		BodyVelocity.maxForce = Vector3.new(0, 0, 0)
		BodyVelocity.velocity = Vector3.new(Frand(-1, 1), Frand(0.5, 1), Frand(-1, 1)).unit * Frand(20, 80)
		BodyVelocity.Parent = Particle
		Particle.Velocity = BodyVelocity.velocity
		table.insert(SplashParts, Particle)
		Debris:AddItem(Particle, 0.5)
		Particle.Parent = game:GetService("Workspace")
		Particle.CFrame = CFrame.new(Pos)
		Delay(Frand(0.1, 0.4), (function()
			if Particle and Particle.Parent then
				Particle:Destroy()
			end
		end))
	end
end

function MakeTrail()
	Spawn(function()
		local LastEffectPos
		TrailActive = true
		Humanoid.AutoRotate = false
		while HammerTrailOn and ToolEquipped and CheckIfAlive() do
			Spawn(function()
				if not ParticleSpawn or not ParticleSpawn.Parent then
					ParticleSpawn = BasePart:Clone()
					ParticleSpawn.Name = "ParticleSpawn"
					ParticleSpawn.Transparency = 1
					ParticleSpawn.CanCollide = false
					local Weld = Instance.new("Weld")
					Weld.Part0 = Handle
					Weld.Part1 = ParticleSpawn
					Weld.C0 = CFrame.new(2.72, 0, 1)
					Weld.Parent = ParticleSpawn
					ParticleSpawn.Parent = Handle
				end
				local TrailPart = TrailEffectPart:Clone()
				local SpawnPos = ParticleSpawn.CFrame
				if LastEffectPos then
					local Distance = (SpawnPos.p - LastEffectPos).magnitude
					TrailPart.Mesh.Scale = Vector3.new(1.5, (Distance / 0.4), 1.5)
					CurrentColor = (CurrentColor + 1)
					if CurrentColor &gt; #ColorVectors then
						CurrentColor = 1
					end
					TrailPart.Mesh.VertexColor = ColorVectors[CurrentColor]
					Spawn(function()
						for i = 0, 1, 0.2 do
							TrailPart.Transparency = i
							wait(Rate)
						end
						TrailPart.Transparency = 1
					end)
					Debris:AddItem(TrailPart, 0.2)
					TrailPart.Parent = game:GetService("Workspace")
					TrailPart.CFrame = CFrame.new(SpawnPos.p, LastEffectPos) * CFrame.Angles(-(math.pi / 2), 0, 0)
				end
				LastEffectPos = SpawnPos.p
			end)
			wait(Rate)
		end
		if ParticleSpawn and ParticleSpawn.Parent then
			ParticleSpawn:Destroy()
		end
		Humanoid.AutoRotate = true
		TrailActive = false
		LastEffectPos = nil
	end)
end

function IsRunning()
	return ((Torso.Velocity - Vector3.new(0, Torso.Velocity.y, 0)).magnitude &gt; 1)
end

Handle.Touched:connect(function(Hit)
	if not Hit or not Hit.Parent then
		return
	end
	local character = Hit.Parent
	if character:IsA("Hat") then
		character = character.Parent
	end
	if character == Character then
		return
	end
	local player = Players:GetPlayerFromCharacter(character)
	if player and IsTeamMate(Player, player) then
		return
	end
	local humanoid = character:FindFirstChild("Humanoid")
	if not humanoid or humanoid.Health == 0 then
		return
	end
	UntagHumanoid(humanoid)
	TagHumanoid(humanoid, Player)
	humanoid:TakeDamage((DoingSpin and 10) or (DoingSmash and 30) or (DoingSwing and 100) or 0)
end)

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Head and Head.Parent and Torso and Torso.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Head = Character:FindFirstChild("Head")
	Torso = Character:FindFirstChild("Torso")
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		InvokeClient("PlayAnimation", Animations.Equip)
	end)
	local CurrentlyEquipped = true
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	ToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
	end)
	wait(1.135)
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	if not CurrentlyEquipped then
		return
	end
	PlayingRunning = IsRunning()
	if PlayingRunning then
		InvokeClient("PlayAnimation", {Animation = Animations.Run.Animation, FadeTime = 0})
	else
		InvokeClient("PlayAnimation", {Animation = Animations.Idle.Animation, FadeTime = 0})
	end
	ToolEquipped = true
	Spawn(function()
		while ToolEquipped do
			local Running = IsRunning()
			if not DoingSwing and not DoingSmash then
				if Running and not PlayingRunning then
					InvokeClient("StopAnimation", Animations.Idle)--{Animation = Animations.Idle.Animation, FadeTime = 0.3})
					InvokeClient("PlayAnimation", {Animation = Animations.Run.Animation, FadeTime = 0})
				elseif not Running and PlayingRunning then
					InvokeClient("StopAnimation", Animations.Idle)--{Animation = Animations.Run.Animation, FadeTime = 0.3})
					InvokeClient("PlayAnimation", {Animation = Animations.Idle.Animation, FadeTime = 0})
				end
			end
			PlayingRunning = Running
			wait(Rate)
		end
	end)
end

function Unequipped()
	HammerTrailOn = false
	DoingSwing = false
	DoingSpin = false
	DoingSmash = false
	for i, v in pairs(Sounds) do
		v:Stop()
	end
	for i, v in pairs({ToolUnequipped}) do
		if v then
			v:disconnect()
		end
	end
	for i, v in pairs({SpinForce, SmashForce}) do
		if v and v.Parent then
			v:Destroy()
		end
	end
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player == Player and ToolEquipped and value and CheckIfAlive() then
		if mode == "MouseClick" then
			local Down = value.Down
			if Down then
				if (tick() - LastClick) &lt; 0.3 and not DoingSmash and not DoingSpin and not TrailActive then
					LastClick = 0
					InvokeClient("StopAnimation", Animations.Swing)
					DoingSwing = false
					if IsRunning() then
						InvokeClient("PlayAnimation", Animations.Run)
					else
						InvokeClient("PlayAnimation", Animations.Idle)
					end
					DoingSmash = true
					Humanoid.Jump = true
					InvokeClient("DisableJump", true)
					SmashForce = Instance.new("BodyVelocity")
					SmashForce.Name = "SmashForce"
					SmashForce.maxForce = Vector3.new(0, 1000000, 0)
					SmashForce.velocity = Vector3.new(0, 100, 0)
					SmashForce.Parent = Torso
					game.Debris:AddItem(SmashForce, 0.1)
					InvokeClient("PlayAnimation", Animations.BeginSmash)
					wait(0.1)
					if Torso.Velocity.y &gt; 0 then
						while Torso.Velocity.y &gt; 0 do
							wait(Rate)
						end
						InvokeClient("StopAnimation", {Animation = Animations.BeginSmash.Animation, FadeTime = 0})
						HammerTrailOn = true
						MakeTrail()
						InvokeClient("PlayAnimation", {Animation = Animations.EndSmash.Animation, FadeTime = 0})
						local RayHit, RayPos, RayNormal = nil
						local AttackTime = tick()
						while (tick() - AttackTime) &lt; 3 and DoingSmash and ToolEquipped and CheckIfAlive() and not RayHit do
							RayHit, RayPos, RayNormal = CastRay(Torso.Position, Vector3.new(0, -1, 0), (Character:GetModelSize().Y / 2), {Character}, false)
							wait(Rate)
						end
						if RayHit then
							local Direction = (Handle.CFrame * CFrame.new(2.72, 0.01, 1) * CFrame.Angles(0,(math.pi / 2),(math.pi / 2))).p
							CreateSplashEffect(Direction)
							Sounds.HitGround:Play()
						end
					end
					InvokeClient("StopAnimation", Animations.EndSmash)
					InvokeClient("DisableJump", false)
					HammerTrailOn = false
					DoingSmash = false
				elseif not DoingSpin and not DoingSmash and not DoingSwing and not TrailActive then
					LastClick = tick()
					DoingSwing = true
					InvokeClient("StopAnimation", Animations.Run)
					InvokeClient("StopAnimation", Animations.Idle)
					Sounds.Swish:Play()
					InvokeClient("PlayAnimation", Animations.Swing)
					wait(1.3)
					if DoingSwing then
						if IsRunning() then
							InvokeClient("PlayAnimation", {Animation = Animations.Run.Animation, FadeTime = 0})
						else
							InvokeClient("PlayAnimation", {Animation = Animations.Idle.Animation, FadeTime = 0})
						end
					end
					DoingSwing = false
				end
			end
		elseif mode == "KeyPress" then
			local Down = value.Down
			local Key = value.Key
			local ByteKey = string.byte(Key)
			if Key == "q" then
				if Down then
					if not DoingSmash and not DoingSwing and not TrailActive then
						Sounds.Spin:Play()
						DoingSpin = true
						InvokeClient("PlayAnimation", Animations.Spin)
						for i, v in pairs({SpinForce, SmashForce}) do
							if v and v.Parent then
								v:Destroy()
							end
						end
						SpinForce = Instance.new("BodyAngularVelocity")
						SpinForce.maxTorque = Vector3.new(0, 10000000, 0)
						SpinForce.angularvelocity = Vector3.new(0, 10, 0)
						SpinForce.P = 10000
						SpinForce.Parent = Torso
						HammerTrailOn = true
						MakeTrail()
						while DoingSpin do
							wait(Rate)
						end
						Sounds.Spin:Stop()
						HammerTrailOn = false
						InvokeClient("StopAnimation", Animations.Spin)
						if SpinForce and SpinForce.Parent then
							SpinForce:Destroy()
						end
						DoingSpin = false
						if IsRunning then
							InvokeClient("PlayAnimation", Animations.Run)
						else
							InvokeClient("PlayAnimation", Animations.Idle)
						end
					end
				else
					DoingSpin = false
				end
			end
		end
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

for i, v in pairs(Handle:GetChildren()) do
	if v:IsA("BasePart") and v.Name == "ParticleSpawn" then
		v:Destroy()
	end
end

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
					</Properties>
				</Item>
				<Item class="Camera" referent="RBXDDFFC2E0EB094D3EB43DAE0401488B40">
					<Properties>
						<BinaryString name="AttributesSerialize" />
						<CoordinateFrame name="CFrame">
							<X>4.1864419</X>
							<Y>67.3484192</Y>
							<Z>3.11517072</Z>
							<R00>0.503230035</R00>
							<R01>-0.187634349</R01>
							<R02>0.84353596</R02>
							<R10>7.45057971e-09</R10>
							<R11>0.976142466</R11>
							<R12>0.217131078</R12>
							<R20>-0.864152431</R20>
							<R21>-0.10926687</R21>
							<R22>0.491224259</R22>
						</CoordinateFrame>
						<Ref name="CameraSubject">null</Ref>
						<token name="CameraType">5</token>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<float name="FieldOfView">70</float>
						<token name="FieldOfViewMode">0</token>
						<CoordinateFrame name="Focus">
							<X>2.63433695</X>
							<Y>66.9488983</Y>
							<Z>2.21131873</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="HeadLocked">true</bool>
						<float name="HeadScale">1</float>
						<string name="Name">ThumbnailCamera</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags" />
						<bool name="VRTiltAndRollEnabled">false</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		